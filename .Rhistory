pivot_wider(names_from = "survey_year", values_from = "n") %>%
pivot_longer(-c(plot, name, seeded),
names_to = "survey_year", values_to = "n") %>%
mutate(n = if_else(seeded == 1 & n > 0, 1, 0)) %>%
group_by(name, survey_year) %>%
summarise(
total_established = sum(n, na.rm = TRUE),
total_seeded = sum(seeded, na.rm = TRUE),
.groups = "keep"
) %>%
filter(total_seeded > 0) %>%
mutate(rate = total_established / total_seeded,
rate = round(rate, digits = 2),
seeded = "1") %>%
pivot_wider(names_from = "survey_year",
values_from = c("rate", "total_seeded", "total_established")) %>%
select(-total_seeded_2019, -total_seeded_2020, -total_seeded_2021)
traits <- traits %>%
left_join(data, by = "name")
View(traits)
data %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.factor), ~as.numeric(.x)))
traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.factor), ~as.numeric(.x)))
test <- traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.factor), ~as.numeric(.x)))
View(test)
View(traits)
traits <- read_csv("data_raw_traits.csv", col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
.default = "f",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = FALSE, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = as.character(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = TRUE) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
View(traits)
traits <- read_csv("data_raw_traits.csv", col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
.default = "f",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = FALSE, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = as.character(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = TRUE) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
View(traits)
traits <- read_csv("data_raw_traits.csv", col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
.default = "c",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = FALSE, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = as.character(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = TRUE) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Combine with species_experiment table ###
traits <- traits %>%
semi_join(species_experiment, by = "name")
### Check typos ###
sites_experiment %>%
filter(!str_detect(id, "_seeded$")) %>%
janitor::tabyl(vegetation_cover)
test <- traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.factor), ~as.numeric(.x)))
traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.factor), ~as.numeric(.x)))
traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.character), ~as.numeric(.x)))
traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.character), ~as.numeric(.x))) %>%
summarise(across(wherre(is.numeric), ~sum(.x)))
traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.character), ~as.numeric(.x))) %>%
summarise(across(where(is.numeric), ~sum(.x)))
### Start ###
rm(list = ls())
setwd(here("data", "raw"))
#installr::updateR(browse_news = FALSE, install_R = TRUE, copy_packages = TRUE, copy_Rprofile.site = TRUE, keep_old_packages = TRUE, update_packages = TRUE, start_new_R = TRUE, quit_R = TRUE, print_R_versions = TRUE, GUI = FALSE)
#checklist::setup_source()
#checklist::check_source()
#renv::status()
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Load data ##################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#______________________________________________________________________________
## 1 Sites ####################################################################
sites_experiment <- read_csv("data_raw_sites.csv", col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
.default = "f",
survey_date.seeded = col_date(format = "%Y-%m-%d"),
survey_date.2018 = col_date(format = "%Y-%m-%d"),
survey_date.2019 = col_date(format = "%Y-%m-%d"),
survey_date.2020 = col_date(format = "%Y-%m-%d"),
survey_date.2021 = col_date(format = "%Y-%m-%d"),
botanist.2018 = "c",
botanist.2019 = "c",
botanist.2020 = "c",
botanist.2021 = "c",
vegetation_cover.2018 = "d",
vegetation_cover.2019 = "d",
vegetation_cover.2020 = "d",
vegetation_cover.2021 = "d",
biomass.2019 = "d"
)) %>%
pivot_longer(
starts_with("vegetation_cover") |
starts_with("botanist") |
starts_with("biomass") |
starts_with("survey_date"),
names_to = c("x", "survey_year"),
names_sep = "\\.",
values_to = "n",
values_transform = list (n = as.character)
) %>%
pivot_wider(names_from = "x", values_from = "n") %>%
mutate(plot = str_replace(plot, "-", "_"),
plot = str_replace(plot, "L_", "L"),
plot = str_replace(plot, "W_", "W"),
id = str_c(plot, survey_year, sep = "_"),
plot = factor(plot),
id = factor(id),
vegetation_cover = as.numeric(vegetation_cover),
biomass = as.numeric(biomass)) %>%
filter(!(site == "C" & (survey_year == "seeded" |
survey_year == "2018" |
survey_year == "2019" |
survey_year == "2020" |
survey_year == "2021")))
### Sabatini et al. (2021) Global Ecol Biogeogr:
### https://doi.org/10.1111/geb.13346
sites_splot <- read_delim(here("data", "raw", "sabatini_etal_2021",
"sPlotOpen_header.txt"),
col_names = TRUE, na = c("", "NA", "na"),
col_types = cols(
.default = "?",
Cover_algae_layer = "d"
))
### Bauer et al. (2022) Zenodo:
### https://doi.org/10.5281/zenodo.6334100
sites_bauer <- read_csv(here("data", "raw", "bauer_etal_2022",
"data_sites_bauer_etal_2022.csv"),
col_names = TRUE, na = c("", "NA", "na"),
col_types = cols(
.default = "?"
))
species_experiment <- data.table::fread("data_raw_species_20211112.csv",
sep = ",",
dec = ".",
skip = 0,
header = TRUE,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
select(name, all_of(sites_experiment$id)) %>%
mutate(total = sum(c_across(
starts_with("L") | starts_with("W")),
na.rm = TRUE),
presence = if_else(total > 0, 1, 0)) %>%
# filter only species which occur at least one time:
filter(presence == 1) %>%
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0)))
### Sabatini et al. (2021) Global Ecol Biogeogr:
### https://doi.org/10.1111/geb.13346
species_splot <- read_delim(here("data", "raw", "sabatini_etal_2021",
"sPlotOpen_DT.txt"),
col_names = TRUE, na = c("", "NA", "na"), col_types =
cols(
.default = "?"
)) %>%
filter(Abundance_scale == "CoverPerc")
### Bauer et al. (2022) Zenodo:
### https://doi.org/10.5281/zenodo.6334100
species_bauer <- read_csv(here("data", "raw", "bauer_etal_2022",
"data_species_bauer_etal_2022.csv"),
col_names = TRUE, na = c("", "NA", "na"),
col_types = cols(
.default = "?"
))
### Create list with species names and their frequency ###
specieslist <- species_experiment %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = TRUE),
.keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
#write_csv(specieslist, here("outputs", "tables", "specieslist_20221102.csv"))
#______________________________________________________________________________
## 3 Seedmixes #################################################################
seedmixes <- data.table::fread("data_raw_species_experiment_20211112.csv",
sep = ",",
dec = ".",
skip = 0,
header = TRUE,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
arrange(name) %>%
select(name, ends_with("seeded")) %>%
filter(name %in% species_experiment$name) %>%
select(name, sort(tidyselect::peek_vars())) %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(-name, names_to = "id", values_to = "seeded") %>%
separate(id, c("plot"), sep = "_(?!.*_)",
remove = TRUE, extra = "drop", fill = "warn", convert = FALSE)
traits <- read_csv("data_raw_traits.csv", col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
.default = "c",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = FALSE, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = as.character(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = TRUE) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Combine with species_experiment table ###
traits <- traits %>%
semi_join(species_experiment, by = "name")
seedmixes <- data.table::fread("data_raw_species_experiment_20211112.csv",
sep = ",",
dec = ".",
skip = 0,
header = TRUE,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
arrange(name) %>%
select(name, ends_with("seeded")) %>%
filter(name %in% species_experiment$name) %>%
select(name, sort(tidyselect::peek_vars())) %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(-name, names_to = "id", values_to = "seeded") %>%
separate(id, c("plot"), sep = "_(?!.*_)",
remove = TRUE, extra = "drop", fill = "warn", convert = FALSE)
seedmixes <- data.table::fread("data_raw_species_20211112.csv",
sep = ",",
dec = ".",
skip = 0,
header = TRUE,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
arrange(name) %>%
select(name, ends_with("seeded")) %>%
filter(name %in% species_experiment$name) %>%
select(name, sort(tidyselect::peek_vars())) %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(-name, names_to = "id", values_to = "seeded") %>%
separate(id, c("plot"), sep = "_(?!.*_)",
remove = TRUE, extra = "drop", fill = "warn", convert = FALSE)
rm(list = setdiff(ls(), c("sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "sites_bauer",
"traits", "seedmixes")))
traits <- traits %>%
mutate(
target = if_else(
ffh6510 == "1" | ffh6210 == "1" | biotope_target == "1" |
table_31 == "1" | table_34 == "1" | table_35 == "1" | table_36 == "1" |
mapped_2011 == "1" | special_target == "1",
"1", "0"
)
)
sites <- sites_experiment %>%
mutate(surveyDate = as_date(survey_date),
seeding_date = if_else(
exposition == "north", ymd("20180413"), ymd("20180427")
),
age = interval(seeding_date, survey_date) %/% days(1),
block = str_c(site, exposition, sep = "_"),
block = factor(block)
)
### Establishment ###
data <- species_experiment %>%
pivot_longer(cols = -name, names_to = "id", values_to = "n") %>%
left_join(sites_experiment, by = "id") %>%
mutate(n = if_else(n > 0 & survey_year == "seeded", 1, n)) %>%
select(plot, name, survey_year, n) %>%
pivot_wider(names_from = "survey_year", values_from = "n") %>%
pivot_longer(-c(plot, name, seeded),
names_to = "survey_year", values_to = "n") %>%
mutate(n = if_else(seeded == 1 & n > 0, 1, 0)) %>%
group_by(name, survey_year) %>%
summarise(
total_established = sum(n, na.rm = TRUE),
total_seeded = sum(seeded, na.rm = TRUE),
.groups = "keep"
) %>%
filter(total_seeded > 0) %>%
mutate(rate = total_established / total_seeded,
rate = round(rate, digits = 2),
seeded = "1") %>%
pivot_wider(names_from = "survey_year",
values_from = c("rate", "total_seeded", "total_established")) %>%
select(-total_seeded_2019, -total_seeded_2020, -total_seeded_2021)
traits %>%
select(seeded_hay_meadow, seeded_dry_grassland) %>%
mutate(across(where(is.character), ~as.numeric(.x))) %>%
summarise(across(where(is.numeric), ~sum(.x)))
traits <- traits %>%
left_join(data, by = "name")
cover <- species %>%
left_join(traits, by = "name") %>%
select(name, family, target, seeded,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id",
values_to = "n",
cols = starts_with("L") |starts_with("W") | starts_with("C")
) %>%
group_by(id)
cover <- species_experiment %>%
left_join(traits, by = "name") %>%
select(name, family, target, seeded,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id",
values_to = "n",
cols = starts_with("L") |starts_with("W") | starts_with("C")
) %>%
group_by(id)
### * Graminoid, herb, and total coverage) ####
cover_total_and_graminoid <- cover %>%
group_by(id, family) %>%
summarise(total = sum(n, na.rm = TRUE), .groups = "keep") %>%
mutate(type = if_else(
family == "Poaceae" |
family == "Cyperaceae" |
family == "Juncaceae",
"graminoid_cover", "herb_cover")) %>%
group_by(id, type) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "keep") %>%
spread(type, total) %>%
mutate(accumulatedCov = graminoidCov + herbCov,
accumulatedCov = round(accumulatedCov, 1)) %>%
ungroup()
### * Graminoid, herb, and total coverage) ####
cover_total_and_graminoid <- cover %>%
group_by(id, family) %>%
summarise(total = sum(n, na.rm = TRUE), .groups = "keep") %>%
mutate(type = if_else(
family == "Poaceae" |
family == "Cyperaceae" |
family == "Juncaceae",
"graminoid_cover", "herb_cover")) %>%
group_by(id, type) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "keep") %>%
spread(type, total) %>%
mutate(accumulated_cover = graminoid_cover + herb_cover,
accumulated_cover = round(accumulated_cover, 1)) %>%
ungroup()
### * Target specis' coverage ####
cover_target <- cover %>%
filter(target == "yes") %>%
summarise(target_cover = sum(n, na.rm = TRUE)) %>%
mutate(target_cover = round(target_cover, 1)) %>%
ungroup()
### * Seeded species' coverage ####
cover_seeded <- species %>%
select(-contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "survey_year"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "survey_year", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"),
names_to = "survey_year", values_to = "value",
names_transform = list(survey_year = as.factor)) %>%
mutate(success = if_else(seeded > 0 & value > 0, value, 0)) %>%
group_by(plot, survey_year) %>%
summarise(seededCov = sum(success, na.rm = TRUE), .groups = "keep") %>%
ungroup() %>%
unite(id, plot, survey_year, sep = "_")
### * Seeded species' coverage ####
cover_seeded <- species_experiment %>%
select(-contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "survey_year"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "survey_year", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"),
names_to = "survey_year", values_to = "value",
names_transform = list(survey_year = as.factor)) %>%
mutate(success = if_else(seeded > 0 & value > 0, value, 0)) %>%
group_by(plot, survey_year) %>%
summarise(seededCov = sum(success, na.rm = TRUE), .groups = "keep") %>%
ungroup() %>%
unite(id, plot, survey_year, sep = "_")
### * Implement in sites data set ####
sites <- sites_experiment %>%
left_join(cover_total_and_graminoid, by = "id") %>%
left_join(cover_target, by = "id") %>%
left_join(cover_seeded, by = "id") %>%
### Calcute the ratio of target richness of total species richness
mutate(
targetCovratio = targetCov / accumulatedCov,
graminoidCovratio = graminoidCov / accumulatedCov,
seededCovratio = seededCov / accumulatedCov,
targetCovratio = round(targetCovratio, 3),
graminoidCovratio = round(graminoidCovratio, 3),
seededCovratio = round(seededCovratio, 3)
)
### * Implement in sites data set ####
sites <- sites_experiment %>%
left_join(cover_total_and_graminoid, by = "id") %>%
left_join(cover_target, by = "id") %>%
left_join(cover_seeded, by = "id") %>%
### Calcute the ratio of target richness of total species richness
mutate(
target_cover_ratio = target_cover / accumulated_cover,
graminoid_cover_ratio = graminoid_cover / accumulated_cover,
seeded_cover_ratio = seeded_cover / accumulated_cover,
target_cover_ratio = round(target_cover_ratio, 3),
graminoid_cover_ratio = round(graminoid_cover_ratio, 3),
seeded_cover_ratio = round(seeded_cover_ratio, 3)
)
rm(list = setdiff(ls(), c("sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "sites_bauer",
"traits", "seedmixes")))
