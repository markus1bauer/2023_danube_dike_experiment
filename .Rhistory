species %>%
select(name, starts_with("W6_13"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_14"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_15"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_16"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_17"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_18"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_19"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_20"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_21"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_22"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_23"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W6_24"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Packages ###
library(here)
library(tidyverse)
library(vegan)
library(FD) #dbFD()
library(naniar) #are_na()
### Start ###
#installr::updateR(browse_news = F, install_R = T, copy_packages = T, copy_Rprofile.site = T, keep_old_packages = T, update_packages = T, start_new_R = F, quit_R = T, print_R_versions = T, GUI = F)
rm(list = ls())
setwd(here("data/raw"))
species <- data.table::fread("data_raw_species.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
select(name, sort(tidyselect::peek_vars()))
species <- data.table::fread("data_raw_species.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
na_if(0) %>%
select(name, sort(tidyselect::peek_vars()))
View(species)
write_csv(species, here("data/raw/species_20211011.csv"))
#species <- data.table::fread("data_raw_species.csv",
species <- data.table::fread("species.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
select(name, starts_with("C"), ends_with("_seeded"), ends_with("_2018"), ends_with("_2019"), ends_with("_2020"), ends_with("_2021"))
View(species)
write_csv(species, here("data/raw/data_raw_species_20211011.csv"))
species <- data.table::fread("data_raw_species_20211007.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) #%>%
species <- data.table::fread("data_raw_species_20211011.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W") | starts_with("C")), na.rm = T),
presence = if_else(total > 0, 1, 0),
name = factor(name)) %>%
filter(presence == 1) %>% # filter species
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
na_if(0)
species <- data.table::fread("data_raw_species_20211011.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) #%>%
species <- data.table::fread("data_raw_species_20211011.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W") | starts_with("C")), na.rm = T),
presence = if_else(total > 0, 1, 0),
name = factor(name)) %>%
filter(presence == 1) %>% # filter species
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
na_if(0)
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
View(specieslist)
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) #%>%
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") #%>%
View(specieslist)
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
write_csv(specieslist, here("outputs/tables/specieslist_20211011.csv"))
### Start ###
#installr::updateR(browse_news = F, install_R = T, copy_packages = T, copy_Rprofile.site = T, keep_old_packages = T, update_packages = T, start_new_R = F, quit_R = T, print_R_versions = T, GUI = F)
rm(list = ls())
setwd(here("data/raw"))
sites <- read_csv("data_raw_sites.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
surveyDate_seeded = col_date(format = "%Y-%m-%d"),
surveyDate_2018 = col_date(format = "%Y-%m-%d"),
surveyDate_2019 = col_date(format = "%Y-%m-%d"),
surveyDate_2020 = col_date(format = "%Y-%m-%d"),
surveyDate_2021 = col_date(format = "%Y-%m-%d"),
botanist_2018 = "c",
botanist_2019 = "c",
botanist_2020 = "c",
botanist_2021 = "c",
vegetationCov_2018 = "c",
vegetationCov_2019 = "c",
vegetationCov_2020 = "c",
vegetationCov_2021 = "c",
bioMass_2019 = "c"
)) %>%
select(-starts_with("surveyDate")) %>%
pivot_longer(starts_with("vegetationCov_") | starts_with("botanist_") | starts_with("bioMass_"),
names_to = c("x", "surveyYear"),
names_sep = "_",
values_to = "n") %>%
pivot_wider(names_from = x, values_from = n) %>%
mutate(plot = str_replace(plot, "-", "_"),
plot = str_replace(plot, "L_", "L"),
plot = str_replace(plot, "W_", "W"),
id = str_c(plot, surveyYear, sep = "_"),
plot = factor(plot),
id = factor(id),
vegetationCov = as.numeric(vegetationCov),
surveyYear = as.numeric(surveyYear),
bioMass = as.numeric(bioMass)) %>%
filter(!(block == "C" & (surveyYear == "seeded" |
surveyYear == "2018" |
surveyYear == "2019" |
surveyYear == "2020")))
species <- data.table::fread("data_raw_species_20211011.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W") | starts_with("C")), na.rm = T),
presence = if_else(total > 0, 1, 0),
name = factor(name)) %>%
filter(presence == 1) %>% # filter species
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
na_if(0)
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
traits <- read_csv("data_raw_traits.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = F, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = factor(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = T) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Check congruency of traits and species table ###
traits[duplicated(traits$abb),]
#traits$name[which(!(traits$name %in% species$name))]
species$name[which(!(species$name %in% traits$name))]
traits <- semi_join(traits, species, by = "name")
### Check typos ###
sites %>%
filter(!str_detect(id, "_seeded$")) %>%
janitor::tabyl(vegetationCov)
#sites %>% filter(vegetationCov == 17)
species %>%
select(-name, -ends_with("_seeded")) %>%
unlist() %>%
janitor::tabyl()
species %>% # Check special typos
pivot_longer(-name, names_to = "id", values_to = "value") %>%
filter(value == 90)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W5_02"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L_01"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_01"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_02"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_11"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_13"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_19"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Start ###
#installr::updateR(browse_news = F, install_R = T, copy_packages = T, copy_Rprofile.site = T, keep_old_packages = T, update_packages = T, start_new_R = F, quit_R = T, print_R_versions = T, GUI = F)
rm(list = ls())
setwd(here("data/raw"))
sites <- read_csv("data_raw_sites.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
surveyDate_seeded = col_date(format = "%Y-%m-%d"),
surveyDate_2018 = col_date(format = "%Y-%m-%d"),
surveyDate_2019 = col_date(format = "%Y-%m-%d"),
surveyDate_2020 = col_date(format = "%Y-%m-%d"),
surveyDate_2021 = col_date(format = "%Y-%m-%d"),
botanist_2018 = "c",
botanist_2019 = "c",
botanist_2020 = "c",
botanist_2021 = "c",
vegetationCov_2018 = "c",
vegetationCov_2019 = "c",
vegetationCov_2020 = "c",
vegetationCov_2021 = "c",
bioMass_2019 = "c"
)) %>%
select(-starts_with("surveyDate")) %>%
pivot_longer(starts_with("vegetationCov_") | starts_with("botanist_") | starts_with("bioMass_"),
names_to = c("x", "surveyYear"),
names_sep = "_",
values_to = "n") %>%
pivot_wider(names_from = x, values_from = n) %>%
mutate(plot = str_replace(plot, "-", "_"),
plot = str_replace(plot, "L_", "L"),
plot = str_replace(plot, "W_", "W"),
id = str_c(plot, surveyYear, sep = "_"),
plot = factor(plot),
id = factor(id),
vegetationCov = as.numeric(vegetationCov),
surveyYear = as.numeric(surveyYear),
bioMass = as.numeric(bioMass)) %>%
filter(!(block == "C" & (surveyYear == "seeded" |
surveyYear == "2018" |
surveyYear == "2019" |
surveyYear == "2020")))
species <- data.table::fread("data_raw_species_20211011.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W") | starts_with("C")), na.rm = T),
presence = if_else(total > 0, 1, 0),
name = factor(name)) %>%
filter(presence == 1) %>% # filter species
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
na_if(0)
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
traits <- read_csv("data_raw_traits.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = F, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = factor(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = T) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Check congruency of traits and species table ###
traits[duplicated(traits$abb),]
#traits$name[which(!(traits$name %in% species$name))]
species$name[which(!(species$name %in% traits$name))]
traits <- semi_join(traits, species, by = "name")
### Check typos ###
sites %>%
filter(!str_detect(id, "_seeded$")) %>%
janitor::tabyl(vegetationCov)
#sites %>% filter(vegetationCov == 17)
species %>%
select(-name, -ends_with("_seeded")) %>%
unlist() %>%
janitor::tabyl()
species %>% # Check special typos
pivot_longer(-name, names_to = "id", values_to = "value") %>%
filter(value == 90)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_19"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Check missing data ###
miss_var_summary(sites, order = T)
vis_miss(sites, cluster = F)
miss_var_summary(traits, order = T)
vis_miss(traits, cluster = F, sort_miss = T)
#sites[is.na(sites$id),]
rm(list=setdiff(ls(), c("sites", "species", "traits")))
