)
)
sites <- sites_experiment %>%
mutate(
surveyDate = as_date(survey_date),
seeding_date = if_else(
exposition == "north", ymd("20180413"), ymd("20180427")
),
age = interval(seeding_date, survey_date) %/% days(1),
block = str_c(site, exposition, sep = "_"),
block = factor(block)
)
### b Establishment of species -------------------------------------------------
data <- species_experiment %>%
pivot_longer(cols = -name, names_to = "id", values_to = "n") %>%
left_join(sites_experiment, by = "id") %>%
mutate(n = if_else(n > 0 & survey_year == "seeded", 1, n)) %>%
select(plot, name, survey_year, n) %>%
pivot_wider(names_from = "survey_year", values_from = "n") %>%
pivot_longer(-c(plot, name, seeded),
names_to = "survey_year", values_to = "n") %>%
mutate(n = if_else(seeded == 1 & n > 0, 1, 0)) %>%
group_by(name, survey_year) %>%
summarise(
total_established = sum(n, na.rm = TRUE),
total_seeded = sum(seeded, na.rm = TRUE),
.groups = "keep"
) %>%
filter(total_seeded > 0) %>%
mutate(
rate = total_established / total_seeded,
rate = round(rate, digits = 2),
seeded = "1"
) %>%
pivot_wider(names_from = "survey_year",
values_from = c("rate", "total_seeded", "total_established")) %>%
select(-total_seeded_2019, -total_seeded_2020, -total_seeded_2021)
traits <- traits %>%
left_join(data, by = "name")
#_______________________________________________________________________________
## 2 Coverages #################################################################
cover <- species_experiment %>%
left_join(traits, by = "name") %>%
select(name, family, target, seeded,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id",
values_to = "n",
cols = starts_with("L") | starts_with("W") | starts_with("C")
) %>%
group_by(id)
#### Graminoid, herb, and total coverage) ###
cover_total_and_graminoid <- cover %>%
group_by(id, family) %>%
summarise(total = sum(n, na.rm = TRUE), .groups = "keep") %>%
mutate(
type = if_else(
family == "Poaceae" |
family == "Cyperaceae" |
family == "Juncaceae",
"graminoid_cover", "herb_cover")
) %>%
group_by(id, type) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "keep") %>%
spread(type, total) %>%
mutate(
accumulated_cover = graminoid_cover + herb_cover,
accumulated_cover = round(accumulated_cover, 1)
) %>%
ungroup()
#### Target specis' coverage ###
cover_target <- cover %>%
filter(target == "1") %>%
summarise(target_cover = sum(n, na.rm = TRUE)) %>%
mutate(target_cover = round(target_cover, 1)) %>%
ungroup()
#### Seeded species' coverage ###
cover_seeded <- species_experiment %>%
select(-contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "survey_year"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "survey_year", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"),
names_to = "survey_year", values_to = "value",
names_transform = list(survey_year = as.factor)) %>%
mutate(success = if_else(seeded > 0 & value > 0, value, 0)) %>%
group_by(plot, survey_year) %>%
summarise(seeded_cover = sum(success, na.rm = TRUE), .groups = "keep") %>%
ungroup() %>%
unite(id, plot, survey_year, sep = "_")
#### Implement in sites data set ###
sites_experiment <- sites_experiment %>%
left_join(cover_total_and_graminoid, by = "id") %>%
left_join(cover_target, by = "id") %>%
left_join(cover_seeded, by = "id") %>%
### Calculate the ratio of target cover of total cover
mutate(
target_cover_ratio = target_cover / accumulated_cover,
graminoid_cover_ratio = graminoid_cover / accumulated_cover,
seeded_cover_ratio = seeded_cover / accumulated_cover,
target_cover_ratio = round(target_cover_ratio, 3),
graminoid_cover_ratio = round(graminoid_cover_ratio, 3),
seeded_cover_ratio = round(seeded_cover_ratio, 3)
)
rm(list = setdiff(ls(), c(
"sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "species_bauer",
"traits"
)))
#_______________________________________________________________________________
## 3 Alpha diversity ##########################################################
### a Species richness ---------------------------------------------------------
species_richness <- species_experiment %>%
left_join(traits, by = "name") %>%
select(name, rlg, rlb, target, ffh6510, ffh6210,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id", values_to = "n",
cols = starts_with("L") | starts_with("W") | starts_with("C")
) %>%
mutate(n = if_else(n > 0, 1, 0)) %>%
group_by(id)
#### Total species richness ###
species_richness_all <- species_richness %>%
summarise(species_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Red list Germany (species richness) ###
species_richness_rlg <- species_richness %>%
filter(rlg == "1" | rlg == "2" | rlg == "3" | rlg == "V") %>%
summarise(rlg_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Red list Bavaria (species richness) ###
species_richness_rlb <- species_richness %>%
filter(rlb == "1" | rlb == "2" | rlb == "3" | rlb == "V") %>%
summarise(rlb_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Target species (species richness) ###
species_richness_target <- species_richness %>%
filter(target == "1") %>%
summarise(target_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Seeded species (species richness) ###
species_richness_seeded <- species_experiment %>%
select(-contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "survey_year"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "survey_year", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"), names_to = "survey_year", values_to = "value",
names_transform = list(survey_year = as.factor)) %>%
mutate(success_cover = if_else(seeded > 0 & value > 0, 1, 0)) %>%
group_by(plot, survey_year) %>%
summarise(seeded_richness = sum(success_cover, na.rm = TRUE),
.groups = "keep") %>%
ungroup() %>%
unite(id, plot, survey_year, sep = "_")
### FFH6510 species (species richness) ###
species_richness_ffh6510 <- species_richness %>%
filter(ffh6510 == "1") %>%
summarise(ffh6510_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### FFH6210 species (species richness) ###
species_richness_ffh6210 <- species_richness %>%
filter(ffh6210 == "1") %>%
summarise(ffh6210_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Implement in sites data set ###
sites_experiment <- sites_experiment %>%
left_join(species_richness_all, by = "id") %>%
left_join(species_richness_rlg, by = "id") %>%
left_join(species_richness_rlb, by = "id") %>%
left_join(species_richness_target, by = "id") %>%
left_join(species_richness_seeded, by = "id") %>%
left_join(species_richness_ffh6510, by = "id") %>%
left_join(species_richness_ffh6210, by = "id") %>%
### * Calculate Favourable Conservation Status (FCS) ####
### Helm et al. 2014 Divers Distrib
### https://doi.org/10.1111/ddi.12285
mutate(
fcs_target = log(
(target_richness + 1) / (species_richness - target_richness + 1)
),
fcs_seeded = log(
(seeded_richness + 1) / (species_richness - seeded_richness + 1)
),
fcs_target = round(fcs_target, 3),
fcs_seeded = round(fcs_seeded, 3)
)
### b Species evenness and shannon ---------------------------------------------
data <- species_experiment  %>%
pivot_longer(-name, names_to = "id", values_to = "value") %>%
pivot_wider(names_from = "name", values_from = "value") %>%
column_to_rownames("id") %>%
diversity(index = "shannon") %>%
as_tibble(rownames = NA) %>%
rownames_to_column(var = "id") %>%
mutate(id = factor(id)) %>%
rename(shannon = value)
sites_experiment <- sites_experiment %>%
left_join(data, by = "id") %>%
mutate(
evenness = shannon / log(species_richness),
shannon = round(shannon, digits = 3),
evenness = round(evenness, digits = 3)
)
rm(list = setdiff(ls(), c(
"sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "species_bauer",
"traits"
)))
#_______________________________________________________________________________
## 4 Reference sites ##########################################################
### a ESy: EUNIS expert vegetation classification system ----------------------
#### Start ###
### Bruelheide et al. 2021 Appl Veg Sci
### https://doi.org/10.1111/avsc.12562
expertfile <- "EUNIS-ESy-2020-06-08.txt" ### file of 2021 is not working
obs <- species_experiment %>%
pivot_longer(cols = -name,
names_to = "RELEVE_NR",
values_to = "Cover_Perc") %>%
rename(TaxonName = "name") %>%
mutate(
TaxonName = str_replace_all(TaxonName, "_", " "),
TaxonName = str_replace_all(TaxonName, "ssp", "subsp."),
TaxonName = as.factor(TaxonName),
TaxonName = fct_recode(
TaxonName,
"Cerastium fontanum" = "Cerastium fontanum subsp. vulgare",
"Silene latifolia" = "Silene latifolia subsp. alba"
)
) %>%
data.table::as.data.table()
header <- sites_experiment %>%
sf::st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
rename(
RELEVE_NR = id
) %>%
mutate(
"Altitude (m)" = 313,
Latitude = sf::st_coordinates(.)[, 2],
Longitude = sf::st_coordinates(.)[, 1],
Country = "Germany",
Coast_EEA = "N_COAST",
Dunes_Bohn = "N_DUNES",
Ecoreg = 686,
dataset = "Danube_experiment"
) %>%
select(RELEVE_NR, "Altitude (m)", Latitude, Longitude, Country,
Coast_EEA, Dunes_Bohn, Ecoreg, dataset) %>%
sf::st_drop_geometry()
setwd(here("R", "esy"))
source(here("R", "esy", "code", "prep.R"))
#### Step 1 and 2: Load and parse the expert file ###
source(here("R", "esy", "code", "step1and2_load-and-parse-the-expert-file.R"))
#### Step 3: Create a numerical plot x membership condition matrix  ###
plot.cond <- array(
0,
c(length(unique(obs$RELEVE_NR)), length(conditions)),
dimnames = list(
as.character(unique(obs$RELEVE_NR)),
conditions
)
)
### Step 4: Aggregate taxon levels ###
source(here("R", "esy", "code", "step4_aggregate-taxon-levels.R"))
(data <- obs %>%
group_by(TaxonName) %>%
slice(1) %>%
anti_join(AGG, by = c("TaxonName" = "ind")))
#### Step 5: Solve the membership conditions ###
mc <- 1
source(here("R", "esy", "code",
"step3and5_extract-and-solve-membership-conditions.R"))
table(result.classification)
eval.EUNIS(which(result.classification == "V12")[4], "V12")
sites_experiment <- sites_experiment %>%
mutate(
esy = result.classification,
esy = if_else(id == "W1_18_2021", "R", esy),
esy = if_else(id == "L6_01_2018", "V", esy),
esy = if_else(id == "L6_04_2018", "V", esy),
esy = if_else(id == "W1_18_2019", "R", esy),
esy = if_else(id == "L6_13_2021", "V", esy),
esy = if_else(id == "W3_06_2019", "R", esy),
esy = if_else(id == "W5_06_2019", "R", esy),
esy = if_else(id == "W5_24_2019", "R", esy),
esy = if_else(id == "W6_12_2019", "R", esy),
esy = if_else(id == "L2_14_seeded", "R", esy),
esy = if_else(id == "W2_11_2019", "R", esy),
esy = if_else(id == "W3_07_seeded", "R", esy),
esy = if_else(id == "W3_24_2019", "R", esy),
esy = if_else(id == "W4_17_2019", "R", esy),
esy = if_else(id == "L2_07_2018", "V", esy),
esy = if_else(id == "L2_12_2019", "V", esy),
esy = if_else(id == "L2_12_2020", "V", esy),
esy = if_else(id == "L3_12_2018", "V", esy),
esy = if_else(id == "L4_03_2018", "V", esy),
esy = if_else(id == "L5_06_2018", "V", esy),
esy = if_else(id == "L5_09_2019", "V", esy),
esy = if_else(id == "L6_18_2018", "R", esy),
esy = if_else(id == "W1_21_2018", "V", esy),
esy = if_else(id == "W3_03_2018", "V", esy),
esy = if_else(id == "W4_11_2018", "V", esy),
esy = if_else(id == "W4_24_2018", "V", esy)
)
table(sites_experiment$esy)
rm(list = setdiff(ls(), c(
"sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "species_bauer",
"traits", "result.classification"
)))
### b sPlotOpen ---------------------------------------------------------------
### Sabatini et al. (2021) Global Ecol Biogeogr
### https://doi.org/10.1111/geb.13346
data_sites <- sites_splot %>%
filter(
# Hay meadow: EUNIS2007 code E2.2
# Chytry et al. 2020 Appl Veg Sci
# https://doi.org/10.1111/avsc.12519
(ESY == "E22" |
# Dry grassland: EUNIS2007 code E1.2a
ESY == "E12a") &
Releve_area >= 1 &
Releve_area <= 25 &
Longitude > 10.89845 & # West: Augsburg
Longitude < 13.46434 & # East: Passau
Latitude > 	47.85298 & # South: Rosenheim
Latitude < 49.45095 & # North: Nuernberg
Elevation < 700
) %>%
rename_with(tolower) %>%
rename(id = plotobservationid, survey_year = date_of_recording,
plot_size = releve_area, reference = country) %>%
mutate(
id = paste0("S", id),
reference = str_replace(reference, "Germany", "reference"),
survey_year = year(survey_year),
source = if_else(
givd_id == "EU-DE-014",
"Jandt & Bruelheide (2012) Biodivers Ecol https://doi.org/10.7809/b-e.00146",
"other"
),
longitude = longitude * 10^5,
latitude = latitude * 10^5
) %>%
select(id, givd_id, source, longitude, latitude, elevation, plot_size,
survey_year, reference, esy) %>%
mutate(
survey_year = as.character(survey_year),
source = "Sabatini et al. (2021) Global Ecol Biogeogr https://doi.org/10.1111/geb.13346",
reference = if_else(
esy == "E12a", "positive_reference", if_else(
esy == "E22", "positive_reference", "other"
)
),
target_type = if_else(
esy == "E12a", "dry_grassland", if_else(
esy == "E22", "hay_meadow", "other"
)
),
esy = if_else(
esy == "E12a", "R1A", if_else(
esy == "E22", "R22", "other"
)
),
exposition = "other"
)
sites_splot <- data_sites
data_species <- species_splot %>%
rename(id = PlotObservationID, name = Species,
abundance = Original_abundance) %>%
mutate(id = paste0("S", id)) %>%
semi_join(data_sites, by = "id") %>%
select(id, name, abundance) %>%
pivot_wider(names_from = "id",
values_from = "abundance",
values_fn = sum) %>%
mutate(
name = str_replace(name, " ", "_"),
name = str_replace(name, "Helianthemum_ovatum", "Helianthemum_nummularium"),
name = str_replace(name, "Galium_album", "Galium_mollugo"),
name = str_replace(name, "Taraxacum", "Taraxacum_campylodes"),
name = str_replace(
name, "Cerastium_fontanum", "Cerastium_fontanum_ssp_vulgare"
),
name = str_replace(name, "Leucanthemum_ircutianum", "Leucanthemum_vulgare"),
name = str_replace(name, "Tragopogon_orientalis", "Tragopogon_pratensis"),
name = factor(name)
) %>%
group_by(name) %>%
summarise(across(everything(), ~ sum(.x, na.rm = TRUE)))
### Check species name congruency ###
data <- data_species %>%
anti_join(traits, by = "name") %>%
select(name) %>%
print(n = 50)
species_splot <- data_species
### c Our own regional dike surveys -------------------------------------------
### Bauer et al. (2022) Zenodo:
### https://doi.org/10.5281/zenodo.6334100
data_sites <- sites_bauer %>%
mutate(
reference = "reference",
plot_size = 25
) %>%
select(id, longitude, latitude, plot_size, survey_year, reference,
esy, exposition, orientation, plot_age, species_richness) %>%
filter(exposition == "south" | exposition == "north") %>%
mutate(
survey_year = as.character(survey_year),
source = "Bauer et al. (2023) EcoEvoRxiv https://doi.org/10.32942/X2959J",
reference = if_else(
esy == "R1A", "positive_reference", if_else(
esy == "R22", "positive_reference", if_else(
esy == "R", "Grassland", if_else(
esy == "?", "no", if_else(
esy == "+", "no", if_else(
esy == "R21", "Grassland", if_else(
esy == "V38", "negative_reference", "other"
)
)
)
)
)
)
),
target_type = if_else(
esy == "R1A", "dry_grassland", if_else(
esy == "R22", "hay_meadow", "other"
)
)
) %>%
filter(reference != "no" & reference != "Grassland")
sites_bauer <- data_sites
data_species <- species_bauer %>%
pivot_longer(cols = -name, names_to = "id", values_to = "value") %>%
pivot_wider(names_from = "name", values_from = "value") %>%
semi_join(data_sites, by = "id") %>%
pivot_longer(cols = -id, names_to = "name", values_to = "value") %>%
pivot_wider(names_from = "id", values_from = "value")
### Check species name congruency ###
data <- data_species %>%
anti_join(traits, by = "name") %>%
select(name) %>%
print(n = 50)
species_bauer <- data_species
rm(list = setdiff(ls(), c(
"sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "species_bauer",
"traits", "results.classification"
)))
#_______________________________________________________________________________
## 5 NMDS ######################################################################
### Create reference variable ###
data_experiment <- sites_experiment %>%
mutate(
reference = survey_year,
source = "experiment"
)
data_sites <- data_experiment %>%
bind_rows(sites_splot, sites_bauer) %>%
select(
id, plot, site, esy, reference,
exposition, sand_ratio, substrate_depth, target_type, seed_density,
survey_year, longitude, latitude, elevation, plot_size, botanist,
givd_id, source
) %>%
arrange(id)
#### Prepare species data ###
### Calculate rare species (< 0.5% accumulated cover in all plots)
rare <- species_experiment %>%
full_join(species_splot, by = "name") %>%
full_join(species_bauer, by = "name") %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(cols = -name, names_to = "id", values_to = "value") %>%
group_by(name) %>%
summarise(total_cover_species = sum(value)) %>%
filter(total_cover_species < 0.5)
data_species <- species_experiment %>%
full_join(species_splot, by = "name") %>%
full_join(species_bauer, by = "name") %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(cols = -name, names_to = "id", values_to = "value") %>%
filter(!(name %in% rare$name)) %>% # Use 'rare' to exclude rare species
pivot_wider(names_from = "name", values_from = "value") %>%
arrange(id) %>%
semi_join(data_sites, by = "id")
anti_join(data_sites, data_species, by = "id")
data_sites <- data_sites %>%
semi_join(data_species, by = "id")
data_species <- data_species %>%
column_to_rownames("id")
### * Model ####
set.seed(12)
