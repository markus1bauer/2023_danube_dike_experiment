plot(res20, type = "BC")
#### * seedmixes vs. 2021 ####
res21 <- TBI(species_seeded, species_2021,
method = "sorensen",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res21$BCD.summary # B = .349, C = .391, D = .740 (.471 vs. .528)
res21$t.test_B.C
tbi21 <- res21$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2021")
#### Test plot
plot(res21, type = "BC")
#### * Combine datasets ####
data_presence <- bind_rows(tbi18, tbi19, tbi20, tbi21) %>%
mutate(presabu = "presence")
rm(list = setdiff(ls(), c(
"sites_experiment", "species_experiment", "traits",
"sites_bauer", "sites_splot", "species_bauer", "species_splot",
"species_seeded", "species_2018", "species_2019", "species_2020",
"species_2021", "data_presence", "data_sites", "data_species"
)))
### b Calculate TBI Abundance -------------------------------------------------
#### * seedmixes vs. 2018 ####
res18 <- TBI(species_seeded, species_2018,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res18$BCD.summary # B = .657, C = .315, D = .973 (.675 vs. .324)
res18$t.test_B.C
tbi18 <- res18$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2018")
#### Test plot
plot(res18, type = "BC")
#### * seedmixes vs. 2019 ####
res19 <- TBI(species_seeded, species_2019,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res19$BCD.summary # B = .522, C = .383, D = .906 (.576 vs. .423)
res19$t.test_B.C
tbi19 <- res19$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2019")
#### Test plot
plot(res19, type = "BC")
#### * seedmixes vs. 2020 ####
res20 <- TBI(species_seeded, species_2020,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res20$BCD.summary # B = .488, C = .382, D = .870 (.560 vs. .439)
res20$t.test_B.C
tbi20 <- res20$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2020")
#### Test plot
plot(res20, type = "BC")
#### * seedmixes vs. 2021 ####
res21 <- TBI(species_seeded, species_2021,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res21$BCD.summary # B = .473, C = .390, D = .863 (.548 vs. .451)
res21$t.test_B.C
tbi21 <- res21$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2021")
#### Test plot
plot(res21, type = "BC")
#### * Combine datasets ####
data_abundance <- bind_rows(tbi18, tbi19, tbi20, tbi21) %>%
mutate(presabu = "abundance")
plot <- data_sites %>%
mutate(plot = factor(plot)) %>%
filter(str_detect(id, "2018")) %>%
pull(plot)
#### * Combine all TBIs ####
data <- data_presence %>%
add_row(data_abundance) %>%
mutate(
plot = rep(plot, length(data_abundance$comparison) * 2 / 288),
id = str_c(plot, comparison, sep = "_")
) %>%
rename(
B = "B/(2A+B+C)", C = "C/(2A+B+C)", D = "D=(B+C)/(2A+B+C)",
change = Change
) %>%
mutate(
change = C - B,
across(c(B, C, D, change), ~ round(.x, digits = 4))
) %>%
select(id, B, C, D, presabu)
View(sites_experiment)
View(data)
sites_temporal <- sites_experiment %>%
filter(survey_year != "seeded") %>%
left_join(data, by = "id") %>%
select(
id, plot, site, longitude, latitude, elevation, plot_size, exposition,
orientation, sand_ratio, substrate_depth, target_type, seed_density,
survey_year, botanist, B, C, D, presabu
) %>%
mutate(persistence = (1 - B) * 100)
View(sites_temporal)
rm(list = setdiff(ls(), c(
"sites_experiment", "species_experiment", "traits", "sites_temporal",
"sites_bauer", "sites_splot", "species_bauer", "species_splot"
)))
write_csv(
sites_temporal,
here("data", "processed", "data_processed_sites_temporal.csv")
)
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
library(brms)
### Start ###
rm(list = ls())
### Load data ###
sites <- read_csv(
here("data", "processed", "data_processed_sites_temporal.csv"),
col_names = TRUE, na = c("na", "NA", ""),
col_types = cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c("hay_meadow", "dry_grassland")),
seed_density = "f",
exposition = col_factor(levels = c("north", "south")),
survey_year = "c"
)
) %>%
### Exclude data of seed mixtures
filter(presabu == "presence") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, sep = " "),
botanist_year = factor(botanist_year),
id = factor(id),
n = persistence
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
plot1 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = exposition)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Exposition")
plot2 <- ggplot(sites, aes(y = n, x = survey_year_fct)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Survey year")
plot3 <- ggplot(sites %>% filter(survey_year == 2021), aes(y = n, x = site)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Blocks")
plot4 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = botanist_year)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Botanist:survey year")
(plot1 + plot2) / (plot3 + plot4)
plot4 <- ggplot(sites, aes(y = n, x = botanist_year)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Botanist:survey year")
(plot1 + plot2) / (plot3 + plot4)
### Load data ###
sites <- read_csv(
here("data", "processed", "data_processed_sites_temporal.csv"),
col_names = TRUE, na = c("na", "NA", ""),
col_types = cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c("hay_meadow", "dry_grassland")),
seed_density = "f",
exposition = col_factor(levels = c("north", "south")),
survey_year = "c"
)
) %>%
### Exclude data of seed mixtures
filter(presabu == "presence") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, exposition, sep = " "),
botanist_year = factor(botanist_year),
id = factor(id),
n = persistence
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
View(sites)
plot1 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = exposition)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Exposition")
plot2 <- ggplot(sites, aes(y = n, x = survey_year_fct)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Survey year")
plot3 <- ggplot(sites %>% filter(survey_year == 2021), aes(y = n, x = site)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Blocks")
plot4 <- ggplot(sites, aes(y = n, x = botanist_year)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Botanist:survey year")
(plot1 + plot2) / (plot3 + plot4)
sites %>% group_by(exposition) %>% count(site)
boxplot(sites$n)
ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
ggplot(sites, aes(x = n)) + geom_histogram(binwidth = 0.03)
ggplot(sites, aes(x = n)) + geom_density()
### Model specifications ###
iter = 10000
chains = 4
thin = 2
seed = 123
warmup = floor(iter / 2)
priors <- c(
set_prior("normal(0, 20)", class = "Intercept"),
set_prior("normal(0, 20)", class = "b"),
set_prior("normal(-2.5, 20)", class = "b", coef = "sand_ratio25"),
set_prior("normal(-5, 20)", class = "b", coef = "sand_ratio50"),
set_prior("normal(5, 20)", class = "b", coef = "expositionsouth"),
set_prior("normal(-2.5, 20)", class = "b", coef = "survey_year_fct2019"),
set_prior("normal(-5, 20)", class = "b", coef = "survey_year_fct2020"),
set_prior("normal(-7.5, 20)", class = "b", coef = "survey_year_fct2021"),
set_prior("cauchy(0, 10)", class = "sigma")
)
m_simple <- brm(
n ~ sand_ratio + target_type + exposition + survey_year_fct +
substrate_depth + seed_density +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
save(m_simple, file = here(
"outputs", "models", "model_persistence_simple.Rdata"
))
renv::status()
renv::snaphshot()
renv::snapshot()
m_full <- brm(
n ~ sand_ratio * target_type * exposition * survey_year_fct +
substrate_depth * seed_density +
substrate_depth:exposition +
seed_density:exposition +
substrate_depth:survey_year_fct +
seed_density:survey_year_fct +
substrate_depth:exposition:survey_year_fct +
seed_density:exposition:survey_year_fct +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
library(brms)
### Start ###
rm(list = ls())
### Load data ###
sites <- read_csv(
here("data", "processed", "data_processed_sites_temporal.csv"),
col_names = TRUE, na = c("na", "NA", ""),
col_types = cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c("hay_meadow", "dry_grassland")),
seed_density = "f",
exposition = col_factor(levels = c("north", "south")),
survey_year = "c"
)
) %>%
### Exclude data of seed mixtures
filter(presabu == "presence") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, exposition, sep = " "),
botanist_year = factor(botanist_year),
id = factor(id),
n = persistence
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
m_full <- brm(
n ~ sand_ratio * target_type * exposition * survey_year_fct +
substrate_depth * seed_density +
substrate_depth:exposition +
seed_density:exposition +
substrate_depth:survey_year_fct +
seed_density:survey_year_fct +
substrate_depth:exposition:survey_year_fct +
seed_density:exposition:survey_year_fct +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
### Model specifications ###
iter = 10000
chains = 4
thin = 2
seed = 123
warmup = floor(iter / 2)
priors <- c(
set_prior("normal(0, 20)", class = "Intercept"),
set_prior("normal(0, 20)", class = "b"),
set_prior("normal(-2.5, 20)", class = "b", coef = "sand_ratio25"),
set_prior("normal(-5, 20)", class = "b", coef = "sand_ratio50"),
set_prior("normal(5, 20)", class = "b", coef = "expositionsouth"),
set_prior("normal(-2.5, 20)", class = "b", coef = "survey_year_fct2019"),
set_prior("normal(-5, 20)", class = "b", coef = "survey_year_fct2020"),
set_prior("normal(-7.5, 20)", class = "b", coef = "survey_year_fct2021"),
set_prior("cauchy(0, 10)", class = "sigma")
)
m_full <- brm(
n ~ sand_ratio * target_type * exposition * survey_year_fct +
substrate_depth * seed_density +
substrate_depth:exposition +
seed_density:exposition +
substrate_depth:survey_year_fct +
seed_density:survey_year_fct +
substrate_depth:exposition:survey_year_fct +
seed_density:exposition:survey_year_fct +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
m_full2 <- brm(
n ~ sand_ratio * target_type * exposition * survey_year_fct +
substrate_depth * seed_density +
substrate_depth:exposition +
seed_density:exposition +
substrate_depth:survey_year_fct +
seed_density:survey_year_fct +
substrate_depth:exposition:survey_year_fct +
seed_density:exposition:survey_year_fct +
botanist_year +
(1 | site/plot),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
m_full <- m_full2
m1 <- brm(
n ~ sand_ratio * substrate_depth * exposition * survey_year_fct +
target_type + seed_density +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
m1 <- brm(
n ~ sand_ratio * substrate_depth * exposition * survey_year_fct +
target_type + seed_density +
botanist_year +
(1 | site/plot),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
save(m_full, file = here("outputs", "models", "model_persistence_full.Rdata"))
m1 <- brm(
n ~ sand_ratio * substrate_depth * exposition * survey_year_fct +
target_type + seed_density +
botanist_year +
(1 | site/plot),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
save(m1, file = here("outputs", "models", "model_persistence_1.Rdata"))
m2 <- brm(
n ~ sand_ratio * target_type * exposition * survey_year_fct +
substrate_depth + seed_density +
substrate_depth:exposition +
seed_density:exposition +
substrate_depth:survey_year_fct +
seed_density:survey_year_fct +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
m2 <- brm(
n ~ sand_ratio * target_type * exposition * survey_year_fct +
substrate_depth + seed_density +
substrate_depth:exposition +
seed_density:exposition +
substrate_depth:survey_year_fct +
seed_density:survey_year_fct +
botanist_year +
(1 | site/plot),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
save(m2, file = here("outputs", "models", "model_persistence_2.Rdata"))
m3 <- brm(
n ~ (sand_ratio + target_type + seed_density + substrate_depth) *
exposition * survey_year_fct +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
