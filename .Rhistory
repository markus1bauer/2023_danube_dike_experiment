"b_seed_density8",
"b_expositionsouth",
#"b_survey_year_fct2019",
#"b_survey_year_fct2020",
#"b_survey_year_fct2021",
"sd_site__Intercept",
"sd_site:plot__Intercept",
"sigma"
)
)
posterior2 <- m_2 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
"b_sand_ratio25",
"b_sand_ratio50",
"b_substrate_depth15",
"b_target_typedry_grassland",
"b_seed_density8",
"b_expositionsouth",
#"b_survey_year_fct2019",
#"b_survey_year_fct2020",
#"b_survey_year_fct2021",
"sd_site__Intercept",
"sd_site:plot__Intercept",
"sigma"
)
)
mcmc_intervals(
posterior1,
prob = 0.66,
prob_outer = 0.95,
point_est = "mean"
)
mcmc_intervals(
posterior2,
prob = 0.66,
prob_outer = 0.95,
point_est = "mean"
)
#### * Posterior predictive check ####
#### Kernel density
p1 <- ppc_dens_overlay(y, yrep1[1:50, ])
p2 <- ppc_dens_overlay(y, yrep2[1:50, ])
p1 / p2
y <- sites$n
yrep1 <- posterior_predict(m_1, draws = 500)
yrep2 <- posterior_predict(m_2, draws = 500)
#### * Posterior predictive check ####
#### Kernel density
p1 <- ppc_dens_overlay(y, yrep1[1:50, ])
p2 <- ppc_dens_overlay(y, yrep2[1:50, ])
p1 / p2
#### * Posterior predictive check ####
#### Kernel density
p1 <- ppc_dens_overlay(y, yrep1[1:500, ])
p2 <- ppc_dens_overlay(y, yrep2[1:500, ])
p1 / p2
#### * DHARMa ####
DHARMa.helpers::dh_check_brms(m_1, integer = TRUE)
DHARMa.helpers::dh_check_brms(m_2, integer = TRUE)
m_5 <- load(file = here("outputs", "models", "model_fcs_2.Rdata"))
### Packages ###
library(here)
library(tidyverse)
suppressPackageStartupMessages(library(brms))
suppressPackageStartupMessages(library(tidybayes))
library(ggbeeswarm)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv(here("data", "processed", "data_processed_sites.csv"),
col_names = TRUE, na = c("na", "NA", ""), col_types =
cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c(
"hay_meadow", "dry_grassland"
)),
seed_density = "f",
exposition = col_factor(levels = c(
"north", "south"
)),
survey_year = "c"
)) %>%
filter(survey_year != "seeded") %>%
mutate(
n = fcs_target,
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year_fct, botanist, sep = " "),
) %>%
select(
id, plot, site, botanist_year, exposition, sand_ratio, substrate_depth,
target_type, seed_density, survey_year_fct, n
)
### * Model ####
load(file = here("outputs", "models", "model_fcs_2.Rdata"))
model <- sites %>%
add_epred_draws(m2, allow_new_levels = TRUE)
### * Functions ####
theme_mb <- function() {
theme(
panel.background = element_rect(fill = "white"),
text = element_text(size = 9, color = "black"),
strip.text = element_text(size = 10),
axis.text = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.title = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.line = element_line(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = 9),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, "cm"),
plot.margin = margin(0, 0, 0, 0, "cm")
)
}
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ######################################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## 1 Marginal effects #########################################################
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(breaks = c("hay_meadow", "dry_grassland"),
labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", color = "", y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
theme_get()
set_theme(theme_gray())
### Packages ###
library(here)
library(tidyverse)
library(brms)
library(DHARMa)
#remotes::install_github("Pakillo/DHARMa.helpers")
library(DHARMa.helpers)
library(bayesplot)
library(loo)
library(tidybayes)
library(patchwork)
library(emmeans)
### Start ###
rm(list = ls())
### Load data ###
sites <- read_csv(here("data", "processed", "data_processed_sites.csv"),
col_names = TRUE, na = c("na", "NA", ""), col_types =
cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c(
"hay_meadow", "dry_grassland"
)),
seed_density = "f",
exposition = col_factor(levels = c(
"north", "south"
)),
survey_year = "c"
)) %>%
### Exclude data of seed mixtures
filter(survey_year != "seeded") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, sep = " "),
botanist_year = factor(botanist_year),
n = fcs_target,
id = factor(id)
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
load(file = here("outputs", "models", "model_fcs_2.Rdata"))
m_1 <- m2
#### * Preparation ####
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
"b_sand_ratio25",
"b_sand_ratio50",
"b_substrate_depth15",
"b_target_typedry_grassland",
"b_seed_density8",
"b_expositionsouth",
"b_survey_year_fct2019",
"b_survey_year_fct2020",
"b_survey_year_fct2021",
"sd_site__Intercept",
"sd_site:plot__Intercept",
"sigma"
)
)
mcmc_intervals(
posterior1,
prob = 0.66,
prob_outer = 0.95,
point_est = "mean"
) +
theme_classic()
### Packages ###
library(here)
library(tidyverse)
suppressPackageStartupMessages(library(brms))
suppressPackageStartupMessages(library(tidybayes))
library(ggbeeswarm)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv(here("data", "processed", "data_processed_sites.csv"),
col_names = TRUE, na = c("na", "NA", ""), col_types =
cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c(
"hay_meadow", "dry_grassland"
)),
seed_density = "f",
exposition = col_factor(levels = c(
"north", "south"
)),
survey_year = "c"
)) %>%
filter(survey_year != "seeded") %>%
mutate(
n = fcs_target,
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year_fct, botanist, sep = " "),
) %>%
select(
id, plot, site, botanist_year, exposition, sand_ratio, substrate_depth,
target_type, seed_density, survey_year_fct, n
)
### * Model ####
load(file = here("outputs", "models", "model_fcs_2.Rdata"))
model <- sites %>%
add_epred_draws(m2, allow_new_levels = TRUE)
### * Functions ####
theme_mb <- function() {
theme(
panel.background = element_rect(fill = "white"),
text = element_text(size = 9, color = "black"),
strip.text = element_text(size = 10),
axis.text = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.title = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.line = element_line(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = 9),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, "cm"),
plot.margin = margin(0, 0, 0, 0, "cm")
)
}
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ######################################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## 1 Marginal effects #########################################################
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(breaks = c("hay_meadow", "dry_grassland"),
labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", color = "", y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
theme_set(theme_gray())
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(breaks = c("hay_meadow", "dry_grassland"),
labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", color = "", y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
range(sites$n)
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 2.0), breaks = seq(-100, 400, 1)) +
scale_color_manual(breaks = c("hay_meadow", "dry_grassland"),
labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", color = "", y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
ggsave(here("outputs", "figures",
"figure_3_fcs_epred_800dpi_24x8cm2.tiff"),
dpi = 800, width = 24, height = 8, units = "cm")
p1 + theme(legend.position = "bottom")
ggsave(here("outputs", "figures",
"figure_3_fcs_epred_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
## 2 Coefficients #############################################################
m_simple %>%
gather_draws(
b_sand_ratio25, b_sand_ratio50, b_substrate_depth15,
b_target_typedry_grassland, b_seed_density8,
b_expositionsouth,
) %>%
mutate(
.variable = as.factor(.variable),
.variable = fct_relevel(
.variable, "b_sand_ratio25", "b_sand_ratio50", "b_substrate_depth15",
"b_target_typedry_grassland", "b_seed_density8",
"b_expositionsouth", "b_survey_year_fct2019",
"b_survey_year_fct2020", "b_survey_year_fct2021"
),
.variable = fct_relevel(.variable, rev),
.variable = fct_recode(
.variable,
"Hay meadow vs. Dry grassland" = "b_target_typedry_grassland",
"Sand ratio: 0 vs. 25 %" = "b_sand_ratio25",
"Sand ratio: 0 vs. 50 %" = "b_sand_ratio50",
"Substrate depth: 30 vs. 15 cm" = "b_substrate_depth15",
"Seed density: 4 vs. 8 g/m²" = "b_seed_density8",
"North vs. south" = "b_expositionsouth",
"2018 vs. 2019" = "b_survey_year_fct2019",
"2018 vs. 2020" = "b_survey_year_fct2020",
"2018 vs. 2021" = "b_survey_year_fct2021"
)
) %>%
ggplot(aes(x = .value, y = .variable)) +
geom_vline(xintercept = 0, linetype = "dashed") +
stat_halfeye() +
scale_x_continuous(breaks = seq(-100, 400, .5)) +
labs(x = expression(Delta ~ Favourabale ~ Conservation ~ Status ~ "(FCS)"),
y = "") +
theme_mb()
m2 %>%
gather_draws(
b_sand_ratio25, b_sand_ratio50, b_substrate_depth15,
b_target_typedry_grassland, b_seed_density8,
b_expositionsouth,
) %>%
mutate(
.variable = as.factor(.variable),
.variable = fct_relevel(
.variable, "b_sand_ratio25", "b_sand_ratio50", "b_substrate_depth15",
"b_target_typedry_grassland", "b_seed_density8",
"b_expositionsouth", "b_survey_year_fct2019",
"b_survey_year_fct2020", "b_survey_year_fct2021"
),
.variable = fct_relevel(.variable, rev),
.variable = fct_recode(
.variable,
"Hay meadow vs. Dry grassland" = "b_target_typedry_grassland",
"Sand ratio: 0 vs. 25 %" = "b_sand_ratio25",
"Sand ratio: 0 vs. 50 %" = "b_sand_ratio50",
"Substrate depth: 30 vs. 15 cm" = "b_substrate_depth15",
"Seed density: 4 vs. 8 g/m²" = "b_seed_density8",
"North vs. south" = "b_expositionsouth",
"2018 vs. 2019" = "b_survey_year_fct2019",
"2018 vs. 2020" = "b_survey_year_fct2020",
"2018 vs. 2021" = "b_survey_year_fct2021"
)
) %>%
ggplot(aes(x = .value, y = .variable)) +
geom_vline(xintercept = 0, linetype = "dashed") +
stat_halfeye() +
scale_x_continuous(breaks = seq(-100, 400, .5)) +
labs(x = expression(Delta ~ Favourabale ~ Conservation ~ Status ~ "(FCS)"),
y = "") +
theme_mb()
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_24x8cm2.tiff"),
dpi = 800, width = 24, height = 8, units = "cm")
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 10, units = "cm")
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 8, units = "cm")
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 6, units = "cm")
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_16.5x6cm.tiff"),
dpi = 800, width = 16.5, height = 6, units = "cm")
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_16.5x5cm.tiff"),
dpi = 800, width = 16.5, height = 5, units = "cm")
