pivot_wider(site, name) %>%
column_to_rownames("site")
Ttraits <- column_to_rownames(Ttraits, "name")
log_Ttraits <- log(Ttraits)
TdiversityAbu <- dbFD(log_Ttraits, Tspecies, w.abun = T,
calc.FRic = F, calc.FDiv = F, corr = "cailliez")
sites$fdisAbuLHS <- TdiversityAbu$FDis
length(traitsLHS$name) / (herbCount - undefinedSpeciesCount)
### b SLA -------------------------------------------------------------------------------------------
Tspecies <- semi_join(species, traitsSLA, by = "name")
Ttraits <- semi_join(traitsSLA, Tspecies, by = "name")
Tspecies <- Tspecies %>%
pivot_longer(-name, "site", "value") %>%
pivot_wider(site, name) %>%
column_to_rownames("site")
Ttraits <- column_to_rownames(Ttraits, "name")
log_Ttraits <- log(Ttraits)
TdiversityAbu <- dbFD(log_Ttraits, Tspecies, w.abun = T,
calc.FRic = F, calc.FDiv = F, corr = "sqrt");
sites$fdisAbuSla <- TdiversityAbu$FDis
sites$cwmAbuSla <- TdiversityAbu$CWM$sla %>%
as.character() %>% as.numeric() %>% exp()
length(traitsSLA$name) / (herbCount - undefinedSpeciesCount)
### c Seed mass -------------------------------------------------------------------------------------------
Tspecies <- semi_join(species, traitsSM, by = "name")
Ttraits <- semi_join(traitsSM, Tspecies, by = "name")
Tspecies <- Tspecies %>%
pivot_longer(-name, "site", "value") %>%
pivot_wider(site, name) %>%
column_to_rownames("site")
Ttraits <- column_to_rownames(Ttraits, "name")
log_Ttraits <- log(Ttraits)
TdiversityAbu <- dbFD(log_Ttraits, Tspecies, w.abun = T,
calc.FRic = F, calc.FDiv = F, corr = "sqrt");
sites$fdisAbuSeedmass <- TdiversityAbu$FDis
sites$cwmAbuSeedmass <- TdiversityAbu$CWM$seedmass %>%
as.character() %>% as.numeric() %>% exp()
length(traitsSM$name) / (herbCount - undefinedSpeciesCount)
### d Canopy height -------------------------------------------------------------------------------------------
Tspecies <- semi_join(species, traitsH, by = "name")
Ttraits <- semi_join(traitsH, Tspecies, by = "name")
Tspecies <- Tspecies %>%
pivot_longer(-name, "site", "value") %>%
pivot_wider(site, name) %>%
column_to_rownames("site")
Ttraits <- column_to_rownames(Ttraits, "name")
log_Ttraits <- log(Ttraits)
TdiversityAbu <- dbFD(log_Ttraits, Tspecies, w.abun = T,
calc.FRic = F, calc.FDiv = F, corr = "sqrt");
sites$fdisAbuHeight <- TdiversityAbu$FDis
sites$cwmAbuHeight <- TdiversityAbu$CWM$height %>%
as.character() %>% as.numeric() %>% exp()
length(traitsH$name) / (herbCount - undefinedSpeciesCount)
### e Specific root length -------------------------------------------------------------------------------------------
Tspecies <- semi_join(species, traitsSRL, by = "name")
Ttraits <- semi_join(traitsSRL, Tspecies, by = "name")
Tspecies <- Tspecies %>%
pivot_longer(-name, "site", "value") %>%
pivot_wider(site, name) %>%
column_to_rownames("site")
Ttraits <- column_to_rownames(Ttraits, "name")
log_Ttraits <- log(Ttraits)
TdiversityAbu <- dbFD(log_Ttraits, Tspecies, w.abun = T,
calc.FRic = F, calc.FDiv = F, corr = "sqrt");
sites$fdisAbuSrl <- TdiversityAbu$FDis
sites$cwmAbuSrl <- TdiversityAbu$CWM$srl %>%
as.character() %>% as.numeric() %>% exp()
length(traitsSRL$name) / (herbCount - undefinedSpeciesCount)
### f Root mass fraction -------------------------------------------------------------------------------------------
Tspecies <- semi_join(species, traitsRMF, by = "name")
Ttraits <- semi_join(traitsRMF, Tspecies, by = "name")
Tspecies <- Tspecies %>%
pivot_longer(-name, "site", "value") %>%
pivot_wider(site, name) %>%
column_to_rownames("site")
Ttraits <- column_to_rownames(Ttraits, "name")
log_Ttraits <- log(Ttraits)
TdiversityAbu <- dbFD(log_Ttraits, Tspecies, w.abun = T,
calc.FRic = F, calc.FDiv = F, corr = "sqrt");
sites$fdisAbuRmf <- TdiversityAbu$FDis
sites$cwmAbuRmf <- TdiversityAbu$CWM$rmf %>%
as.character() %>% as.numeric() %>% exp()
length(traitsRMF$name) / (herbCount - undefinedSpeciesCount)
### g All -------------------------------------------------------------------------------------------
Tspecies <- semi_join(species, traitsAll, by = "name")
Ttraits <- semi_join(traitsAll, Tspecies, by = "name")
Tspecies <- Tspecies %>%
pivot_longer(-name, "site", "value") %>%
pivot_wider(site, name) %>%
column_to_rownames("site")
Ttraits <- column_to_rownames(Ttraits, "name")
log_Ttraits <- log(Ttraits)
TdiversityAbu <- dbFD(log_Ttraits, Tspecies, w.abun = T,
calc.FRic = F, calc.FDiv = F, corr = "cailliez")
sites$fdisAbuAll <- TdiversityAbu$FDis
length(traitsAll$name) / (herbCount - undefinedSpeciesCount)
setwd(here("data/processed"))
write_csv2(sites, "data_processed_sites.csv")
write_csv2(species, "data_processed_species.csv")
write_csv2(traits, "data_processed_traits.csv")
write_csv2(tbiAbu, "data_processed_tbiAbu.csv")
write_csv2(tbiPa, "data_processed_tbiPa.csv")
### Packages ###
library(here)
library(tidyverse)
library(raster)
library(ggmap)
library(sf)
library(mapview)
library(mapedit)
### Start ###
rm(list = ls())
setwd(here("data/raw/spatial"))
register_google(key = "AIzaSyB5nQU_dgB_kPsQkk-_cq7pA0g1-2qka4E")
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Load shp files ##########################################################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## 1 Base maps #################################################################################################
germany <- raster::getData('GADM', country = 'DEU', level = 0, download =  T) %>%
st_as_sf() %>%
st_set_crs(4326)
bg_google_satellite <- get_map(
location = c(lon = 12.886, lat = 48.839),
zoom = 15,
scale = 1,
maptype = "satellite",
color = "color",
source = "google"
)
ggmap(bg_google_satellite)
bg_stamen_terrain <- get_map(
location= c(left = 12.87, bottom = 48.835, right = 12.895, top = 48.845),
zoom = 14,
scale = 1,
maptype = "terrain-background",
source = "stamen"
)
ggmap(bg_stamen_terrain)
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(tidyverse)
library(sf)
library(raster)
library(ggmap)
library(tmap)
library(RColorBrewer)
library(ggrepel)
library(patchwork)
library(grid)
### Start ###
rm(list = ls())
setwd(here("data/processed/spatial"))
### Load data ###
germany <- st_read("germany.shp")
danube <- st_read("danube.shp")
dikes <- st_read("dikes.shp")
blocks <- st_read("blocks.shp")
blocks2 <- read_csv2("blocks2.csv", col_names = T, col_types =
cols(block = col_factor())
)
bg_google_satellite2 <- raster("bg_google_satellite2.tif")
load("bg_google_satellite.rda")
load("bg_stamen_terrain.rda")
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ##############################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
themeMB <- function(){
theme(
panel.background = element_rect(fill = NA),
panel.grid = element_line(colour = NA),
text  = element_text(size = 10, color = "black"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position = "none",
plot.margin = margin(.5, 0, 0, 0, "cm")
)
}
## 1 Map with ggmap ##############################################################################
### a Map of project site -----------------------------------------------------------------------
(sitesGraph <- ggmap(bg_google_satellite) +
geom_point(data = blocks2, aes(x = x, y = y), size = 2, color = "white") +
geom_text_repel(data = blocks2, aes(label = block, x = x, y = y),
min.segment.length = 1,
color = "white",
direction = "y",
nudge_y = .001) +
coord_sf(crs = st_crs(4326)) +
ggspatial::annotation_scale(location = "br",
pad_y = unit(0.6, "cm"),
pad_x = unit(0.7, "cm"),
width_hint = 0.4,
height = unit(0.15, "cm"),
text_col = "white") +
ggspatial::annotation_north_arrow(location = "br",
pad_y = unit(1.1, "cm"),
