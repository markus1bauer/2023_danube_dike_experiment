### c Table of seedmixes -------------------------------------------------------
data <- species_experiment %>%
select(name, ends_with("seeded")) %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(-name, names_to = "id", values_to = "seeded") %>%
separate(id, c("plot"), sep = "_(?!.*_)",
remove = TRUE, extra = "drop", fill = "warn", convert = FALSE) %>%
filter(seeded > 0) %>%
select(plot, name, seeded) %>%
arrange(plot, name)
write_csv(data, here("outputs", "tables", "table_a3_seedmixes.csv"))
#______________________________________________________________________________
## 2 Coverages #################################################################
cover <- species_experiment %>%
left_join(traits, by = "name") %>%
select(name, family, target, seeded,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id",
values_to = "n",
cols = starts_with("L") |starts_with("W") | starts_with("C")
) %>%
group_by(id)
#### Graminoid, herb, and total coverage) ###
cover_total_and_graminoid <- cover %>%
group_by(id, family) %>%
summarise(total = sum(n, na.rm = TRUE), .groups = "keep") %>%
mutate(type = if_else(
family == "Poaceae" |
family == "Cyperaceae" |
family == "Juncaceae",
"graminoid_cover", "herb_cover")) %>%
group_by(id, type) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "keep") %>%
spread(type, total) %>%
mutate(accumulated_cover = graminoid_cover + herb_cover,
accumulated_cover = round(accumulated_cover, 1)) %>%
ungroup()
#### Target specis' coverage ###
cover_target <- cover %>%
filter(target == "1") %>%
summarise(target_cover = sum(n, na.rm = TRUE)) %>%
mutate(target_cover = round(target_cover, 1)) %>%
ungroup()
#### Seeded species' coverage ###
cover_seeded <- species_experiment %>%
select(-contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "survey_year"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "survey_year", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"),
names_to = "survey_year", values_to = "value",
names_transform = list(survey_year = as.factor)) %>%
mutate(success = if_else(seeded > 0 & value > 0, value, 0)) %>%
group_by(plot, survey_year) %>%
summarise(seeded_cover = sum(success, na.rm = TRUE), .groups = "keep") %>%
ungroup() %>%
unite(id, plot, survey_year, sep = "_")
#### Implement in sites data set ###
sites_experiment <- sites_experiment %>%
left_join(cover_total_and_graminoid, by = "id") %>%
left_join(cover_target, by = "id") %>%
left_join(cover_seeded, by = "id") %>%
### Calcute the ratio of target richness of total species richness
mutate(
target_cover_ratio = target_cover / accumulated_cover,
graminoid_cover_ratio = graminoid_cover / accumulated_cover,
seeded_cover_ratio = seeded_cover / accumulated_cover,
target_cover_ratio = round(target_cover_ratio, 3),
graminoid_cover_ratio = round(graminoid_cover_ratio, 3),
seeded_cover_ratio = round(seeded_cover_ratio, 3)
)
rm(list = setdiff(ls(), c(
"sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "species_bauer",
"traits"
)))
#______________________________________________________________________________
## 3 Alpha diversity ##########################################################
### a Species richness ---------------------------------------------------------
species_richness <- species_experiment %>%
left_join(traits, by = "name") %>%
select(name, rlg, rlb, target, ffh6510, ffh6210,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id", values_to = "n",
cols = starts_with("L") | starts_with("W") | starts_with("C")
) %>%
mutate(n = if_else(n > 0, 1, 0)) %>%
group_by(id)
#### Total species richness ###
species_richness_all <- species_richness %>%
summarise(species_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Red list Germany (species richness) ###
species_richness_rlg <- species_richness %>%
filter(rlg == "1" | rlg == "2" | rlg == "3" | rlg == "V") %>%
summarise(rlg_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Red list Bavaria (species richness) ###
species_richness_rlb <- species_richness %>%
filter(rlb == "1" | rlb == "2" | rlb == "3" | rlb == "V") %>%
summarise(rlb_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Target species (species richness) ###
species_richness_target <- species_richness %>%
filter(target == "1") %>%
summarise(target_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Seeded species (species richness) ###
species_richness_seeded <- species_experiment %>%
select(-contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "survey_year"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "survey_year", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"), names_to = "survey_year", values_to = "value",
names_transform = list(survey_year = as.factor)) %>%
mutate(success_cover = if_else(seeded > 0 & value > 0, 1, 0)) %>%
group_by(plot, survey_year) %>%
summarise(seeded_richness = sum(success_cover, na.rm = TRUE),
.groups = "keep") %>%
ungroup() %>%
unite(id, plot, survey_year, sep = "_")
### FFH6510 species (species richness) ###
species_richness_ffh6510 <- species_richness %>%
filter(ffh6510 == "1") %>%
summarise(ffh6510_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### FFH6210 species (species richness) ###
species_richness_ffh6210 <- species_richness %>%
filter(ffh6210 == "1") %>%
summarise(ffh6210_richness = sum(n, na.rm = TRUE)) %>%
ungroup()
#### Implement in sites data set ###
sites_experiment <- sites_experiment %>%
left_join(species_richness_all, by = "id") %>%
left_join(species_richness_rlg, by = "id") %>%
left_join(species_richness_rlb, by = "id") %>%
left_join(species_richness_target, by = "id") %>%
left_join(species_richness_seeded, by = "id") %>%
left_join(species_richness_ffh6510, by = "id") %>%
left_join(species_richness_ffh6210, by = "id") %>%
### * Calculate Favourable Conservation Status (FCS) ####
### Helm et al. 2014 Divers Distrib
### https://doi.org/10.1111/ddi.12285
mutate(
fcs_target = log(
(target_richness + 1) / (species_richness - target_richness + 1)
),
fcs_seeded = log(
(seeded_richness + 1 ) / (species_richness - seeded_richness + 1)
),
fcs_target = round(fcs_target, 3),
fcs_seeded = round(fcs_seeded, 3)
)
### b Species evenness and shannon ----------------------------------------------
data <- species_experiment  %>%
pivot_longer(-name, names_to = "id", values_to = "value") %>%
pivot_wider(names_from = "name", values_from = "value") %>%
column_to_rownames("id") %>%
diversity(index = "shannon") %>%
as_tibble(rownames = NA) %>%
rownames_to_column(var = "id") %>%
mutate(id = factor(id)) %>%
rename(shannon = value)
sites_experiment <- sites_experiment %>%
left_join(data, by = "id") %>%
mutate(
evenness = shannon / log(species_richness),
shannon = round(shannon, digits = 3),
evenness = round(evenness, digits = 3)
)
rm(list = setdiff(ls(), c(
"sites_experiment", "sites_splot", "sites_bauer",
"species_experiment", "species_splot", "species_bauer",
"traits"
)))
### Prepare data ###
data_sites <- sites_experiment %>%
# Choose only plots which were surveyed in each year:
filter(accumulated_cover > 0) %>%
add_count(plot) %>%
filter(n == max(n)) %>%
select(id, plot)
data_species <- species_experiment %>%
select(where(~ !all(is.na(.x)))) %>%
mutate(across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
pivot_longer(-name, names_to = "id", values_to = "value") %>%
pivot_wider(names_from = "name", values_from = "value") %>%
separate(id, c("plot", "year"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
arrange(id) %>%
semi_join(data_sites, by = "id") %>%
select(plot, year, tidyselect::peek_vars(), -id)
### Separate each year in several tibbles ###
for (i in unique(data_species$year)) {
nam <- paste("species", i, sep = "_")
assign(nam, data_species %>%
filter(year == i) %>%
select(-year) %>%
column_to_rownames(var = "plot"))
}
View(data_sites)
### a Calculate TBI Presence --------------------------------------------------
### Temporal Beta diversity Index
### Legendre (2019) Ecol Evol
### https://doi.org/10.1002/ece3.4984
#### * seedmixes vs. 2018 ####
res18 <- TBI(species_seeded, species_2018,
method = "sorensen",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res18$BCD.summary # B = .571, C = .304, D = .875 (.652 vs. .347)
res18$t.test_B.C
tbi18 <- res18$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2018")
#### Test plot
plot(res18, type = "BC")
#### * seedmixes vs. 2019 ####
res19 <- TBI(species_seeded, species_2019,
method = "sorensen",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res19$BCD.summary # B = .377, C = .357, D = .735 (.513 vs. .486)
res19$t.test_B.C
tbi19 <- res19$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2019")
#### Test plot
plot(res19, type = "BC")
#### * seedmixes vs. 2020 ####
res20 <- TBI(species_seeded, species_2020,
method = "sorensen",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res20$BCD.summary # B = .324, C = .392, D = .717 (.452 vs. .547)
res20$t.test_B.C
tbi20 <- res20$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2020")
#### Test plot
plot(res20, type = "BC")
#### * seedmixes vs. 2021 ####
res21 <- TBI(species_seeded, species_2021,
method = "sorensen",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res21$BCD.summary # B = .349, C = .391, D = .740 (.471 vs. .528)
res21$t.test_B.C
tbi21 <- res21$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2021")
#### Test plot
plot(res21, type = "BC")
#### * Combine datasets ####
data_presence <- bind_rows(tbi18, tbi19, tbi20, tbi21) %>%
mutate(presabu = "presence")
rm(list = setdiff(ls(), c(
"sites_experiment", "species_experiment", "traits",
"sites_bauer", "sites_splot", "species_bauer", "species_splot",
"species_seeded", "species_2018", "species_2019", "species_2020",
"species_2021", "data_presence", "data_sites", "data_species"
)))
### b Calculate TBI Abundance -------------------------------------------------
#### * seedmixes vs. 2018 ####
res18 <- TBI(species_seeded, species_2018,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res18$BCD.summary # B = .657, C = .315, D = .973 (.675 vs. .324)
res18$t.test_B.C
tbi18 <- res18$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2018")
#### Test plot
plot(res18, type = "BC")
#### * seedmixes vs. 2019 ####
res19 <- TBI(species_seeded, species_2019,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res19$BCD.summary # B = .522, C = .383, D = .906 (.576 vs. .423)
res19$t.test_B.C
tbi19 <- res19$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2019")
#### Test plot
plot(res19, type = "BC")
#### * seedmixes vs. 2020 ####
res20 <- TBI(species_seeded, species_2020,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res20$BCD.summary # B = .488, C = .382, D = .870 (.560 vs. .439)
res20$t.test_B.C
tbi20 <- res20$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2020")
#### Test plot
plot(res20, type = "BC")
#### * seedmixes vs. 2021 ####
res21 <- TBI(species_seeded, species_2021,
method = "%difference",
nperm = 9999, test.t.perm = TRUE, clock = TRUE)
res21$BCD.summary # B = .473, C = .390, D = .863 (.548 vs. .451)
res21$t.test_B.C
tbi21 <- res21$BCD.mat %>%
as_tibble() %>%
mutate(comparison = "2021")
#### Test plot
plot(res21, type = "BC")
#### * Combine datasets ####
data_abundance <- bind_rows(tbi18, tbi19, tbi20, tbi21) %>%
mutate(presabu = "abundance")
plot <- data_sites %>%
mutate(plot = factor(plot)) %>%
filter(str_detect(id, "2018")) %>%
pull(plot)
#### * Combine all TBIs ####
data <- data_presence %>%
add_row(data_abundance) %>%
mutate(
plot = rep(plot, length(data_abundance$comparison) * 2 / 288),
id = str_c(plot, comparison, sep = "_")
) %>%
rename(
B = "B/(2A+B+C)", C = "C/(2A+B+C)", D = "D=(B+C)/(2A+B+C)",
change = Change
) %>%
mutate(
change = C - B,
across(c(B, C, D, change), ~ round(.x, digits = 4))
) %>%
select(id, B, C, D, presabu)
View(sites_experiment)
View(data)
sites_temporal <- sites_experiment %>%
filter(survey_year != "seeded") %>%
left_join(data, by = "id") %>%
select(
id, plot, site, longitude, latitude, elevation, plot_size, exposition,
orientation, sand_ratio, substrate_depth, target_type, seed_density,
survey_year, botanist, B, C, D, presabu
) %>%
mutate(persistence = (1 - B) * 100)
View(sites_temporal)
rm(list = setdiff(ls(), c(
"sites_experiment", "species_experiment", "traits", "sites_temporal",
"sites_bauer", "sites_splot", "species_bauer", "species_splot"
)))
write_csv(
sites_temporal,
here("data", "processed", "data_processed_sites_temporal.csv")
)
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
library(brms)
### Start ###
rm(list = ls())
### Load data ###
sites <- read_csv(
here("data", "processed", "data_processed_sites_temporal.csv"),
col_names = TRUE, na = c("na", "NA", ""),
col_types = cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c("hay_meadow", "dry_grassland")),
seed_density = "f",
exposition = col_factor(levels = c("north", "south")),
survey_year = "c"
)
) %>%
### Exclude data of seed mixtures
filter(presabu == "presence") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, sep = " "),
botanist_year = factor(botanist_year),
id = factor(id),
n = persistence
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
plot1 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = exposition)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Exposition")
plot2 <- ggplot(sites, aes(y = n, x = survey_year_fct)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Survey year")
plot3 <- ggplot(sites %>% filter(survey_year == 2021), aes(y = n, x = site)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Blocks")
plot4 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = botanist_year)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Botanist:survey year")
(plot1 + plot2) / (plot3 + plot4)
plot4 <- ggplot(sites, aes(y = n, x = botanist_year)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Botanist:survey year")
(plot1 + plot2) / (plot3 + plot4)
### Load data ###
sites <- read_csv(
here("data", "processed", "data_processed_sites_temporal.csv"),
col_names = TRUE, na = c("na", "NA", ""),
col_types = cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c("hay_meadow", "dry_grassland")),
seed_density = "f",
exposition = col_factor(levels = c("north", "south")),
survey_year = "c"
)
) %>%
### Exclude data of seed mixtures
filter(presabu == "presence") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, exposition, sep = " "),
botanist_year = factor(botanist_year),
id = factor(id),
n = persistence
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
View(sites)
plot1 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = exposition)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Exposition")
plot2 <- ggplot(sites, aes(y = n, x = survey_year_fct)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Survey year")
plot3 <- ggplot(sites %>% filter(survey_year == 2021), aes(y = n, x = site)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Blocks")
plot4 <- ggplot(sites, aes(y = n, x = botanist_year)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Botanist:survey year")
(plot1 + plot2) / (plot3 + plot4)
sites %>% group_by(exposition) %>% count(site)
boxplot(sites$n)
ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
ggplot(sites, aes(x = n)) + geom_histogram(binwidth = 0.03)
ggplot(sites, aes(x = n)) + geom_density()
### Model specifications ###
iter = 10000
chains = 4
thin = 2
seed = 123
warmup = floor(iter / 2)
priors <- c(
set_prior("normal(0, 20)", class = "Intercept"),
set_prior("normal(0, 20)", class = "b"),
set_prior("normal(-2.5, 20)", class = "b", coef = "sand_ratio25"),
set_prior("normal(-5, 20)", class = "b", coef = "sand_ratio50"),
set_prior("normal(5, 20)", class = "b", coef = "expositionsouth"),
set_prior("normal(-2.5, 20)", class = "b", coef = "survey_year_fct2019"),
set_prior("normal(-5, 20)", class = "b", coef = "survey_year_fct2020"),
set_prior("normal(-7.5, 20)", class = "b", coef = "survey_year_fct2021"),
set_prior("cauchy(0, 10)", class = "sigma")
)
m_simple <- brm(
n ~ sand_ratio + target_type + exposition + survey_year_fct +
substrate_depth + seed_density +
(1 | site/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = priors,
chains = chains,
iter = iter,
thin = thin,
control = list(max_treedepth = 13),
warmup = warmup,
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = seed
)
save(m_simple, file = here(
"outputs", "models", "model_persistence_simple.Rdata"
))
