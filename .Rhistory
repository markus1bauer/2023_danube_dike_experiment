geom_boxplot() +
labs(x = "", y = expression("SLA [mmÂ² mg"^-1*"]")) +
scale_color_manual(breaks = c("Hay\nmeadow", "Dry\ngrassland"),
values = c("#00BFC4", "#F8766D")) +
theme_mb())
(graph_b <- data %>%
filter(type == "cwm_abu_seedmass") %>%
ggplot(aes(x = target_type, y = value, color = target_type)) +
geom_boxplot() +
labs(x = "", y = expression("Seedmass [mg]")) +
scale_color_manual(breaks = c("Hay\nmeadow", "Dry\ngrassland"),
values = c("#00BFC4", "#F8766D")) +
theme_mb())
(graph_c <- data %>%
filter(type == "cwm_abu_height") %>%
ggplot(aes(x = target_type, y = value, color = target_type)) +
geom_boxplot() +
labs(x = "", y = expression("Canopy height [m]")) +
scale_color_manual(breaks = c("Hay\nmeadow", "Dry\ngrassland"),
values = c("#00BFC4", "#F8766D")) +
theme_mb())
graph_a + theme(legend.position = "none") |
graph_b + theme(legend.position = "none") |
graph_c + theme(legend.position = "none") +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 10, face = "bold"))
graph_a + graph_b + graph_c +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 10, face = "bold"))
graph_a + theme(legend.position = "none") +
graph_b + theme(legend.position = "none") +
graph_c + theme(legend.position = "none") +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 10, face = "bold"))
### Save ###
ggsave(
here("outputs", "figures", "figure_2_800dpi_16.5x5cm_traits.tiff"),
dpi = 800, width = 16.5, height = 5, units = "cm"
)
### Packages ###
library(here)
library(tidyverse)
library(patchwork)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot #######################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
((graph_a + theme(legend.position = "none")) +
graph_b) +
(graph_c + theme(legend.position = c(.19, .88))) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
((graph_a + theme(legend.position = "none")) +
graph_b + theme(legend.position = "none")) +
(graph_c + theme(legend.position = c(.19, .88))) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
graph_a + theme(legend.position = "none") +
graph_b + theme(legend.position = "none") +
graph_c + theme(legend.position = c(.19, .88)) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
graph_a + theme(legend.position = "none") +
graph_b + theme(legend.position = "none") +
(graph_c + theme(legend.position = c(.19, .88))) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
((graph_a + theme(legend.position = "none")) +
graph_b) |
(graph_c + theme(legend.position = c(.19, .88))) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
((graph_a + theme(legend.position = "none")) +
graph_b + theme(legend.position = "none")) +
(graph_c + theme(legend.position = c(.19, .88))) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
graph_a + theme(legend.position = "none") +
graph_b + theme(legend.position = "none") +
(graph_c + theme(legend.position = c(.19, .88))) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
### Packages ###
library(tidyverse)
library(sf)
library(raster)
library(ggmap)
library(tmap)
library(RColorBrewer)
library(ggrepel)
library(patchwork)
library(grid)
### Start ###
rm(list = ls())
setwd(here("data","processed", "spatial"))
### Packages ###
library(here)
### Start ###
rm(list = ls())
setwd(here("data","processed", "spatial"))
### Load data ###
germany <- st_read("germany.shp")
danube <- st_read("danube.shp")
dikes <- st_read("dikes.shp")
blocks <- st_read("blocks.shp")
blocks2 <- read_csv2("blocks2.csv", col_names = TRUE, col_types =
cols(block = col_factor())
)
blocks_table <- read_csv2("blocks2.csv", col_names = TRUE, col_types =
cols(block = col_factor())
)
### Packages ###
library(here)
library(tidyverse)
library(sf)
library(raster)
library(ggmap)
library(tmap)
library(RColorBrewer)
library(ggrepel)
library(patchwork)
library(grid)
### Start ###
rm(list = ls())
setwd(here("data","processed", "spatial"))
### Load data ###
germany <- st_read("germany.shp")
danube <- st_read("danube.shp")
dikes <- st_read("dikes.shp")
blocks <- st_read("blocks.shp")
blocks_table <- read_csv2(
"blocks_table.csv",
col_names = TRUE,
col_types = cols(block = col_factor())
)
#bg_google_satellite2 <- raster("bg_google_satellite2.tif")
load("bg_google_satellite.rda")
load("bg_stamen_terrain.rda")
bg_google_satellite2 <- raster("bg_google_satellite2.tif")
### Load functions ###
theme_mb <- function(){
theme(
panel.background = element_rect(fill = NA),
panel.grid = element_line(colour = NA),
text  = element_text(size = 10, color = "black"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position = "none",
plot.margin = margin(.5, 0, 0, 0, "cm")
)
}
(sitesGraph <- ggmap(bg_google_satellite) +
geom_point(data = blocks_table, aes(x = x, y = y), size = 2, color = "white") +
geom_text_repel(
data = blocks_table, aes(label = block, x = x, y = y),
min.segment.length = 1,
color = "white",
direction = "y",
nudge_y = .001
) +
coord_sf(crs = st_crs(4326)) +
ggspatial::annotation_scale(
location = "br",
pad_y = unit(0.6, "cm"),
pad_x = unit(0.7, "cm"),
width_hint = 0.4,
height = unit(0.15, "cm"),
text_col = "white"
) +
ggspatial::annotation_north_arrow(
location = "br",
pad_y = unit(1.1, "cm"),
pad_x = unit(0.6, "cm"),
which_north = "true",
style = ggspatial::north_arrow_fancy_orienteering(
text_col = "white"
),
height = unit(.8, "cm"),
width = unit(.8, "cm")
) +
theme_mb())
gerGraph <- ggplot() +
geom_sf(data = germany, fill = "transparent", colour = "white") +
geom_point(aes(x = 12.886, y = 48.839), size = 1, colour = "white") +
theme_mb() +
theme(
plot.background = element_blank()
)
sitesGraph + inset_element(
gerGraph,
left = .01,
bottom = .1,
right = .3,
top = .4,
on_top = TRUE
)
experiment <- st_point(c(12.886, 48.839)) %>%
st_sfc(crs = 4326)
tmap_mode("plot")
bbox <- st_bbox(c(ymin = 48.835, ymax = 48.845, xmin = 12.87, xmax = 12.895))
(tmap <- tm_shape(dikes, bbox = bbox) +
tm_lines(lwd = 3) +
tm_shape(danube) +
tm_fill(col = "grey") +
tm_text("river") +
tm_shape(blocks) +
tm_fill("red", ) +
tm_text("block", size = 1, col = "black", ymod = 0.7) +
tm_compass(position = c("right", "bottom"), size = 2) +
tm_scale_bar(position = c("right", "bottom", with = 0.4), breaks = c(.25, .5)) +
tm_layout(frame = FALSE))
(tmap_ger <- tm_shape(germany) +
tm_borders(col = "black") +
tm_shape(experiment) +
tm_dots(size = .075) +
tm_layout(frame = FALSE))
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
(tmap_ger <- tm_shape(germany) +
tm_borders(col = "black") +
tm_shape(experiment) +
tm_dots(size = .075) +
tm_layout(frame = FALSE, bg.color = "transparent"))
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transpartent",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
location_experiment <- st_point(c(12.886, 48.839)) %>%
st_sfc(crs = 4326)
tmap_mode("plot")
bbox <- st_bbox(c(ymin = 48.835, ymax = 48.845, xmin = 12.87, xmax = 12.895))
(tmap <- tm_shape(dikes, bbox = bbox) +
tm_lines(lwd = 3) +
tm_shape(danube) +
tm_fill(col = "grey") +
tm_text("river") +
tm_shape(blocks) +
tm_fill("red", ) +
tm_text("block", size = 1, col = "black", ymod = 0.7) +
tm_compass(position = c("right", "bottom"), size = 2) +
tm_scale_bar(position = c("right", "bottom", with = 0.4), breaks = c(.25, .5)) +
tm_layout(frame = FALSE))
(tmap_ger <- tm_shape(germany) +
tm_borders(col = "black") +
tm_shape(location_experiment) +
tm_dots(size = .075) +
tm_layout(frame = FALSE))
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = png,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.png"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent"type='cairo',
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent", type='cairo',
device = png,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.png"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
(tmap_ger <- tm_shape(germany) +
tm_borders(col = "black") +
tm_shape(location_experiment) +
tm_dots(size = .075) +
tm_layout(frame = FALSE, bg.color = "transparent"))
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = eps,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.eps"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
#device = eps,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.eps"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tif,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tif"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tif,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff,
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, type = "Xlib",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, type = "cairo-png",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, type = "cairo",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, #type = "cairo",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
tmap_save(
tmap_ger,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, type = "cairo",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
(tmap_ger_white <- tm_shape(germany) +
tm_borders(col = "white") +
tm_shape(location_experiment) +
tm_dots(size = .075) +
tm_layout(frame = FALSE, bg.color = "transparent"))
tmap_save(
tmap_ger_white,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, type = "cairo",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
(tmap_ger_white <- tm_shape(germany) +
tm_borders(col = "white") +
tm_shape(location_experiment) +
tm_dots(size = .075, color = "white") +
tm_layout(frame = FALSE, bg.color = "transparent"))
tmap_save(
tmap_ger_white,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, type = "cairo",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
(tmap_ger_white <- tm_shape(germany) +
tm_borders(col = "white") +
tm_shape(location_experiment) +
tm_dots(size = .075, col = "white") +
tm_layout(frame = FALSE, bg.color = "transparent"))
tmap_save(
tmap_ger_white,
dpi = 300, width = 2, height = 3.5, units = "cm", bg = "transparent",
device = tiff, type = "cairo",
filename = paste0(
here("outputs", "figures"), "/", "figure_1_germany_300dpi_2x3.5cm.tiff"
)
)
### Packages ###
library(here)
library(tidyverse)
library(patchwork)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
data <- read_csv(
here("data", "processed", "data_processed_sites_spatial.csv"),
col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
target_type = "f"
)
) %>%
select(target_type, survey_year, starts_with("cwm")) %>%
filter(survey_year == "seeded") %>%
pivot_longer(starts_with("cwm"), names_to = "type", values_to = "value") %>%
mutate(
target_type = fct_recode(
target_type,
"Dry\ngrassland" = "dry_grassland",
"Hay\nmeadow" = "hay_meadow"
))
### Packages ###
library(here)
library(tidyverse)
library(patchwork)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
data <- read_csv(
here("data", "processed", "data_processed_sites_spatial.csv"),
col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
target_type = "f"
)
) %>%
select(target_type, survey_year, starts_with("cwm")) %>%
filter(survey_year == "seeded") %>%
pivot_longer(starts_with("cwm"), names_to = "type", values_to = "value") %>%
mutate(
target_type = fct_recode(
target_type,
"Dry\ngrassland" = "dry_grassland",
"Hay\nmeadow" = "hay_meadow"
))
### Packages ###
library(here)
library(tidyverse)
library(patchwork)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
data <- read_csv(
here("data", "processed", "data_processed_sites_spatial.csv"),
col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
target_type = "f"
)
) %>%
select(target_type, survey_year, starts_with("cwm")) %>%
filter(survey_year == "seeded") %>%
pivot_longer(starts_with("cwm"), names_to = "type", values_to = "value") %>%
mutate(
target_type = fct_recode(
target_type,
"Dry\ngrassland" = "dry_grassland",
"Hay\nmeadow" = "hay_meadow"
))
