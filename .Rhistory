mutate(group_type = str_c(surveyYear_fac, exposition, targetType,
sep = "."),
group_type = factor(group_type))
for(group in levels(data1$group_type)) {
data2 <- data1 %>%
filter(group_type == group) %>%
with(
cov.wt(
cbind(NMDS1, NMDS2),
wt = rep(1 / length(NMDS1), length(NMDS1))
)
)
ellipses <-
veganCovEllipse(cov = data2$cov, center = data2$center) %>%
as_tibble() %>%
bind_cols(group = group) %>%
bind_rows(ellipses)
data <- ellipses %>%
separate(
group,
sep = "\\.",
c("surveyYear_fac", "exposition", "targetType")
)
}
(graph_a <- ggplot() +
geom_point(
aes(y = NMDS2, x = NMDS1, color = surveyYear_fac,
shape = surveyYear_fac, alpha = surveyYear_fac),
data = sites,
cex = 2
) +
geom_path(
aes(x = NMDS1, y = NMDS2, color = surveyYear_fac),
data = data,
size = 1
) +
facet_grid(
exposition ~ targetType,
labeller = as_labeller(
c(south = "South", north = "North",
"dry_grassland" = "Dry grassland", "hay_meadow" = "Hay meadow")
)
) +
coord_fixed() +
scale_color_manual(
values = c(
"orange1", "firebrick2", "deeppink3", "mediumpurple4",
"royalblue", "black"
)
) +
scale_shape_manual(
values = c(
"circle open", "circle open", "circle open", "circle open",
"square", "square open"
)
) +
scale_alpha_manual(values = c(.3, .3, .3, .3, .7, .6)) +
labs(
x = "NMDS1", y = "NMDS2", fill = "", color = "", shape = "", alpha = ""
) +
theme_mb())
View(sites)
### Packages ###
library(here)
library(tidyverse)
library(lubridate)
library(naniar) #are_na
library(vegan)
library(adespatial)
library(FD) #dbFD
#remotes::install_github(file.path("inbo", "checklist"))
### Start ###
#installr::updateR(browse_news = FALSE, install_R = TRUE, copy_packages = TRUE, copy_Rprofile.site = TRUE, keep_old_packages = TRUE, update_packages = TRUE, start_new_R = TRUE, quit_R = TRUE, print_R_versions = TRUE, GUI = FALSE)
#checklist::setup_source()
#checklist::check_source()
#renv::snapshot()
rm(list = ls())
setwd(here("data", "raw"))
#______________________________________________________________________________
## 1 Sites ####################################################################
sites <- read_csv("data_raw_sites.csv", col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
.default = "f",
surveyDate_seeded = col_date(format = "%Y-%m-%d"),
surveyDate_2018 = col_date(format = "%Y-%m-%d"),
surveyDate_2019 = col_date(format = "%Y-%m-%d"),
surveyDate_2020 = col_date(format = "%Y-%m-%d"),
surveyDate_2021 = col_date(format = "%Y-%m-%d"),
botanist_2018 = "c",
botanist_2019 = "c",
botanist_2020 = "c",
botanist_2021 = "c",
vegetationCov_2018 = "c",
vegetationCov_2019 = "c",
vegetationCov_2020 = "c",
vegetationCov_2021 = "c",
bioMass_2019 = "c"
)) %>%
pivot_longer(starts_with("vegetationCov_") |
starts_with("botanist_") |
starts_with("bioMass_") |
starts_with("surveyDate"),
names_to = c("x", "surveyYear"), names_sep = "_",
values_to = "n", values_transform = list (n = as.character)) %>%
pivot_wider(names_from = "x", values_from = "n") %>%
mutate(plot = str_replace(plot, "-", "_"),
plot = str_replace(plot, "L_", "L"),
plot = str_replace(plot, "W_", "W"),
id = str_c(plot, surveyYear, sep = "_"),
plot = factor(plot),
id = factor(id),
vegetationCov = as.numeric(vegetationCov),
bioMass = as.numeric(bioMass)) %>%
filter(!(site == "C" & (surveyYear == "seeded" |
surveyYear == "2018" |
surveyYear == "2019" |
surveyYear == "2020")))
#______________________________________________________________________________
## 2 Species ###################################################################
species <- data.table::fread("data_raw_species_20211112.csv",
sep = ",",
dec = ".",
skip = 0,
header = TRUE,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
select(name, all_of(sites$id)) %>%
mutate(total = sum(c_across(
starts_with("L") | starts_with("W") | starts_with("C")),
na.rm = TRUE),
presence = if_else(total > 0, 1, 0)) %>%
# filter only species which occur at least one time:
filter(presence == 1) %>%
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0)))
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = TRUE),
.keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
#write_csv(specieslist, here("outputs/tables/specieslist_20220420.csv"))
#______________________________________________________________________________
## 3 Seedmixes #################################################################
seedmixes <- data.table::fread("data_raw_species_20211112.csv",
sep = ",",
dec = ".",
skip = 0,
header = TRUE,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
arrange(name) %>%
select(name, ends_with("seeded")) %>%
filter(name %in% species$name) %>%
select(name, sort(tidyselect::peek_vars())) %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(-name, names_to = "id", values_to = "seeded") %>%
separate(id, c("plot"), sep = "_(?!.*_)",
remove = TRUE, extra = "drop", fill = "warn", convert = FALSE)
#______________________________________________________________________________
## 4 Traits ####################################################################
traits <- read_csv("data_raw_traits.csv", col_names = TRUE,
na = c("", "NA", "na"),
col_types =
cols(
.default = "f",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = FALSE, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = as.character(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = TRUE) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Check congruency of traits and species table ###
traits[duplicated(traits$abb), ]
#traits$name[which(!(traits$name %in% species$name))]
species$name[which(!(species$name %in% traits$name))]
traits <- traits %>%
semi_join(species, by = "name")
traits <- traits %>%
mutate(
target = if_else(
((biotopeTarget == "yes" | ffh6510 == "yes" | ffh6210 == "yes") &
family != "Cyperaceae") |
seedAvailability == "no" | specialTarget == "yes",
"yes",
"no"
)
)
sites <- sites %>%
mutate(surveyDate = as_date(surveyDate),
seedingDate = if_else(
exposition == "north", ymd("20180413"), ymd("20180427")
),
age = interval(seedingDate, surveyDate) %/% days(1),
block = str_c(site, exposition, sep = "_"),
block = factor(block)
)
### Establishment ###
data <- species %>%
select(-starts_with("C")) %>%
pivot_longer(cols = -name, names_to = "id", values_to = "n") %>%
left_join(sites, by = "id") %>%
mutate(n = if_else(n > 0 & surveyYear == "seeded", 1, n)) %>%
select(plot, name, surveyYear, n) %>%
pivot_wider(names_from = "surveyYear", values_from = "n") %>%
pivot_longer(-c(plot, name, seeded),
names_to = "surveyYear", values_to = "n") %>%
mutate(n = if_else(seeded == 1 & n > 0, 1, 0)) %>%
group_by(name, surveyYear) %>%
summarise(
total_established = sum(n, na.rm = TRUE),
total_seeded = sum(seeded, na.rm = TRUE),
.groups = "keep"
) %>%
filter(total_seeded > 0) %>%
mutate(rate = total_established / total_seeded,
rate = round(rate, digits = 2)) %>%
pivot_wider(names_from = "surveyYear",
values_from = c("rate", "total_seeded", "total_established")) %>%
select(-total_seeded_2019, -total_seeded_2020, -total_seeded_2021)
traits <- traits %>%
left_join(data, by = "name")
cover <- species %>%
left_join(traits, by = "name") %>%
select(name, family, target, seeded,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id",
values_to = "n",
cols = starts_with("L") |starts_with("W") | starts_with("C")
) %>%
group_by(id)
### * Graminoid, herb, and total coverage) ####
cover_total_and_graminoid <- cover %>%
group_by(id, family) %>%
summarise(total = sum(n, na.rm = TRUE), .groups = "keep") %>%
mutate(type = if_else(
family == "Poaceae" |
family == "Cyperaceae" |
family == "Juncaceae",
"graminoidCov", "herbCov")) %>%
group_by(id, type) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "keep") %>%
spread(type, total) %>%
mutate(accumulatedCov = graminoidCov + herbCov,
accumulatedCov = round(accumulatedCov, 1)) %>%
ungroup()
### * Target specis' coverage ####
cover_target <- cover %>%
filter(target == "yes") %>%
summarise(targetCov = sum(n, na.rm = TRUE)) %>%
mutate(targetCov = round(targetCov, 1)) %>%
ungroup()
### * Seeded species' coverage ####
cover_seeded <- species %>%
select(-starts_with("C"), -contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "surveyYear"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "surveyYear", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"),
names_to = "surveyYear", values_to = "value",
names_transform = list(surveyYear = as.factor)) %>%
mutate(success = if_else(seeded > 0 & value > 0, value, 0)) %>%
group_by(plot, surveyYear) %>%
summarise(seededCov = sum(success, na.rm = TRUE), .groups = "keep") %>%
ungroup() %>%
unite(id, plot, surveyYear, sep = "_")
### * Implement in sites data set ####
sites <- sites %>%
left_join(cover_total_and_graminoid, by = "id") %>%
left_join(cover_target, by = "id") %>%
left_join(cover_seeded, by = "id") %>%
### Calcute the ratio of target richness of total species richness
mutate(targetCovratio = targetCov / accumulatedCov,
graminoidCovratio = graminoidCov / accumulatedCov,
seededCovratio = seededCov / accumulatedCov,
targetCovratio = round(targetCovratio, 3),
graminoidCovratio = round(graminoidCovratio, 3),
seededCovratio = round(seededCovratio, 3))
rm(list = setdiff(ls(), c("sites", "species", "traits", "seedmixes")))
#______________________________________________________________________________
## 3 Alpha diversity ##########################################################
### a Species richness ---------------------------------------------------------
speciesRichness <- species %>%
left_join(traits, by = "name") %>%
select(name, rlg, rlb, target, ffh6510, ffh6210,
starts_with("L"), starts_with("W"), starts_with("C")) %>%
pivot_longer(
names_to = "id", values_to = "n",
cols = starts_with("L") | starts_with("W") | starts_with("C")
) %>%
mutate(n = if_else(n > 0, 1, 0)) %>%
group_by(id)
### * total species richness ####
speciesRichness_all <- speciesRichness %>%
summarise(speciesRichness = sum(n, na.rm = TRUE)) %>%
ungroup()
### * red list Germany (species richness) ####
speciesRichness_rlg <- speciesRichness %>%
filter(rlg == "1" | rlg == "2" | rlg == "3" | rlg == "V") %>%
summarise(rlgRichness = sum(n, na.rm = TRUE)) %>%
ungroup()
### * red list Bavaria (species richness) ####
speciesRichness_rlb <- speciesRichness %>%
filter(rlb == "1" | rlb == "2" | rlb == "3" | rlb == "V") %>%
summarise(rlbRichness = sum(n, na.rm = TRUE)) %>%
ungroup()
### * target species (species richness) ####
speciesRichness_target <- speciesRichness %>%
filter(target == "yes") %>%
summarise(targetRichness = sum(n, na.rm = TRUE)) %>%
ungroup()
### * seeded species (species richness) ####
speciesRichness_seeded <- species %>%
select(-starts_with("C"), -contains("x0809")) %>%
# Make two columns out of column id:
pivot_longer(-name, names_to = "id", values_to = "value",
values_drop_na = TRUE) %>%
separate(id, c("plot", "surveyYear"), sep = "_(?!.*_)",
remove = FALSE, extra = "merge", fill = "warn", convert = FALSE) %>%
# Summarise for plot:
pivot_wider(names_from = "surveyYear", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = TRUE)),
.groups = "keep") %>%
ungroup() %>%
# Combine with seedmixes:
pivot_longer(starts_with("20"), names_to = "surveyYear", values_to = "value",
names_transform = list(surveyYear = as.factor)) %>%
mutate(successCov = if_else(seeded > 0 & value > 0, 1, 0)) %>%
group_by(plot, surveyYear) %>%
summarise(seededRichness = sum(successCov, na.rm = TRUE),
.groups = "keep") %>%
ungroup() %>%
unite(id, plot, surveyYear, sep = "_")
### * ffh6510 species (species richness) ####
speciesRichness_ffh6510 <- speciesRichness %>%
filter(ffh6510 == "yes") %>%
summarise(ffh6510Richness = sum(n, na.rm = TRUE)) %>%
ungroup()
### * ffh6210 species (species richness) ####
speciesRichness_ffh6210 <- speciesRichness %>%
filter(ffh6210 == "yes") %>%
summarise(ffh6210Richness = sum(n, na.rm = TRUE)) %>%
ungroup()
### * implement in sites data set ####
sites <- sites %>%
left_join(speciesRichness_all, by = "id") %>%
left_join(speciesRichness_rlg, by = "id") %>%
left_join(speciesRichness_rlb, by = "id") %>%
left_join(speciesRichness_target, by = "id") %>%
left_join(speciesRichness_seeded, by = "id") %>%
left_join(speciesRichness_ffh6510, by = "id") %>%
left_join(speciesRichness_ffh6210, by = "id") %>%
### * Calculate Favourable Conservation Status (FCS) ####
###   Helm et al. 2014 Divers Distrib
mutate(
fcs_target = log(
(targetRichness + 1) / (speciesRichness - targetRichness + 1)
),
fcs_seeded = log(
(seededRichness + 1 ) / (speciesRichness - seededRichness + 1)
),
fcs_target = round(fcs_target, 3),
fcs_seeded = round(fcs_seeded, 3)
)
### b Species eveness and shannon ----------------------------------------------
data <- species  %>%
pivot_longer(-name, names_to = "id", values_to = "value") %>%
pivot_wider(names_from = "name", values_from = "value") %>%
column_to_rownames("id") %>%
diversity(index = "shannon") %>%
as_tibble(rownames = NA) %>%
rownames_to_column(var = "id") %>%
mutate(id = factor(id)) %>%
rename(shannon = value)
sites <- sites %>%
left_join(data, by = "id") %>%
mutate(eveness = shannon / log(speciesRichness))
rm(list = setdiff(ls(), c("sites", "species", "traits", "seedmixes")))
expertfile <- "EUNIS-ESy-2020-06-08.txt" ### file of 2021 is not working
obs <- species_dikes %>%
pivot_longer(cols = -name,
names_to = "RELEVE_NR",
values_to = "Cover_Perc") %>%
rename(TaxonName = "name") %>%
mutate(
TaxonName = str_replace_all(TaxonName, "_", " "),
TaxonName = str_replace_all(TaxonName, "ssp", "subsp."),
TaxonName = as.factor(TaxonName),
TaxonName = fct_recode(
TaxonName,
"Carex praecox" = "Carex praecox subsp. curvata",
"Cerastium fontanum" = "Cerastium fontanum subsp. vulgare",
"Clinopodium acinos" = "Acinos arvensis",
"Ranunculus polyanthemos" = "Ranunculus serpens subsp. nemorosus",
"Silene latifolia" = "Silene latifolia subsp. alba",
"Vicia villosa" = "Vicia villosa subsp. varia"
)
) %>%
data.table::as.data.table()
obs <- species %>%
pivot_longer(cols = -name,
names_to = "RELEVE_NR",
values_to = "Cover_Perc") %>%
rename(TaxonName = "name") %>%
mutate(
TaxonName = str_replace_all(TaxonName, "_", " "),
TaxonName = str_replace_all(TaxonName, "ssp", "subsp."),
TaxonName = as.factor(TaxonName),
TaxonName = fct_recode(
TaxonName,
"Carex praecox" = "Carex praecox subsp. curvata",
"Cerastium fontanum" = "Cerastium fontanum subsp. vulgare",
"Clinopodium acinos" = "Acinos arvensis",
"Ranunculus polyanthemos" = "Ranunculus serpens subsp. nemorosus",
"Silene latifolia" = "Silene latifolia subsp. alba",
"Vicia villosa" = "Vicia villosa subsp. varia"
)
) %>%
data.table::as.data.table()
View(obs)
obs <- species %>%
pivot_longer(cols = -name,
names_to = "RELEVE_NR",
values_to = "Cover_Perc") %>%
rename(TaxonName = "name") %>%
mutate(
TaxonName = str_replace_all(TaxonName, "_", " "),
TaxonName = str_replace_all(TaxonName, "ssp", "subsp."),
TaxonName = as.factor(TaxonName),
TaxonName = fct_recode(
TaxonName,
"Cerastium fontanum" = "Cerastium fontanum subsp. vulgare",
"Clinopodium acinos" = "Acinos arvensis",
"Silene latifolia" = "Silene latifolia subsp. alba",
"Vicia villosa" = "Vicia villosa subsp. varia"
)
) %>%
data.table::as.data.table()
View(obs)
obs <- species %>%
pivot_longer(cols = -name,
names_to = "RELEVE_NR",
values_to = "Cover_Perc") %>%
rename(TaxonName = "name") %>%
mutate(
TaxonName = str_replace_all(TaxonName, "_", " "),
TaxonName = str_replace_all(TaxonName, "ssp", "subsp."),
TaxonName = as.factor(TaxonName),
TaxonName = fct_recode(
TaxonName,
"Cerastium fontanum" = "Cerastium fontanum subsp. vulgare",
"Silene latifolia" = "Silene latifolia subsp. alba"
)
) %>%
data.table::as.data.table()
header <- sites %>%
sf::st_as_sf(coords = c("longitude", "latitude"), crs = 31468) %>%
sf::st_transform(4326) %>%
rename(
RELEVE_NR = id
) %>%
mutate(
"Altitude (m)" = 313,
Latitude = sf::st_coordinates(.)[, 2],
Longitude = sf::st_coordinates(.)[, 1],
Country = "Germany",
Coast_EEA = "N_COAST",
Dunes_Bohn = "N_DUNES",
Ecoreg = 686,
dataset = "Danube_dikes"
) %>%
select(RELEVE_NR, "Altitude (m)", Latitude, Longitude, Country,
Coast_EEA, Dunes_Bohn, Ecoreg, dataset) %>%
sf::st_drop_geometry()
View(sites)
renv::status()
renv::snapshot()
