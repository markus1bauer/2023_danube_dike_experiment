library(mapedit)
### Start ###
rm(list = ls())
setwd(here("data/raw/spatial"))
register_google(key = "AIzaSyB5nQU_dgB_kPsQkk-_cq7pA0g1-2qka4E")
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Load shp files ##########################################################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## 1 Base maps #################################################################################################
germany <- raster::getData('GADM', country = 'DEU', level = 0, download =  T) %>%
st_as_sf() %>%
st_set_crs(4326)
bg_google_satellite <- get_map(
location = c(lon = 12.886, lat = 48.839),
zoom = 15,
scale = 1,
maptype = "satellite",
color = "color",
source = "google"
)
ggmap(bg_google_satellite)
bg_stamen_terrain <- get_map(
location= c(left = 12.87, bottom = 48.835, right = 12.895, top = 48.845),
zoom = 14,
scale = 1,
maptype = "terrain-background",
source = "stamen"
)
ggmap(bg_stamen_terrain)
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(tidyverse)
library(sf)
library(raster)
library(ggmap)
library(tmap)
library(RColorBrewer)
library(ggrepel)
library(patchwork)
library(grid)
### Start ###
rm(list = ls())
setwd(here("data/processed/spatial"))
### Load data ###
germany <- st_read("germany.shp")
danube <- st_read("danube.shp")
dikes <- st_read("dikes.shp")
blocks <- st_read("blocks.shp")
blocks2 <- read_csv2("blocks2.csv", col_names = T, col_types =
cols(block = col_factor())
)
bg_google_satellite2 <- raster("bg_google_satellite2.tif")
load("bg_google_satellite.rda")
load("bg_stamen_terrain.rda")
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ##############################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
themeMB <- function(){
theme(
panel.background = element_rect(fill = NA),
panel.grid = element_line(colour = NA),
text  = element_text(size = 10, color = "black"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position = "none",
plot.margin = margin(.5, 0, 0, 0, "cm")
)
}
## 1 Map with ggmap ##############################################################################
### a Map of project site -----------------------------------------------------------------------
(sitesGraph <- ggmap(bg_google_satellite) +
geom_point(data = blocks2, aes(x = x, y = y), size = 2, color = "white") +
geom_text_repel(data = blocks2, aes(label = block, x = x, y = y),
min.segment.length = 1,
color = "white",
direction = "y",
nudge_y = .001) +
coord_sf(crs = st_crs(4326)) +
ggspatial::annotation_scale(location = "br",
pad_y = unit(0.6, "cm"),
pad_x = unit(0.7, "cm"),
width_hint = 0.4,
height = unit(0.15, "cm"),
text_col = "white") +
ggspatial::annotation_north_arrow(location = "br",
pad_y = unit(1.1, "cm"),
### Packages ###
library(here)
library(tidyverse)
library(vegan)
library(FD) #dbFD()
library(naniar) #are_na()
### Start ###
#installr::updateR(browse_news = F, install_R = T, copy_packages = T, copy_Rprofile.site = T, keep_old_packages = T, update_packages = T, start_new_R = F, quit_R = T, print_R_versions = T, GUI = F)
rm(list = ls())
setwd(here("data/raw"))
### a Load species tables of all years -------------------------------------------------------------------------------------------
speciesLseeded <- read_csv2("data_raw_species_seeded_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
side = col_factor(),
id = col_factor()
)) %>%
mutate(id = str_c(side, id, sep = "_")) %>%
mutate(id = paste0(id, "_seeded")) %>%
pivot_longer(-c(id, side), names_to = "name", values_to = "n") %>%
mutate(name = str_replace(name, " ", "_")) %>%
group_by(id) %>%
mutate(sum = sum(n, na.rm = T)) %>%
mutate(abu = n / sum * 100) %>%
pivot_wider(names_from = "id", values_from = "abu") %>%
group_by(name) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T))) %>%
select(-n, -sum)
speciesWseeded <- read_csv2("data_raw_species_seeded_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
side = col_factor(),
id = col_factor()
)) %>%
mutate(id = str_c(side, id, sep = "_")) %>%
mutate(id = paste0(id, "_seeded")) %>%
pivot_longer(-c(side, id), names_to = "name", values_to = "n") %>%
mutate(name = str_replace(name, " ", "_")) %>%
group_by(id) %>%
mutate(sum = sum(n, na.rm = T)) %>%
mutate(abu = n / sum * 100) %>%
pivot_wider(names_from = "id", values_from = "abu") %>%
group_by(name) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T))) %>%
select(-n, -sum)
speciesL18 <- read_csv2("data_raw_species_2018_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("L_", .x), -name) %>%
rename_with(~ paste0(.x, "_2018"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor)
speciesW18 <- read_csv2("data_raw_species_2018_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("W_", .x), -name) %>%
rename_with(~ paste0(.x, "_2018"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor) %>%
mutate(name = fct_recode(name, Plantago_major_ssp_intermedia = "Plantago_major"))
speciesL19 <- read_csv2("data_raw_species_2019_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("L_", .x), -name) %>%
rename_with(~ paste0(.x, "_2019"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor) %>%
mutate(name = fct_recode(name, Plantago_major_ssp_major = "Plantago_major"))
speciesW19 <- read_csv2("data_raw_species_2019_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("W_", .x), -name) %>%
rename_with(~ paste0(.x, "_2019"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor) %>%
mutate(name = fct_recode(name, Plantago_major_ssp_major = "Plantago_major"))
speciesL20 <- read_csv2("data_raw_species_2020_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("L_", .x), -name) %>%
rename_with(~ paste0(.x, "_2020"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor)
speciesW20 <- read_csv2("data_raw_species_2020_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("W_", .x), -name) %>%
rename_with(~ paste0(.x, "_2020"), -name) %>%
mutate(name = str_replace(name, "Plantago_major ssp. major", "Plantago_major_ssp_major")) %>%
mutate(name = str_replace(name, "Plantago_major ssp. intermedia", "Plantago_major_ssp_intermedia")) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor)
### b Join species tables -------------------------------------------------------------------------------------------
speciesL <- speciesLseeded %>%
full_join(speciesL18, by = "name") %>%
full_join(speciesL19, by = "name") %>%
full_join(speciesL20, by = "name")
speciesW <- speciesWseeded %>%
full_join(speciesW18, by = "name") %>%
full_join(speciesW19, by = "name") %>%
full_join(speciesW20, by = "name")
species <- full_join(speciesL, speciesW) %>%
### Rename species ###
mutate(name = fct_recode(name, Carex_praecox_ssp_praecox = "Carex_praecox")) %>%
mutate(name = fct_recode(name, Cerastium_fontanum_ssp_vulgare = "Cerastium_fontanum")) %>%
mutate(name = fct_recode(name, Cerastium_fontanum_ssp_vulgare = "Cerastium_holosteoides")) %>%
mutate(name = fct_recode(name, Cornus_controversa = "Cornus_sanguinea")) %>%
mutate(name = fct_recode(name, Cota_tinctoria = "Anthemis_tinctoris")) %>%
mutate(name = fct_recode(name, Erigeron_canadensis = "Conyza_canadensis")) %>%
mutate(name = fct_recode(name, Fallopia_convolvulus = "Polygonum_convolvulus")) %>%
mutate(name = fct_recode(name, Galium_mollugo = "Galium_album")) %>%
mutate(name = fct_recode(name, Jacobaea_vulgaris = "Senecio_jacobaea")) %>%
mutate(name = fct_recode(name, Persicaria_amphibia = "Polygonum_amphibium")) %>%
mutate(name = fct_recode(name, Persicaria_bistorta = "Bistorta_officinalis")) %>%
mutate(name = fct_recode(name, Persicaria_minor = "Polygonum_minus")) %>%
mutate(name = fct_recode(name, Populus_alba = "Popolus_alba")) %>%
mutate(name = fct_recode(name, Silene_latifolia_ssp_alba = "Silene_latifolia")) %>%
mutate(name = fct_recode(name, Silene_latifolia_ssp_alba = "Silene_alba")) %>%
mutate(name = fct_recode(name, "Silene_flos-cuculi" = "Lychnis_flos-cuculi")) %>%
mutate(name = fct_recode(name, Taraxacum_campylodes = "Taraxacum_officinale")) %>%
mutate(name = fct_recode(name, Vicia_sativa_ssp_nigra = "Vicia_angustifolia")) %>%
### combine created duplicates ###
group_by(name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = T))) %>%
### Implement counted inidviduals as 0.5 % in normal columns ###
mutate(across(where(is.numeric) & contains("i"), ~ 0.5 * (. > 0))) %>%
pivot_longer(cols = -name, names_to = "id", values_to = "n") %>%
mutate(id  =  str_replace(id, "i", "")) %>%
group_by(name, id) %>%
summarise(max = max(n, na.rm = T)) %>%
mutate(max = ifelse(is.infinite(max), NA, max)) %>%
pivot_wider(names_from = "id", values_from = "max") %>%
mutate(name = as_factor(name)) %>%
### Rename plots ###
rename_with(~ str_replace(.x, "_1_201", "_01_201")) %>%
rename_with(~ str_replace(.x, "_1_2020", "_01_2020")) %>%
rename_with(~ str_replace(.x, "_2_201", "_02_201")) %>%
rename_with(~ str_replace(.x, "_2_2020", "_02_2020")) %>%
rename_with(~ str_replace(.x, "_3_201", "_03_201")) %>%
rename_with(~ str_replace(.x, "_3_2020", "_03_2020")) %>%
rename_with(~ str_replace(.x, "_4_201", "_04_201")) %>%
rename_with(~ str_replace(.x, "_4_2020", "_04_2020")) %>%
rename_with(~ str_replace(.x, "_5_201", "_05_201")) %>%
rename_with(~ str_replace(.x, "_5_2020", "_05_2020")) %>%
rename_with(~ str_replace(.x, "_6_201", "_06_201")) %>%
rename_with(~ str_replace(.x, "_6_2020", "_06_2020")) %>%
rename_with(~ str_replace(.x, "_7_201", "_07_201")) %>%
rename_with(~ str_replace(.x, "_7_2020", "_07_2020")) %>%
rename_with(~ str_replace(.x, "_8_201", "_08_201")) %>%
rename_with(~ str_replace(.x, "_8_2020", "_08_2020")) %>%
rename_with(~ str_replace(.x, "_9_201", "_09_201")) %>%
rename_with(~ str_replace(.x, "_9_2020", "_09_2020")) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W")), na.rm = T)) %>%
mutate(presence = if_else(total > 0, 1, 0)) %>%
filter(presence == 1) %>%
ungroup() %>%
select(-total, -presence) %>%
mutate(name = as.character(name)) %>%
arrange(name) %>%
mutate(name = as_factor(name)) %>%
### Check that each plot has at least one species ###
pivot_longer(-name, names_to = "id", values_to = "value") %>%
group_by(id) %>%
mutate(sum = sum(value, na.rm = T)) %>%
filter(sum > 0) %>%
select(-sum) %>%
pivot_wider(names_from = id, values_from = value)
rm(list = setdiff(ls(), c("species")))
### a Load species tables of all years -------------------------------------------------------------------------------------------
speciesLseeded <- read_csv2("data_raw_species_seeded_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
side = col_factor(),
id = col_factor()
)) %>%
mutate(id = str_c(side, id, sep = "_")) %>%
mutate(id = paste0(id, "_seeded")) %>%
pivot_longer(-c(id, side), names_to = "name", values_to = "n") %>%
mutate(name = str_replace(name, " ", "_")) %>%
group_by(id) %>%
mutate(sum = sum(n, na.rm = T)) %>%
mutate(abu = n / sum * 100) %>%
pivot_wider(names_from = "id", values_from = "abu") %>%
group_by(name) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T))) %>%
select(-n, -sum)
speciesWseeded <- read_csv2("data_raw_species_seeded_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
side = col_factor(),
id = col_factor()
)) %>%
mutate(id = str_c(side, id, sep = "_")) %>%
mutate(id = paste0(id, "_seeded")) %>%
pivot_longer(-c(side, id), names_to = "name", values_to = "n") %>%
mutate(name = str_replace(name, " ", "_")) %>%
group_by(id) %>%
mutate(sum = sum(n, na.rm = T)) %>%
mutate(abu = n / sum * 100) %>%
pivot_wider(names_from = "id", values_from = "abu") %>%
group_by(name) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T))) %>%
select(-n, -sum)
speciesL18 <- read_csv2("data_raw_species_2018_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("L_", .x), -name) %>%
rename_with(~ paste0(.x, "_2018"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor)
speciesW18 <- read_csv2("data_raw_species_2018_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("W_", .x), -name) %>%
rename_with(~ paste0(.x, "_2018"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor) %>%
mutate(name = fct_recode(name, Plantago_major_ssp_intermedia = "Plantago_major"))
speciesL19 <- read_csv2("data_raw_species_2019_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("L_", .x), -name) %>%
rename_with(~ paste0(.x, "_2019"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor) %>%
mutate(name = fct_recode(name, Plantago_major_ssp_major = "Plantago_major"))
speciesW19 <- read_csv2("data_raw_species_2019_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("W_", .x), -name) %>%
rename_with(~ paste0(.x, "_2019"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor) %>%
mutate(name = fct_recode(name, Plantago_major_ssp_major = "Plantago_major"))
speciesL20 <- read_csv2("data_raw_species_2020_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("L_", .x), -name) %>%
rename_with(~ paste0(.x, "_2020"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor)
speciesL20 <- read_csv2("data_raw_species_2020_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_"))# %>%
speciesL20 <- read_csv2("data_raw_species_2020_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) #%>%
speciesL20 <- read_csv("data_raw_species_2020_land.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("L_", .x), -name) %>%
rename_with(~ paste0(.x, "_2020"), -name) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor)
speciesW20 <- read_csv2("data_raw_species_2020_water.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = col_double(),
name = col_factor()
)) %>%
mutate(name = str_replace(name, " ", "_")) %>%
rename_with( ~ paste0("W_", .x), -name) %>%
rename_with(~ paste0(.x, "_2020"), -name) %>%
mutate(name = str_replace(name, "Plantago_major ssp. major", "Plantago_major_ssp_major")) %>%
mutate(name = str_replace(name, "Plantago_major ssp. intermedia", "Plantago_major_ssp_intermedia")) %>%
separate(name, c("name", "descriptor"), " ", extra = "drop", fill = "right") %>%
mutate(name = as_factor(str_replace(name, "\\.", ""))) %>%
select(-descriptor)
### b Join species tables -------------------------------------------------------------------------------------------
speciesL <- speciesLseeded %>%
full_join(speciesL18, by = "name") %>%
full_join(speciesL19, by = "name") %>%
full_join(speciesL20, by = "name")
speciesW <- speciesWseeded %>%
full_join(speciesW18, by = "name") %>%
full_join(speciesW19, by = "name") %>%
full_join(speciesW20, by = "name")
species <- full_join(speciesL, speciesW) %>%
### Rename species ###
mutate(name = fct_recode(name, Carex_praecox_ssp_praecox = "Carex_praecox")) %>%
mutate(name = fct_recode(name, Cerastium_fontanum_ssp_vulgare = "Cerastium_fontanum")) %>%
mutate(name = fct_recode(name, Cerastium_fontanum_ssp_vulgare = "Cerastium_holosteoides")) %>%
mutate(name = fct_recode(name, Cornus_controversa = "Cornus_sanguinea")) %>%
mutate(name = fct_recode(name, Cota_tinctoria = "Anthemis_tinctoris")) %>%
mutate(name = fct_recode(name, Erigeron_canadensis = "Conyza_canadensis")) %>%
mutate(name = fct_recode(name, Fallopia_convolvulus = "Polygonum_convolvulus")) %>%
mutate(name = fct_recode(name, Galium_mollugo = "Galium_album")) %>%
mutate(name = fct_recode(name, Jacobaea_vulgaris = "Senecio_jacobaea")) %>%
mutate(name = fct_recode(name, Persicaria_amphibia = "Polygonum_amphibium")) %>%
mutate(name = fct_recode(name, Persicaria_bistorta = "Bistorta_officinalis")) %>%
mutate(name = fct_recode(name, Persicaria_minor = "Polygonum_minus")) %>%
mutate(name = fct_recode(name, Populus_alba = "Popolus_alba")) %>%
mutate(name = fct_recode(name, Silene_latifolia_ssp_alba = "Silene_latifolia")) %>%
mutate(name = fct_recode(name, Silene_latifolia_ssp_alba = "Silene_alba")) %>%
mutate(name = fct_recode(name, "Silene_flos-cuculi" = "Lychnis_flos-cuculi")) %>%
mutate(name = fct_recode(name, Taraxacum_campylodes = "Taraxacum_officinale")) %>%
mutate(name = fct_recode(name, Vicia_sativa_ssp_nigra = "Vicia_angustifolia")) %>%
### combine created duplicates ###
group_by(name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = T))) %>%
### Implement counted inidviduals as 0.5 % in normal columns ###
mutate(across(where(is.numeric) & contains("i"), ~ 0.5 * (. > 0))) %>%
pivot_longer(cols = -name, names_to = "id", values_to = "n") %>%
mutate(id  =  str_replace(id, "i", "")) %>%
group_by(name, id) %>%
summarise(max = max(n, na.rm = T)) %>%
mutate(max = ifelse(is.infinite(max), NA, max)) %>%
pivot_wider(names_from = "id", values_from = "max") %>%
mutate(name = as_factor(name)) %>%
### Rename plots ###
rename_with(~ str_replace(.x, "_1_201", "_01_201")) %>%
rename_with(~ str_replace(.x, "_1_2020", "_01_2020")) %>%
rename_with(~ str_replace(.x, "_2_201", "_02_201")) %>%
rename_with(~ str_replace(.x, "_2_2020", "_02_2020")) %>%
rename_with(~ str_replace(.x, "_3_201", "_03_201")) %>%
rename_with(~ str_replace(.x, "_3_2020", "_03_2020")) %>%
rename_with(~ str_replace(.x, "_4_201", "_04_201")) %>%
rename_with(~ str_replace(.x, "_4_2020", "_04_2020")) %>%
rename_with(~ str_replace(.x, "_5_201", "_05_201")) %>%
rename_with(~ str_replace(.x, "_5_2020", "_05_2020")) %>%
rename_with(~ str_replace(.x, "_6_201", "_06_201")) %>%
rename_with(~ str_replace(.x, "_6_2020", "_06_2020")) %>%
rename_with(~ str_replace(.x, "_7_201", "_07_201")) %>%
rename_with(~ str_replace(.x, "_7_2020", "_07_2020")) %>%
rename_with(~ str_replace(.x, "_8_201", "_08_201")) %>%
rename_with(~ str_replace(.x, "_8_2020", "_08_2020")) %>%
rename_with(~ str_replace(.x, "_9_201", "_09_201")) %>%
rename_with(~ str_replace(.x, "_9_2020", "_09_2020")) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W")), na.rm = T)) %>%
mutate(presence = if_else(total > 0, 1, 0)) %>%
filter(presence == 1) %>%
ungroup() %>%
select(-total, -presence) %>%
mutate(name = as.character(name)) %>%
arrange(name) %>%
mutate(name = as_factor(name)) %>%
### Check that each plot has at least one species ###
pivot_longer(-name, names_to = "id", values_to = "value") %>%
group_by(id) %>%
mutate(sum = sum(value, na.rm = T)) %>%
filter(sum > 0) %>%
select(-sum) %>%
pivot_wider(names_from = id, values_from = value)
rm(list = setdiff(ls(), c("species")))
specieslist <- species %>%
mutate_if(is.numeric, ~1 * (. != 0)) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
View(specieslist)
write_csv(specieslist, "specieslist.csv")
A <- c("a", "b", "c", "")
B <- c(",", ".", "", "-")
df <- data.frame(A, B)
naniar::replace_with_na_all(data = df, condition = ~.x == "")
naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.x == ""
naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.x == "")
naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.A == "")
naniar::replace_with_na_at(data = df, .vars = A, condition = ~.A == "")
naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.A == "")
naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.A == "")
naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.x == "")
naniar::replace_with_na_all(data = df, condition = ~.x == "")
naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.x == "")
c <- naniar::replace_with_na_at(data = df, .vars = "A", condition = ~.x == "")
View(c)
naniar::replace_with_na_at(data = df, .vars = c("A", "B"), condition = ~.x == "")
