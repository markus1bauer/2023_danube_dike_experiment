family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m_full <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio + seedDensity + substrateDepth)^3 +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m3 <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio)^3 + seedDensity + substrateDepth +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m_full_flat <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio + seedDensity + substrateDepth)^3 +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m3_flat <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio)^3 + seedDensity + substrateDepth +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m_1 <- m_simple
m_2 <- m3
bayes_R2(m_1, probs = c(0.05, 0.5, 0.95),
re_formula =  ~ (1 | block/plot) + (1 | botanist_year))
bayes_R2(m_2, probs = c(0.05, 0.5, 0.95),
re_formula =  ~ (1 | block/plot) + (1 | botanist_year))
bayes_R2(m_1, probs = c(0.05, 0.5, 0.95),
re_formula = 1 ~ 1)
bayes_R2(m_2, probs = c(0.05, 0.5, 0.95),
re_formula = 1 ~ 1)
createDHARMa(
simulatedResponse = t(posterior_predict(m_1)),
observedResponse = sites$n,
fittedPredictedResponse = apply(t(posterior_epred(m_1)), 1, mean),
integerResponse = TRUE
) %>%
plot()
createDHARMa(
simulatedResponse = t(posterior_predict(m_2)),
observedResponse = sites$n,
fittedPredictedResponse = apply(t(posterior_epred(m_2)), 1, mean),
integerResponse = TRUE
) %>%
plot()
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
#"b_substrateDepth30",
#"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionnorth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sd_botanist_year__Intercept",
"sigma"
)
)
posterior2 <- m_2 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
"b_substrateDepth30",
"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionnorth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sd_botanist_year__Intercept",
"sigma"
)
)
hmc_diagnostics1 <- nuts_params(m_1)
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
#"b_substrateDepth30",
#"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionnorth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sigma"
)
)
posterior1 <- m_1 %>%
posterior::as_draws() #%>%
View(posterior1)
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
#"b_substrateDepth30",
#"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionsouth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sigma"
)
)
posterior2 <- m_2 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
"b_substrateDepth30",
"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionsouth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sigma"
)
)
hmc_diagnostics1 <- nuts_params(m_1)
hmc_diagnostics2 <- nuts_params(m_2)
y <- sites$n
yrep1 <- posterior_predict(m_1, draws = 500)
yrep2 <- posterior_predict(m_2, draws = 500)
loo1 <- loo(m_1, save_psis = TRUE, moment_match = FALSE)
loo2 <- loo(m_2, save_psis = TRUE, moment_match = FALSE)
### Samling efficency/effectiveness (Rhat and EFF) ###
draws1 <- m_1 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
draws2 <- m_2 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
range(draws1$rhat)
range(draws2$rhat)
range(draws1$ess_bulk)
range(draws2$ess_bulk)
range(draws1$ess_tail)
range(draws2$ess_tail)
### * MCMC diagnostics ####
mcmc_trace(posterior1, np = hmc_diagnostics1)
mcmc_trace(posterior2, np = hmc_diagnostics2)
mcmc_pairs(posterior1, off_diag_args = list(size = 1.2))
mcmc_pairs(posterior2, off_diag_args = list(size = 1.2))
mcmc_scatter(m_1,
pars = c("b_surveyYear_fac2020", "b_surveyYear_fac2019"),
np = hmc_diagnostics1,
size = 1)
mcmc_scatter(m_2,
pars = c("b_surveyYear_fac2020", "b_surveyYear_fac2019"),
np = hmc_diagnostics2,
size = 1)
mcmc_parcoord(posterior1, np = hmc_diagnostics1)
mcmc_parcoord(posterior2, np = hmc_diagnostics2)
### * Posterior predictive check ####
#### Kernel density
ppc_dens_overlay(y, yrep1[1:50, ])
ppc_dens_overlay(y, yrep2[1:50, ])
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$block)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$block)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$exposition)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$exposition)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$surveyYear_fac)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$surveyYear_fac)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$targetType)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$targetType)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$seedDensity)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$seedDensity)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$sandRatio)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$sandRatio)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$substrateDepth)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$substrateDepth)
#### Histograms of statistics skew
ppc_stat(y, yrep1, binwidth = 0.001)
ppc_stat(y, yrep2, binwidth = 0.001)
ppc_stat_grouped(y, yrep1, group = sites$block, binwidth = 0.001)
ppc_stat_grouped(y, yrep2, group = sites$block, binwidth = 0.001)
ppc_stat_grouped(y, yrep1, group = sites$exposition, binwidth = 0.001)
ppc_stat_grouped(y, yrep2, group = sites$exposition, binwidth = 0.001)
ppc_stat_grouped(y, yrep1, group = sites$surveyYear_fac, binwidth = 0.001)
ppc_stat_grouped(y, yrep2, group = sites$surveyYear_fac, binwidth = 0.001)
ppc_stat_grouped(y, yrep1, group = sites$targetType, binwidth = 0.001)
ppc_stat_grouped(y, yrep2, group = sites$targetType, binwidth = 0.001)
ppc_stat_grouped(y, yrep1, group = sites$seedDensity, binwidth = 0.001)
ppc_stat_grouped(y, yrep2, group = sites$seedDensity, binwidth = 0.001)
ppc_stat_grouped(y, yrep1, group = sites$sandRatio, binwidth = 0.001)
ppc_stat_grouped(y, yrep2, group = sites$sandRatio, binwidth = 0.001)
ppc_stat_grouped(y, yrep1, group = sites$substrateDepth, binwidth = 0.001)
ppc_stat_grouped(y, yrep2, group = sites$substrateDepth, binwidth = 0.001)
#### LOO-PIT plots
ppc_loo_pit_overlay(y, yrep1, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(y, yrep2, lw = weights(loo2$psis_object))
plot(loo1)
plot(loo2)
### * Autocorrelation ####
mcmc_acf(posterior1, lags = 10)
mcmc_acf(posterior2, lags = 10)
#### LOO-PIT plots
ppc_loo_pit_overlay(y, yrep1, lw = weights(loo1$psis_object))
prior_summary(m_simple)
bayes_R2(m_1, probs = c(0.05, 0.5, 0.95),
re_formula =  ~ (1 | block/plot) + (1 | botanist_year))
sjPlot::plot_model(m3, type = "est")
sjPlot::plot_model(m3_flat, type = "est")
sjPlot::plot_model(m_1, type = "pred", ppd = TRUE, terms = c(
"sandRatio", "substrateDepth", "surveyYear_fac", "exposition"
))
sjPlot::plot_model(m_1, type = "pred", ppd = TRUE, terms = c(
"sandRatio", "index", "surveyYear_fac", "exposition"
))
sjPlot::plot_model(m_1, type = "pred", ppd = TRUE, terms = c(
"targetType", "index", "surveyYear_fac", "exposition"
))
(emm <- emmeans(m_1, revpairwise ~ targetType + sandRatio |
exposition | surveyYear_fac | index, type = "response"))
(emm <- emmeans(m_1, revpairwise ~ substrateDepth + sandRatio |
exposition | surveyYear_fac < index, type = "response"))
(emm <- emmeans(m_1, revpairwise ~ seedDensity |
exposition | surveyYear_fac | index, type = "response"))
sjPlot::plot_model(m3, type = "est")
(emm <- emmeans(m_1, revpairwise ~ substrateDepth + sandRatio |
exposition | surveyYear_fac < index, type = "response"))
(emm <- emmeans(m_1, revpairwise ~ targetType + sandRatio |
exposition | surveyYear_fac | index, type = "response"))
### Save ###
write.csv(draws, here("outputs", "statistics", "table_persistence_mX.csv"))
### Save ###
write.csv(draws2, here("outputs", "statistics", "table_persistence_mX.csv"))
m_1 <- m3_flat
bayes_R2(m_1, probs = c(0.05, 0.5, 0.95),
re_formula =  ~ (1 | block/plot) + (1 | botanist_year))
bayes_R2(m_2, probs = c(0.05, 0.5, 0.95),
re_formula =  ~ (1 | block/plot) + (1 | botanist_year))
bayes_R2(m_1, probs = c(0.05, 0.5, 0.95),
re_formula = 1 ~ 1)
bayes_R2(m_2, probs = c(0.05, 0.5, 0.95),
re_formula = 1 ~ 1)
createDHARMa(
simulatedResponse = t(posterior_predict(m_1)),
observedResponse = sites$n,
fittedPredictedResponse = apply(t(posterior_epred(m_1)), 1, mean),
integerResponse = TRUE
) %>%
plot()
createDHARMa(
simulatedResponse = t(posterior_predict(m_2)),
observedResponse = sites$n,
fittedPredictedResponse = apply(t(posterior_epred(m_2)), 1, mean),
integerResponse = TRUE
) %>%
plot()
### * Preparation for evaluation ####
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
#"b_substrateDepth30",
#"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionsouth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sigma"
)
)
### * Preparation for evaluation ####
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
"b_substrateDepth30",
"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionsouth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sigma"
)
)
posterior2 <- m_2 %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
"b_substrateDepth30",
"b_seedDensity8",
"b_targetTypedry_grassland",
"b_sandRatio25",
"b_sandRatio50",
"b_expositionsouth",
"sd_block__Intercept",
"sd_block:plot__Intercept",
"sigma"
)
)
hmc_diagnostics1 <- nuts_params(m_1)
hmc_diagnostics2 <- nuts_params(m_2)
y <- sites$n
yrep1 <- posterior_predict(m_1, draws = 500)
yrep2 <- posterior_predict(m_2, draws = 500)
loo1 <- loo(m_1, save_psis = TRUE, moment_match = FALSE)
loo2 <- loo(m_2, save_psis = TRUE, moment_match = FALSE)
### * Samling efficency/effectiveness (Rhat and EFF) ####
draws1 <- m_1 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
draws2 <- m_2 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
### * Samling efficency/effectiveness (Rhat and EFF) ####
range(draws1$rhat)
range(draws2$rhat)
range(draws1$ess_bulk)
range(draws2$ess_bulk)
range(draws1$ess_tail)
range(draws2$ess_tail)
### * MCMC diagnostics ####
mcmc_trace(posterior1, np = hmc_diagnostics1)
mcmc_trace(posterior2, np = hmc_diagnostics2)
mcmc_pairs(posterior1, off_diag_args = list(size = 1.2))
mcmc_parcoord(posterior1, np = hmc_diagnostics1)
mcmc_parcoord(posterior2, np = hmc_diagnostics2)
### * Posterior predictive check ####
#### Kernel density
ppc_dens_overlay(y, yrep1[1:50, ])
ppc_dens_overlay(y, yrep2[1:50, ])
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$block)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$block)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$exposition)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$exposition)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$surveyYear_fac)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$surveyYear_fac)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$targetType)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$targetType)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$seedDensity)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$seedDensity)
ppc_dens_overlay_grouped(y, yrep1[1:50, ], group = sites$sandRatio)
ppc_dens_overlay_grouped(y, yrep2[1:50, ], group = sites$sandRatio)
prior_summary(m_simple)
prior_summary(m3_flat)
iter = 10000
chains = 4
thin = 2
m3 <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio)^3 + seedDensity + substrateDepth +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m31 <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio)^3 + seedDensity + substrateDepth +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
max_treedepth = 12,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m31 <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio)^3 + seedDensity + substrateDepth +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
max_treedepth = 11,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m31 <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio)^3 + seedDensity + substrateDepth +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
max_treedepth = 10.5,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m31 <- brm(n ~ (index + exposition + surveyYear_fac +
targetType + sandRatio)^3 + seedDensity + substrateDepth +
targetType:exposition:surveyYear_fac:index +
sandRatio:exposition:surveyYear_fac:index +
(1 | block/plot),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 0.6)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
control = list(adapt_delta = 0.99, max_treedepth = 12),
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
