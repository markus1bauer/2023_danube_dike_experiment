### Save ###
ggsave(here("outputs", "figures",
"figure_3_persistence_coef_800dpi_24x8cm.tiff"),
dpi = 800, width = 24, height = 8, units = "cm")
(graph_a <- p2 +
labs(x = expression(Delta ~ Persistence)))
# Dike grassland field experiment
# Favourable conservation status ####
# Show figure 4
# Markus Bauer
# 2022-12-12
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation ###############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
suppressPackageStartupMessages(library(brms))
suppressPackageStartupMessages(library(tidybayes))
library(ggbeeswarm)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv(
here("data", "processed", "data_processed_sites.csv"),
col_names = TRUE, na = c("na", "NA", ""), col_types =
cols(
.default = "?",
plot = "f",
site = "f",
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c("hay_meadow", "dry_grassland")),
seed_density = "f",
exposition = col_factor(levels = c("north", "south")),
survey_year = "c"
)
) %>%
### Exclude data of seed mixtures
filter(survey_year != "seeded") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, exposition, sep = " "),
botanist_year = factor(botanist_year),
n = fcs_target,
id = factor(id)
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
### * Model ####
load(file = here("outputs", "models", "model_fcs_2.Rdata"))
model <- sites %>%
add_epred_draws(m2, allow_new_levels = TRUE)
### * Functions ####
theme_mb <- function() {
theme(
panel.background = element_rect(fill = "white"),
text = element_text(size = 9, color = "black"),
strip.text = element_text(size = 10),
axis.text = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.title = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.line = element_line(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = 9),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, "cm"),
plot.margin = margin(0, 0, 0, 0, "cm")
)
}
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ######################################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## 1 Marginal effects #########################################################
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 2.0), breaks = seq(-100, 400, 1)) +
scale_color_manual(breaks = c("hay_meadow", "dry_grassland"),
labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", color = "", y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
### Save ###
ggsave(here("outputs", "figures",
"figure_4_fcs_epred_800dpi_24x8cm.tiff"),
dpi = 800, width = 24, height = 8, units = "cm")
p1 + theme(legend.position = "bottom")
ggsave(here("outputs", "figures",
"figure_4_fcs_epred_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
## 2 Coefficients #############################################################
(p2 <- m2 %>%
gather_draws(
b_sand_ratio25, b_sand_ratio50, b_substrate_depth15,
b_target_typedry_grassland, b_seed_density8#,
#b_expositionsouth,
) %>%
mutate(
.variable = as.factor(.variable),
.variable = fct_relevel(
.variable, "b_sand_ratio25", "b_sand_ratio50", "b_substrate_depth15",
"b_target_typedry_grassland", "b_seed_density8"#,
#"b_expositionsouth"
),
.variable = fct_relevel(.variable, rev),
.variable = fct_recode(
.variable,
"Hay meadow vs. Dry grassland" = "b_target_typedry_grassland",
"Sand ratio: 0 vs. 25 %" = "b_sand_ratio25",
"Sand ratio: 0 vs. 50 %" = "b_sand_ratio50",
"Substrate depth: 30 vs. 15 cm" = "b_substrate_depth15",
"Seed density: 4 vs. 8 g/m²" = "b_seed_density8"#,
#"North vs. south" = "b_expositionsouth"
)
) %>%
ggplot(aes(x = .value, y = .variable)) +
geom_vline(xintercept = 0, linetype = "dashed") +
stat_halfeye() +
scale_x_continuous(breaks = seq(-100, 400, .5), limits = c(-.5, .7)) +
labs(x = expression(Delta ~ Favourabale ~ Conservation ~ Status ~ "(FCS)"),
y = "") +
theme_mb())
### Save ###
ggsave(here("outputs", "figures",
"figure_4_fcs_coef_800dpi_24x8cm2.tiff"),
dpi = 800, width = 24, height = 8, units = "cm")
(graph_b <- p2 +
labs(x = expression(Delta ~ "FCS")) +
theme(axis.text.y = element_blank(), axis.line.y = element_blank(),
axis.ticks.y = element_blank()))
# Dike grassland field experiment
# Favourable conservation status ####
# Show figure 5
# Markus Bauer
# 2022-12-12
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation ###############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
library(ggrepel)
library(tidybayes)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
### Load data ###
sites <- read_csv(
here("data", "processed", "data_processed_sites_nmds.csv"),
col_names = TRUE, na = c("na", "NA", ""),
col_types = cols(
.default = "?",
id = "f",
plot = "f",
site = "f",
exposition = col_factor(levels = c("north", "south")),
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = col_factor(levels = c("hay_meadow", "dry_grassland")),
seed_density = "f"
)
) %>%
filter(reference == "2018" | reference == "2019" | reference == "2020" |
reference == "2021") %>%
mutate(
survey_year_fct = factor(survey_year),
survey_year = as.numeric(survey_year),
botanist_year = str_c(survey_year, botanist, exposition, sep = " "),
botanist_year = factor(botanist_year),
n = recovery_time
)
### * Model ####
base::load(file = here("outputs", "models", "model_recovery_2.Rdata"))
model <- sites %>%
tidybayes::add_epred_draws(m2, allow_new_levels = TRUE)
### * Functions ####
theme_mb <- function() {
theme(
panel.background = element_rect(fill = "white"),
text = element_text(size = 9, color = "black"),
strip.text = element_text(size = 10),
axis.text = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.title = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.line = element_line(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = 9),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, "cm"),
plot.margin = margin(0, 0, 0, 0, "cm")
)
}
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ######################################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## 1 Expectations of predicted draws ###########################################
sd <- sum(as.numeric(as.character(
as.data.frame(table(sites$sd_reference))$Var1
))) / 4
(p1 <- ggplot(data = sites) +
geom_rect(aes(ymin = 0 - sd, ymax = 0 + sd, xmin = -Inf, xmax = Inf),
fill = "grey85") +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
tidybayes::stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2, .24), breaks = seq(-100, 400, .5)) +
scale_color_manual(
breaks = c("hay_meadow", "dry_grassland"),
labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")
) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression(Successional ~ distance ~
"(" * italic(d)[italic(jt) * ",0"] * ")")
) +
theme_mb())
### Save ###
ggsave(here("outputs", "figures",
"figure_5_recovery_epred_800dpi_24x8cm.tiff"),
dpi = 800, width = 24, height = 8, units = "cm")
p1 + theme(legend.position = "bottom")
ggsave(here("outputs", "figures",
"figure_5_recovery_epred_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
## 2 Coefficients #############################################################
(p2 <- m2 %>%
tidybayes::gather_draws(
b_sand_ratio25, b_sand_ratio50, b_substrate_depth15,
b_target_typedry_grassland, b_seed_density8#,
#b_expositionsouth, b_survey_year_fct2019,
#b_survey_year_fct2020, b_survey_year_fct2021
) %>%
mutate(
.variable = as.factor(.variable),
.variable = fct_relevel(
.variable, "b_sand_ratio25", "b_sand_ratio50", "b_substrate_depth15",
"b_target_typedry_grassland", "b_seed_density8"#,
#"b_expositionsouth", "b_survey_year_fct2019",
#"b_survey_year_fct2020", "b_survey_year_fct2021"
),
.variable = fct_relevel(.variable, rev),
.variable = fct_recode(
.variable,
"Hay meadow vs. Dry grassland" = "b_target_typedry_grassland",
"Sand ratio: 0 vs. 25 %" = "b_sand_ratio25",
"Sand ratio: 0 vs. 50 %" = "b_sand_ratio50",
"Substrate depth: 30 vs. 15 cm" = "b_substrate_depth15",
"Seed density: 4 vs. 8 g/m²" = "b_seed_density8"#,
#"North vs. south" = "b_expositionsouth",
#"2018 vs. 2019" = "b_survey_year_fct2019",
#"2018 vs. 2020" = "b_survey_year_fct2020",
#"2018 vs. 2021" = "b_survey_year_fct2021"
)
) %>%
ggplot(aes(x = .value, y = .variable)) +
geom_vline(xintercept = 0, linetype = "dashed") +
tidybayes::stat_halfeye() +
scale_x_continuous(breaks = seq(-100, 400, .2)) +
labs(x = expression(Delta ~ Successional ~ distance ~
"(" * italic(d)[italic(jt) * ",0"] * ")"), y = "") +
theme_mb())
### Save ###
ggsave(here("outputs", "figures",
"figure_5_recovery_coef_800dpi_24x8cm.tiff"),
dpi = 800, width = 24, height = 8, units = "cm")
(graph_c <- p2 +
labs(x = expression(Delta ~ Recovery)) +
theme(axis.text.y = element_blank(), axis.line.y = element_blank(),
axis.ticks.y = element_blank()))
# Dike grassland field experiment
# Simple effects ####
# Show figure 2
# Markus Bauer
# 2022-12-12
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation ###############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(patchwork)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot #######################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
((graph_a + theme(legend.position = "none")) |
graph_b) |
(graph_c + theme(legend.position = c(.19, .88))) +
plot_layout(guides = "keep") +
plot_annotation(tag_levels = "A", tag_prefix = "", tag_suffix = "") &
theme(plot.tag = element_text(size = 10, face = "bold"))
### Save ###
ggsave(
here("outputs", "figures", "figure_2_800dpi_16.5x5cm.tiff"),
dpi = 800, width = 16.5, height = 5, units = "cm"
)
# Dike grassland field experiment
# NMDS ordination ####
# Show figure 6
# Markus Bauer
# 2022-11-15
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation ###############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(vegan)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d", "ordi")))
setwd(here("data", "processed"))
### Functions ###
theme_mb <- function() {
theme(
panel.background = element_rect(fill = "white"),
text = element_text(size = 9, color = "black"),
strip.text = element_text(size = 10),
axis.text = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.title = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.line = element_line(),
legend.key = element_rect(fill = "white"),
legend.position = "bottom",
legend.text = element_text(size = 9),
legend.margin = margin(0, 0, 0, 0, "cm"),
plot.margin = margin(0, 0, 0, 0, "cm")
)
}
vegan_cov_ellipse <- function(cov, center = c(0, 0), scale = 1, npoints = 100) {
theta <- (0:npoints) * 2 * pi / npoints
Circle <- cbind(cos(theta), sin(theta))
t(center + scale * t(Circle %*% chol(cov)))
}
#### Load sites data and model ###
sites_nmds <- read_csv("data_processed_sites_nmds.csv",
col_names = TRUE, na = c("na", "NA", ""),
col_types = cols(.default = "?"))
base::load(file = here("outputs", "models", "model_nmds.Rdata"))
ordi
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ######################################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### * Preparation ####
ellipses <- tibble()
### Copy references to both expositions ###
data <- sites_nmds %>%
filter(exposition == "other") %>%
mutate(exposition = "north")
data <- data %>%
mutate(exposition = "south") %>%
bind_rows(data)
sites_nmds <- sites_nmds %>%
filter(!(exposition == "other")) %>%
bind_rows(data)
### Copy negative references to both target_types ###
data <- sites_nmds %>%
filter(target_type == "other") %>%
mutate(target_type = "hay_meadow")
data <- data %>%
mutate(target_type = "dry_grassland") %>%
bind_rows(data)
sites_nmds <- sites_nmds %>%
filter(!(target_type == "other")) %>%
bind_rows(data) %>%
filter(!(reference == "-Reference" & exposition == "north"))
sites_nmds <- sites_nmds %>%
### Select variables to plot ###
select(id, NMDS1, NMDS2, reference, exposition, target_type) %>% # modify group
mutate(
group_type = str_c(
reference, exposition, target_type, sep = "." # modify group
)
) %>%
group_by(group_type) %>%
mutate(mean1 = mean(NMDS1),
mean2 = mean(NMDS2)) %>%
### Exclude not needed reference categories ###
filter(reference != "Grassland" & reference != "no") %>%
mutate(group_type = factor(group_type))
### Calculate ellipses for plot ###
for (group in levels(sites_nmds$group_type)) {
ellipses_calc <- sites_nmds %>%
filter(group_type == group) %>%
with(
cov.wt(
cbind(NMDS1, NMDS2),
wt = rep(1 / length(NMDS1), length(NMDS1))
)
)
ellipses <-
vegan_cov_ellipse(
cov = ellipses_calc$cov, center = ellipses_calc$center
) %>%
as_tibble() %>%
bind_cols(group_type = group) %>%
bind_rows(ellipses)
data_ellipses <- ellipses %>%
separate(
group_type,
sep = "\\.",
c("reference", "exposition", "target_type")
)
}
#### * Plot ####
(graph_a <- ggplot() +
geom_point(
aes(y = NMDS2, x = NMDS1,
color = reference, shape = reference, alpha = reference),
data = sites_nmds,
cex = 2
) +
facet_grid(
exposition ~ target_type,
labeller = as_labeller(
c(south = "South", north = "North",
"dry_grassland" = "Dry grassland", "hay_meadow" = "Hay meadow")
)
) +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_path(
aes(x = NMDS1, y = NMDS2, color = reference),
data = data_ellipses,
size = 1,
show.legend = FALSE
) +
coord_fixed() +
scale_shape_manual(
values = c(
"triangle", "square",
"circle open", "circle open", "circle open", "circle open",
"square open"
)
) +
scale_color_manual(
values = c(
"grey", "royalblue",
"orange1", "firebrick2", "deeppink3", "mediumpurple4",
"black"
)
) +
scale_alpha_manual(values = c(.7, .7, .3, .3, .3, .3, .6)) +
labs(
x = "NMDS1", y = "NMDS2", fill = "", color = "", shape = "", alpha = ""
) +
theme_mb())
### Save ###
ggsave(here("outputs", "figures", "figure_6_nmds_800dpi_16.5x16cm.tiff"),
dpi = 800, width = 16.5, height = 16, units = "cm")
graph_a + theme(legend.position = "right")
ggsave(here("outputs", "figures", "figure_6_nmds_800dpi_18x13cm.tiff"),
dpi = 800, width = 18, height = 13, units = "cm")
