mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Check congruency of traits and species table ###
traits[duplicated(traits$abb),]
#traits$name[which(!(traits$name %in% species$name))]
species$name[which(!(species$name %in% traits$name))]
traits <- semi_join(traits, species, by = "name")
### Check typos ###
sites %>%
filter(!str_detect(id, "_seeded$")) %>%
janitor::tabyl(vegetationCov)
#sites %>% filter(vegetationCov == 17)
species %>%
select(-name, -ends_with("_seeded")) %>%
unlist() %>%
janitor::tabyl()
species %>% # Check special typos
pivot_longer(-name, names_to = "id", values_to = "value") %>%
filter(value == 90)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("W5_02"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("W"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L_01"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_01"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_02"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_11"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_13"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_19"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Start ###
#installr::updateR(browse_news = F, install_R = T, copy_packages = T, copy_Rprofile.site = T, keep_old_packages = T, update_packages = T, start_new_R = F, quit_R = T, print_R_versions = T, GUI = F)
rm(list = ls())
setwd(here("data/raw"))
sites <- read_csv("data_raw_sites.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
surveyDate_seeded = col_date(format = "%Y-%m-%d"),
surveyDate_2018 = col_date(format = "%Y-%m-%d"),
surveyDate_2019 = col_date(format = "%Y-%m-%d"),
surveyDate_2020 = col_date(format = "%Y-%m-%d"),
surveyDate_2021 = col_date(format = "%Y-%m-%d"),
botanist_2018 = "c",
botanist_2019 = "c",
botanist_2020 = "c",
botanist_2021 = "c",
vegetationCov_2018 = "c",
vegetationCov_2019 = "c",
vegetationCov_2020 = "c",
vegetationCov_2021 = "c",
bioMass_2019 = "c"
)) %>%
select(-starts_with("surveyDate")) %>%
pivot_longer(starts_with("vegetationCov_") | starts_with("botanist_") | starts_with("bioMass_"),
names_to = c("x", "surveyYear"),
names_sep = "_",
values_to = "n") %>%
pivot_wider(names_from = x, values_from = n) %>%
mutate(plot = str_replace(plot, "-", "_"),
plot = str_replace(plot, "L_", "L"),
plot = str_replace(plot, "W_", "W"),
id = str_c(plot, surveyYear, sep = "_"),
plot = factor(plot),
id = factor(id),
vegetationCov = as.numeric(vegetationCov),
surveyYear = as.numeric(surveyYear),
bioMass = as.numeric(bioMass)) %>%
filter(!(block == "C" & (surveyYear == "seeded" |
surveyYear == "2018" |
surveyYear == "2019" |
surveyYear == "2020")))
species <- data.table::fread("data_raw_species_20211011.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W") | starts_with("C")), na.rm = T),
presence = if_else(total > 0, 1, 0),
name = factor(name)) %>%
filter(presence == 1) %>% # filter species
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
na_if(0)
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
traits <- read_csv("data_raw_traits.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = F, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = factor(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = T) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Check congruency of traits and species table ###
traits[duplicated(traits$abb),]
#traits$name[which(!(traits$name %in% species$name))]
species$name[which(!(species$name %in% traits$name))]
traits <- semi_join(traits, species, by = "name")
### Check typos ###
sites %>%
filter(!str_detect(id, "_seeded$")) %>%
janitor::tabyl(vegetationCov)
#sites %>% filter(vegetationCov == 17)
species %>%
select(-name, -ends_with("_seeded")) %>%
unlist() %>%
janitor::tabyl()
species %>% # Check special typos
pivot_longer(-name, names_to = "id", values_to = "value") %>%
filter(value == 90)
### Compare vegetationCov and accumulatedCov ###
species %>%
summarise(across(where(is.double),~sum(.x, na.rm = T))) %>%
pivot_longer(cols = everything(), names_to = "id", values_to = "value") %>%
mutate(id = factor(id)) %>%
full_join(sites, by = "id") %>%
mutate(diff = (value - vegetationCov)) %>%
select(id, surveyYear, value, vegetationCov, diff) %>%
filter(!str_detect(id, "_seeded$")) %>%
filter(diff > 20 | diff < -5) %>%
arrange(surveyYear, id, diff) %>%
print(n = 100)
### Check plots over time ###
species %>%
select(name, starts_with("L1_19"), -ends_with("_seeded")) %>%
filter(if_any(starts_with("L"), ~ . > 0)) %>%
print(n = 100)
### Check missing data ###
miss_var_summary(sites, order = T)
vis_miss(sites, cluster = F)
miss_var_summary(traits, order = T)
vis_miss(traits, cluster = F, sort_miss = T)
#sites[is.na(sites$id),]
rm(list=setdiff(ls(), c("sites", "species", "traits")))
### Packages ###
library(here)
library(tidyverse)
library(vegan)
library(FD) #dbFD()
library(naniar) #are_na()
### Start ###
#installr::updateR(browse_news = F, install_R = T, copy_packages = T, copy_Rprofile.site = T, keep_old_packages = T, update_packages = T, start_new_R = F, quit_R = T, print_R_versions = T, GUI = F)
rm(list = ls())
setwd(here("data/raw"))
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Load data ##############################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### 1 Sites #####################################################################################
sites <- read_csv("data_raw_sites.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
surveyDate_seeded = col_date(format = "%Y-%m-%d"),
surveyDate_2018 = col_date(format = "%Y-%m-%d"),
surveyDate_2019 = col_date(format = "%Y-%m-%d"),
surveyDate_2020 = col_date(format = "%Y-%m-%d"),
surveyDate_2021 = col_date(format = "%Y-%m-%d"),
botanist_2018 = "c",
botanist_2019 = "c",
botanist_2020 = "c",
botanist_2021 = "c",
vegetationCov_2018 = "c",
vegetationCov_2019 = "c",
vegetationCov_2020 = "c",
vegetationCov_2021 = "c",
bioMass_2019 = "c"
)) %>%
select(-starts_with("surveyDate")) %>%
pivot_longer(starts_with("vegetationCov_") | starts_with("botanist_") | starts_with("bioMass_"),
names_to = c("x", "surveyYear"),
names_sep = "_",
values_to = "n") %>%
pivot_wider(names_from = x, values_from = n) %>%
mutate(plot = str_replace(plot, "-", "_"),
plot = str_replace(plot, "L_", "L"),
plot = str_replace(plot, "W_", "W"),
id = str_c(plot, surveyYear, sep = "_"),
plot = factor(plot),
id = factor(id),
vegetationCov = as.numeric(vegetationCov),
surveyYear = as.numeric(surveyYear),
bioMass = as.numeric(bioMass)) %>%
filter(!(block == "C" & (surveyYear == "seeded" |
surveyYear == "2018" |
surveyYear == "2019" |
surveyYear == "2020")))
### 2 Species #####################################################################################
species <- data.table::fread("data_raw_species_20211011.csv",
sep = ",",
dec = ".",
skip = 0,
header = T,
na.strings = c("", "NA", "na"),
colClasses = list(
character = "name"
)) %>%
### Check that each species occurs at least one time ###
group_by(name) %>%
arrange(name) %>%
mutate(total = sum(c_across(starts_with("L") | starts_with("W") | starts_with("C")), na.rm = T),
presence = if_else(total > 0, 1, 0),
name = factor(name)) %>%
filter(presence == 1) %>% # filter species
ungroup() %>%
select(name, sort(tidyselect::peek_vars()), -total, -presence) %>%
na_if(0)
### Create list with species names and their frequency ###
specieslist <- species %>%
mutate(across(where(is.numeric), ~1 * (. != 0))) %>%
mutate(sum = rowSums(across(where(is.numeric)), na.rm = T), .keep = "unused") %>%
group_by(name) %>%
summarise(sum = sum(sum))
#write_csv(specieslist, here("outputs/tables/specieslist_20211011.csv"))
### 3 Traits #####################################################################################
traits <- read_csv("data_raw_traits.csv", col_names = T, na = c("", "NA", "na"), col_types =
cols(
.default = "f",
name = "c",
l = "d",
t = "d",
k = "d",
f = "d",
r = "d",
n = "d",
)) %>%
separate(name, c("genus", "species", "ssp", "subspecies"), "_",
remove = F, extra = "drop", fill = "right") %>%
mutate(genus = str_sub(genus, 1, 4),
species = str_sub(species, 1, 4),
subspecies = str_sub(subspecies, 1, 4),
name = factor(name)) %>%
unite(abb, genus, species, subspecies, sep = "", na.rm = T) %>%
mutate(abb = str_replace(abb, "NA", ""),
abb = as_factor(abb)) %>%
select(-ssp, -synonym, -nomenclature, -legal, -l, -k, -fchange) %>%
arrange(name)
### Check congruency of traits and species table ###
traits[duplicated(traits$abb),]
#traits$name[which(!(traits$name %in% species$name))]
species$name[which(!(species$name %in% traits$name))]
traits <- semi_join(traits, species, by = "name")
#sites[is.na(sites$id),]
rm(list=setdiff(ls(), c("sites", "species", "traits")))
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Create variables ##############################################################################
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### 1 Create simple variables #####################################################################################
sites <- sites %>%
mutate(conf.low = c(1:length(id)),
conf.high = c(1:length(id)))
traits <- traits %>%
mutate(target = if_else(
targetHerb == "yes" | targetGrass == "yes", "yes", "no"
))
### 2 Coverages #####################################################################################
cover <- left_join(species, traits, by = "name") %>%
select(name, family, target, ruderalIndicator, seeded, starts_with("L"), starts_with("W")) %>%
pivot_longer(names_to = "id", values_to = "n", cols = starts_with("L") | starts_with("W")) %>%
group_by(id)
### * graminoid, herb, and total coverage) ####
cover_total_and_graminoid <- cover %>%
group_by(id, family) %>%
summarise(total = sum(n, na.rm = T), .groups = "keep") %>%
mutate(type = if_else(family == "Poaceae" | family == "Cyperaceae" | family == "Juncaceae", "graminoidCov", "herbCov")) %>%
group_by(id, type) %>%
summarise(total = sum(total, na.rm = T), .groups = "keep") %>%
spread(type, total) %>%
mutate(accumulatedCov = graminoidCov + herbCov,
accumulatedCov = round(accumulatedCov, 1)) %>%
ungroup()
### * Target species' coverage ####
cover_target <- cover %>%
filter(target == "yes") %>%
summarise(targetCov = sum(n, na.rm = T)) %>%
mutate(targetCov = round(targetCov, 1)) %>%
ungroup()
### * Ruderal species' coverage ####
cover_ruderalIndicator <- cover %>%
filter(ruderalIndicator == "yes") %>%
summarise(ruderalCov = sum(n, na.rm = T)) %>%
mutate(ruderalCov = round(ruderalCov, 1)) %>%
ungroup()
### * Seeded species' coverage ####
cover_seeded <- species %>%
select(-starts_with("C"), -contains("x0809")) %>%
pivot_longer(-name, names_to = "id", values_to = "value", values_drop_na = T) %>%
separate(id, c("plot", "surveyYear"), sep = "_(?!.*_)",
remove = F, extra = "merge", fill = "warn", convert = F) %>%
pivot_wider(names_from = "surveyYear", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = T)), .groups = "keep") %>%
ungroup() %>%
pivot_longer(starts_with("20"), names_to = "surveyYear", values_to = "value",
names_transform = list(surveyYear = as.factor)) %>%
mutate(success = if_else(seeded > 0 & value > 0, value, 0)) %>%
group_by(plot, surveyYear) %>%
summarise(seededCov = sum(success), .groups = "keep") %>%
ungroup() %>%
unite(id, plot, surveyYear, sep = "_")
### * implement in sites data set ####
sites <- sites %>%
left_join(cover_total_and_graminoid, by = "id") %>%
left_join(cover_target, by = "id") %>%
#right_join(cover_ruderalIndicator, by = "id") %>%
left_join(cover_seeded, by = "id") %>%
### Calcute the ratio of target species richness of total species richness
mutate(targetCovratio = targetCov / accumulatedCov,
graminoidCovratio = graminoidCov / accumulatedCov,
seededCovratio = seededCov / accumulatedCov,
targetCovratio = round(targetCovratio, 3),
graminoidCovratio = round(graminoidCovratio, 3),
seededCovratio = round(seededCovratio, 3))
rm(list = setdiff(ls(), c("sites", "species", "traits")))
speciesRichness <- species %>%
left_join(traits, by = "name") %>%
select(name, rlg, rlb, target, targetHerb, ffh6510, ffh6210, starts_with("L"), starts_with("W")) %>%
pivot_longer(names_to = "id", values_to = "n", cols = starts_with("L") | starts_with("W")) %>%
mutate(n = if_else(n > 0, 1, 0)) %>%
group_by(id)
### * total species richness ####
speciesRichness_all <- speciesRichness %>%
summarise(speciesRichness = sum(n, na.rm = T)) %>%
ungroup()
### * red list Germany (species richness) ####
speciesRichness_rlg <- speciesRichness %>%
filter(rlg == "1" | rlg == "2" | rlg == "3" | rlg == "V") %>%
summarise(rlgRichness = sum(n, na.rm = T)) %>%
ungroup()
### * red list Bavaria (species richness) ####
speciesRichness_rlb <- speciesRichness %>%
filter(rlb == "1" | rlb == "2" | rlb == "3" | rlb == "V") %>%
summarise(rlbRichness = sum(n, na.rm = T)) %>%
ungroup()
### * target species (species richness) ####
speciesRichness_target <- speciesRichness %>%
filter(target == "yes") %>%
summarise(targetRichness = sum(n, na.rm = T)) %>%
ungroup()
### * seeded species (species richness) ####
speciesRichness_seeded <- species %>%
select(-starts_with("C"), -contains("x0809")) %>%
pivot_longer(-name, names_to = "id", values_to = "value", values_drop_na = T) %>%
separate(id, c("plot", "surveyYear"), sep = "_(?!.*_)",
remove = F, extra = "merge", fill = "warn", convert = F) %>%
pivot_wider(names_from = "surveyYear", values_from = "value") %>%
group_by(plot, name) %>%
summarise(across(where(is.double), ~sum(.x, na.rm = T)), .groups = "keep") %>%
ungroup() %>%
pivot_longer(starts_with("20"), names_to = "surveyYear", values_to = "value",
names_transform = list(surveyYear = as.factor)) %>%
mutate(successCov = if_else(seeded > 0 & value > 0, 1, 0)) %>%
group_by(plot, surveyYear) %>%
summarise(seededRichness = sum(successCov), .groups = "keep") %>%
ungroup() %>%
unite(id, plot, surveyYear, sep = "_")
### * ffh6510 species (species richness) ####
speciesRichness_ffh6510 <- speciesRichness %>%
filter(ffh6510 == "yes") %>%
summarise(ffh6510Richness = sum(n, na.rm = T)) %>%
ungroup()
### * ffh6210 species (species richness) ####
speciesRichness_ffh6210 <- speciesRichness %>%
filter(ffh6210 == "yes") %>%
summarise(ffh6210Richness = sum(n, na.rm = T)) %>%
ungroup()
### * implement in sites data set ####
sites <- sites %>%
left_join(speciesRichness_all, by = "id") %>%
left_join(speciesRichness_rlg, by = "id") %>%
left_join(speciesRichness_rlb, by = "id") %>%
left_join(speciesRichness_target, by = "id") %>%
left_join(speciesRichness_seeded, by = "id") %>%
left_join(speciesRichness_ffh6510, by = "id") %>%
left_join(speciesRichness_ffh6210, by = "id") %>%
### Create targetRichratio ###
mutate(targetRichratio = targetRichness / speciesRichness,
seededRichratio = seededRichness / speciesRichness,
targetRichratio = round(targetRichratio, 3),
seededRichratio = round(seededRichratio, 3))
#### b Species eveness and shannon ----------------------------------------------------------------------
data <- species  %>%
mutate(across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
pivot_longer(-name, names_to = "id", values_to = "value") %>%
pivot_wider(names_from = "name", values_from = "value") %>%
column_to_rownames("id") %>%
diversity(index = "shannon") %>%
as_tibble(rownames = NA) %>%
rownames_to_column(var = "id") %>%
mutate(id = factor(id)) %>%
rename(shannon = value)
sites <- sites %>%
left_join(data, by = "id") %>%
mutate(eveness = shannon / log(speciesRichness))
rm(list = ls(pattern = "[^species|traits|sites]"))
write_csv(sites, here("data/processed/data_processed_sites.csv"))
write_csv(traits, here("data/processed/data_processed_traits.csv"))
write_csv(species, here("data/processed/data_processed_species.csv"))
write_csv(speciesseeded, here("data/processed/data_processed_speciesseeded.csv"))
write_csv(species2018, here("data/processed/data_processed_species18.csv"))
write_csv(species2019, here("data/processed/data_processed_species19.csv"))
write_csv(species2020, here("data/processed/data_processed_species20.csv"))
write_csv(species2021, here("data/processed/data_processed_species21.csv"))
