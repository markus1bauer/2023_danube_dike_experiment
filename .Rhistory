) %>%
### Exclude data of seed mixtures
filter(survey_year != "seeded") %>%
mutate(
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year, botanist, exposition, sep = " "),
botanist_year = factor(botanist_year),
n = fcs_target,
id = factor(id)
) %>%
select(
id, plot, site, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, survey_year, botanist_year, n
)
sites
plot1 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = sand_ratio)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Sand ratio [vol%]")
plot2 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = substrate_depth)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Substrate depth [cm]")
plot3 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = target_type)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Target type")
plot4 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = seed_density)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Seed density [g/m²]")
(plot1 + plot2) / (plot3 + plot4)
plot1 <- ggplot(sites %>% filter(survey_year == 2021),
aes(y = n, x = exposition)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Exposition")
plot2 <- ggplot(sites, aes(y = n, x = survey_year_fct)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Survey year")
plot3 <- ggplot(sites %>% filter(survey_year == 2021), aes(y = n, x = site)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
facet_grid(~ survey_year_fct) +
labs(title = "Blocks")
plot4 <- ggplot(sites, aes(y = n, x = botanist_year)) +
geom_quasirandom(color = "grey") + geom_boxplot(fill = "transparent") +
labs(title = "Botanists and survey year") +
theme(axis.text.x = element_text(angle = 90))
(plot1 + plot2) / (plot3 + plot4)
ggplot(data = sites,
aes(x = sand_ratio, y = n, color = target_type)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(exposition ~ survey_year_fct) +
labs(title = "Target type vs. sand ratio [vol%]")
ggplot(data = sites,
aes(x = sand_ratio, y = n, color = substrate_depth)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(exposition ~ survey_year_fct) +
labs(title = "Substrate depth [cm] vs. sand ratio [vol%]")
ggplot(data = sites,
aes(x = seed_density, y = n, color = target_type)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(exposition ~ survey_year_fct) +
labs(title = "Target type vs. Seed density [g/m²]")
sites %>% group_by(exposition) %>% count(site)
boxplot(sites$n)
ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
ggplot(sites, aes(x = n)) + geom_histogram(binwidth = 0.03)
ggplot(sites, aes(x = n)) + geom_density()
load(file = here("outputs", "models", "model_fcs_2.Rdata"))
load(file = here("outputs", "models", "model_fcs_full.Rdata"))
load(file = here("outputs", "models", "model_fcs_2_prior.Rdata"))
# BARG 5.A/B/C
load(file = here("outputs", "models", "model_fcs_2_flat.Rdata"))
m_1 <- m2
m_2 <- m_full
m_prior <- m2_prior
m_flat <- m2_flat
m_1$formula
m_2$formula
m_1$family
m_2$family
m_1$fit@sim$chains
m_2$fit@sim$chains
m_1$fit@sim$iter
m_2$fit@sim$iter
m_1$fit@sim$warmup
m_2$fit@sim$warmup
m_1$fit@sim$thin
m_2$fit@sim$thin
# Chose variables
variables <- c(
"Intercept",
"b_sand_ratio25",
"b_sand_ratio50",
"b_substrate_depth15",
"b_target_typedry_grassland",
"b_seed_density8",
"b_expositionsouth",
"b_survey_year_fct2019",
"b_survey_year_fct2020",
"b_survey_year_fct2021",
"sd_site__Intercept",
"sd_site:plot__Intercept",
"sigma"
)
# Subset draws
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
posterior2 <- m_2 %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
posterior_prior <- m_prior %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
posterior_flat <- m_flat %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
# R hat
rhat1 <- brms::rhat(m_1)
rhat2 <- brms::rhat(m_2)
# NEFF ratio
neff1 <- brms::neff_ratio(m_1)
neff2 <- brms::neff_ratio(m_2)
# Long format of draws
hmc_diagnostics1 <- brms::nuts_params(m_1)
hmc_diagnostics2 <- brms::nuts_params(m_2)
y <- sites$n
# Posterior predictive distribution
yrep1 <- brms::posterior_predict(m_1, draws = 500)
yrep2 <- brms::posterior_predict(m_2, draws = 500)
yrep_prior <- brms::posterior_predict(m_prior, draws = 500)
# Leave-one-out cross validation based on posterior likelihood
loo1 <- brms::loo(m_1, save_psis = TRUE, moment_match = FALSE)
loo2 <- brms::loo(m_2, save_psis = TRUE, moment_match = FALSE)
# Summary statistics
draws1 <- m_1 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
draws2 <- m_2 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
# Chose variables
variables <- c(
"Intercept",
"b_sand_ratio25",
"b_sand_ratio50",
"b_substrate_depth15",
"b_target_typedry_grassland",
"b_seed_density8",
"b_expositionsouth",
"b_survey_year_fct2019",
"b_survey_year_fct2020",
"b_survey_year_fct2021",
"sd_site__Intercept",
"sd_site:plot__Intercept",
"sigma"
)
# Subset draws
posterior1 <- m_1 %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
posterior2 <- m_2 %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
posterior_prior <- m_prior %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
posterior_flat <- m_flat %>%
posterior::as_draws() %>%
posterior::subset_draws(variable = variables)
# Long format of draws
hmc_diagnostics1 <- m_1 %>% brms::nuts_params()
hmc_diagnostics2 <- m_2 %>% brms::nuts_params()
y <- sites$n
# Posterior predictive distribution
yrep1 <- m_1 %>% brms::posterior_predict(draws = 500)
yrep2 <- m_2 %>% brms::posterior_predict(draws = 500)
yrep_prior <- m_prior %>% brms::posterior_predict(draws = 500)
# Summary statistics
draws1 <- m_1 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
draws2 <- m_2 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
brms::get_prior(n ~ target_type + exposition + sand_ratio + survey_year_fct +
seed_density + substrate_depth +
(1 | site / plot) + (1 | botanist_year),
data = sites)
data <- data.frame(x = c(-5, 5))
ggplot(data, aes(x = x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0, sd = 2)) +
expand_limits(y = 0) +
ggtitle("Normal distribution for Intercept")
ggplot(data, aes(x = x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0.3, sd = 2)) +
expand_limits(y = 0) +
ggtitle("Normal distribution for treatments")
ggplot(data, aes(x = x)) +
stat_function(fun = dcauchy, n = 101, args = list(location = 0, scale = 1)) +
expand_limits(y = 0) +
ggtitle("Cauchy distribution")
ggplot(data, aes(x = x)) +
stat_function(fun = dstudent_t, args = list(df = 3, mu = 0, sigma = 2.5)) +
expand_limits(y = 0) +
ggtitle(expression(Student ~ italic(t) * "-distribution"))
brms::prior_summary(m_1, all = FALSE)
bayesplot::ppc_dens_overlay(yrep_prior[1:500, ])
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ])
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$site) +
coord_cartesian(xlim = c(-2, 2))
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable()
emm <- emmeans(
m_1, revpairwise ~ target_type + sand_ratio | exposition | survey_year_fct,
type = "response"
)
emm$emmeans
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable()
emm <- emmeans(
m_1, revpairwise ~ target_type + sand_ratio | exposition | survey_year_fct,
type = "response"
)
#emm$emmeans
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable()
#emm <- emmeans(
#  m_1, revpairwise ~ target_type + sand_ratio | exposition | survey_year_fct,
#  type = "response"
#  )
#emm$emmeans
posterior1 %>%
posterior::summarize_draws() #%>%
#knitr::kable()
#emm <- emmeans(
#  m_1, revpairwise ~ target_type + sand_ratio | exposition | survey_year_fct,
#  type = "response"
#  )
#emm$emmeans
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable()
#emm <- emmeans(
#  m_1, revpairwise ~ target_type + sand_ratio | exposition | survey_year_fct,
#  type = "response"
#  )
#emm$emmeans
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable()
emm <- emmeans(
m_1, revpairwise ~ target_type + sand_ratio | exposition | survey_year_fct,
type = "response"
)
#emm$emmeans
emm$emmeans
write.csv(draws1, here("outputs", "statistics", "table_fcs.csv"))
write.csv(draws1, here("outputs", "statistics", "table_fcs.csv"))
draws1 %>% tibble()
draws1 %>% as_tibble()
draws1 %>% as_tibble()
draws1 %>% tibble()
draws1 %>%
tibble() %>%
write.csv(here("outputs", "statistics", "table_fcs.csv"))
draws1 %>%
as_tibble() %>%
write.csv(here("outputs", "statistics", "table_fcs.csv"))
draws1 %>%
as_tibble()
test <- draws1 %>%
as_tibble()
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ])
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$site) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$exposition) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$survey_year_fct) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$target_type) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$seed_density) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$sand_ratio) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$substrate_depth) +
coord_cartesian(xlim = c(-2, 2))
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ])
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ])
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ]) %>%
coord_cartesian(ylim = c(0, 2))
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ]) %>%
coord_cartesian(ylim = c(0, 1))
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ]) %>%
coord_cartesian(ylim = c(0, 100))
bayesplot::ppc_dens_overlay(y, yrep_prior[1:500, ]) %>%
coord_cartesian(ylim = c(0, 1000))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$site) +
coord_cartesian(xlim = c(-2, 2))
ppd_dens_overlay_grouped(yrep_prior[1:500, ], group = sites$site) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(yrep_prior[1:500, ], group = sites$site) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(yrep_prior[1:500, ], group = sites$site) +
coord_cartesian(xlim = c(-2, 2))
bayesplot::ppd_dens_overlay(yrep_prior[1:500, ])
bayesplot::ppd_dens_overlay(yrep_prior[1:500, ]) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$exposition) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_overlay_grouped(y, yrep_prior[1:500, ], group = sites$exposition) +
coord_cartesian(xlim = c(-2, 2))
ppd_stat_overlay_grouped(y, yrep_prior[1:500, ], group = sites$exposition) +
coord_cartesian(xlim = c(-2, 2))
ppd_stat_grouped(y, yrep_prior[1:500, ], group = sites$exposition) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(y, yrep_prior[1:500, ], group = sites$exposition) +
coord_cartesian(xlim = c(-2, 2))
ppc_dens_overlay_grouped(y, yrep_prior[1:500, ], group = sites$exposition, binwidth = 0.2) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(y, yrep_prior[1:500, ], group = sites$exposition, binwidth = 0.2) +
coord_cartesian(xlim = c(-2, 2))
ppd_stat_grouped(
yrep_prior[1:500, ], group = sites$substrate_depth, binwidth = 0.2) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$substrate_depth, binwidth = 0.2) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$site, binwidth = 0.2
) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$site, binwidth = 0.1
) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$site, binwidth = 0.4
) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$site, binwidth = 0.5
) +
coord_cartesian(xlim = c(-2, 2))
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$site, binwidth = 0.5
)
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$site, binwidth = 0.2
) +
coord_cartesian(xlim = c(-4, 4))
ppc_stat_grouped(
y, yrep_prior[1:500, ], group = sites$site, binwidth = 0.5
) +
coord_cartesian(xlim = c(-4, 4))
draws1 %>% write.csv(here("outputs", "statistics", "table_fcs.csv"))
draws1 %>% as.data.frame %>% write.csv(here("outputs", "statistics", "table_fcs.csv"))
draws1 %>% as.data.frame #%>% write.csv(here("outputs", "statistics", "table_fcs.csv"))
test <- draws1 %>% as.data.frame
View(test)
draws1 %>% unnest() %>% write.csv(here("outputs", "statistics", "table_fcs.csv"))
draws1 %>% write.csv(here("outputs", "statistics", "table_fcs.csv"))
knitr::opts_chunk$set(
echo = TRUE
)
library(here)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
library(brms)
library(DHARMa.helpers)
library(bayesplot)
library(loo)
library(emmeans)
draws1 %>% write.csv(here("outputs", "statistics", "table_fcs.csv"))
# Summary statistics
draws1 <- m_1 %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_"))
draws1 %>% write.csv(here("outputs", "statistics", "table_fcs.csv"))
rlang::last_error()
draws1 %>% write_csv(here("outputs", "statistics", "table_fcs.csv"))
brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
)
test <- brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
)
View(test)
test <- brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>% tibble()
knitr::opts_chunk$set(
echo = TRUE
)
library(here)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
library(brms)
library(DHARMa.helpers)
library(bayesplot)
library(loo)
library(emmeans)
test <- brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>% tibble()
test
View(test)
test <- brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>% as.data.frame()
test
View(test)
test <- brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>% as.data.frame.matrix()
test
View(test)
m_1 %>% brms::prior_summary(all = FALSE) %>% select(prior, class, coef, source)
brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>%
select(prior, class, coef, group, source)
brms::bayes_factor(m_1, m_2)
brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>%
select(prior, class, coef, group)
brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>%
select(prior, class, coef, group)
brms::get_prior(
n ~ target_type + sand_ratio + seed_density + substrate_depth +
exposition + survey_year_fct + botanist_year + (1 | site / plot),
data = sites
) %>%
select(prior, class, coef, group, source)
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable() %>%
kableExtra::kable_styling(font_size = 10)
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable() %>%
kableExtra::kable_styling(font_size = 10)
posterior1 %>%
posterior::summarize_draws() %>%
knitr::kable() %>%
kableExtra::kable_styling(font_size = 10)
sites %>% group_by(exposition) %>% count(site)
plot1 <- boxplot(sites$n)
plot2 <- ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
plot3 <- ggplot(sites, aes(x = n)) + geom_histogram(binwidth = 0.03)
plot4 <- ggplot(sites, aes(x = n)) + geom_density()
(plot1 + plot2) / (plot3 + plot4)
plot1 <- boxplot(sites$n)
plot2 <- ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
plot1 / plot2
sites %>% group_by(exposition) %>% count(site)
plot1 <- ggplot(sites, aes(x = n)) + geom_boxplot()
plot2 <- ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
plot3 <- ggplot(sites, aes(x = n)) + geom_histogram(binwidth = 0.03)
plot4 <- ggplot(sites, aes(x = n)) + geom_density()
(plot1 + plot2) / (plot3 + plot4)
plot1 <- ggplot(sites, aes(x = n)) + geom_boxplot()
plot2 <- ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
plot3 <- ggplot(sites, aes(x = n)) + geom_histogram(binwidth = 0.03)
plot4 <- ggplot(sites, aes(x = n)) + geom_density()
(plot1 + plot2) / (plot3 + plot4)
plot1 <- ggplot(sites, aes(y = n)) + geom_boxplot()
plot2 <- ggplot(sites, aes(x = exposition, y = n)) + geom_quasirandom()
plot3 <- ggplot(sites, aes(x = n)) + geom_histogram(binwidth = 0.03)
plot4 <- ggplot(sites, aes(x = n)) + geom_density()
(plot1 + plot2) / (plot3 + plot4)
