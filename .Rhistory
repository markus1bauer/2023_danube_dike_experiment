aes(y = n, x = surveyYear_fac, fill = sandRatio),
data = sites,
alpha = 0.5
) +
#scale_y_continuous(limits = c(0, 1), breaks = seq(-100, 400, .25)) +
scale_color_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
scale_fill_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
labs(
x = "", fill = "Sand ratio [%]", color = "Sand ratio [%]",
y = expression(Persistence)
) +
facet_grid(
index ~ exposition,
labeller = as_labeller(
c(south = "South", north = "North",
B = "Losses", C = "Gains", D = "Total")
),
scales = "free",
space = "free"
) +
theme_mb())
(graph_a <- ggplot() +
geom_hline(
yintercept = .5,
linetype = "dashed",
size = .3,
color = "grey70"
) +
geom_quasirandom(
aes(y = n, x = surveyYear_fac, color = sandRatio),
data = sites,
method = "pseudorandom",
alpha = 0.2,
dodge.width = 0.8,
cex = .5
) +
geom_boxplot(
aes(y = n, x = surveyYear_fac, fill = sandRatio),
data = sites,
alpha = 0.5
) +
#scale_y_continuous(limits = c(0, 1), breaks = seq(-100, 400, .25)) +
scale_color_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
scale_fill_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
labs(
x = "", fill = "Sand ratio [%]", color = "Sand ratio [%]",
y = expression(Persistence)
) +
facet_grid(
index ~ exposition,
labeller = as_labeller(
c(south = "South", north = "North",
B = "Losses", C = "Gains", D = "Total")
),
scales = "free"
) +
theme_mb())
(graph_a <- ggplot() +
geom_hline(
yintercept = .5,
linetype = "dashed",
size = .3,
color = "grey70"
) +
geom_quasirandom(
aes(y = n, x = surveyYear_fac, color = sandRatio),
data = sites,
method = "pseudorandom",
alpha = 0.2,
dodge.width = 0.8,
cex = .5
) +
geom_boxplot(
aes(y = n, x = surveyYear_fac, fill = sandRatio),
data = sites,
alpha = 0.5
) +
scale_y_continuous(breaks = seq(-100, 400, .25)) +
scale_color_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
scale_fill_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
labs(
x = "", fill = "Sand ratio [%]", color = "Sand ratio [%]",
y = expression(Persistence)
) +
facet_grid(
index ~ exposition,
labeller = as_labeller(
c(south = "South", north = "North",
B = "Losses", C = "Gains", D = "Total")
),
scales = "free"
) +
theme_mb())
(graph_a <- ggplot() +
geom_hline(
yintercept = .5,
linetype = "dashed",
size = .3,
color = "grey70"
) +
geom_quasirandom(
aes(y = n, x = surveyYear_fac, color = sandRatio),
data = sites,
method = "pseudorandom",
alpha = 0.2,
dodge.width = 0.8,
cex = .5
) +
geom_boxplot(
aes(y = n, x = surveyYear_fac, fill = sandRatio),
data = sites,
alpha = 0.5
) +
facet_grid(
index ~ exposition,
labeller = as_labeller(
c(south = "South", north = "North",
B = "Losses", C = "Gains", D = "Total")
),
scales = "free"
) +
scale_y_continuous(breaks = seq(-100, 400, .25)) +
scale_color_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
scale_fill_manual(values = c("#990000", "#CC6600", "#FFFF00")) +
labs(
x = "", fill = "Sand ratio [%]", color = "Sand ratio [%]",
y = expression(Persistence)
) +
theme_mb())
### Save ###
ggsave(here("outputs", "figures",
"figure_box_persistence_800dpi_25x9cm.tiff"),
dpi = 800, width = 25, height = 9, units = "cm")
ggsave(here("outputs", "figures",
"figure_box_persistence_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
library(brms)
library(DHARMa)
library(bayesplot)
library(loo)
library(tidybayes)
library(emmeans)
library(devtools)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
remotes::install_github("r-lib/rlang")
library(tidyverse)
install.packages("usethis")
install.packages("rlang")
library(tidyverse)
library(tidyverse)
### Start ###
installr::updateR(browse_news = FALSE, install_R = TRUE, copy_packages = TRUE, copy_Rprofile.site = TRUE, keep_old_packages = TRUE, update_packages = TRUE, start_new_R = TRUE, quit_R = TRUE, print_R_versions = TRUE, GUI = FALSE)
renv::update()
### Start ###
installr::updateR(browse_news = FALSE, install_R = TRUE, copy_packages = TRUE, copy_Rprofile.site = TRUE, keep_old_packages = TRUE, update_packages = TRUE, start_new_R = TRUE, quit_R = TRUE, print_R_versions = TRUE, GUI = FALSE)
install.packages("installr")
install.packages("tidyverse")
### Start ###
installr::updateR(browse_news = FALSE, install_R = TRUE, copy_packages = TRUE, copy_Rprofile.site = TRUE, keep_old_packages = TRUE, update_packages = TRUE, start_new_R = TRUE, quit_R = TRUE, print_R_versions = TRUE, GUI = FALSE)
library(tidyverse)
### Packages ###
library(here)
library(tidyverse)
library(naniar) #are_na
library(vegan)
library(adespatial)
library(FD) #dbFD
#remotes::install_github(file.path("inbo", "checklist"))
### Start ###
#installr::updateR(browse_news = FALSE, install_R = TRUE, copy_packages = TRUE, copy_Rprofile.site = TRUE, keep_old_packages = TRUE, update_packages = TRUE, start_new_R = TRUE, quit_R = TRUE, print_R_versions = TRUE, GUI = FALSE)
#checklist::setup_source()
#checklist::check_source()
rm(list = ls())
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
library(brms)
library(DHARMa)
library(bayesplot)
library(loo)
library(tidybayes)
library(emmeans)
### Start ###
rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE, na = c("na", "NA"), col_types =
cols(
.default = "?",
block = "f",
exposition = "f",
sandRatio = "f",
substrateDepth = "f",
seedDensity = "f",
targetType = "f"
)) #%>%
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE,
na = c("na", "NA", ""), col_types =
cols(
.default = "?",
id = "f",
plot = "f",
block = "f",
exposition = col_factor(levels = c("north", "south")),
sandRatio = "f",
substrateDepth = "f",
targetType = "f",
seedDensity = "f"
)) %>%
filter(
!str_detect(id, "C") & presabu == "presence" & surveyYear != "seeded"
) %>%
select(
id, plot, block, exposition, sandRatio, substrateDepth, targetType,
seedDensity, surveyYear, distance_hay
) %>%
mutate(
n = distance_hay,
surveyYear_fac = factor(surveyYear)
)
### a Graphs -----------------------------------------------------------------
#simple effects:
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = exposition)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2020), aes(y = n, x = exposition)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = targetType)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = seedDensity)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = substrateDepth)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = sandRatio)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = block)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites, aes(y = n, x = botanist_year)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites, aes(y = n, x = surveyYear_fac)) +
geom_boxplot() + geom_quasirandom()
#2way
ggplot(sites %>% filter(surveyYear == 2021), aes(x = exposition, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021), aes(x = sandRatio, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021), aes(x = sandRatio, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021), aes(x = substrateDepth, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021), aes(x = sandRatio, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ exposition)
ggplot(sites, aes(x = surveyYear_fac, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ block)
#3way
ggplot(sites, aes(x = exposition, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = exposition, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = exposition, y = n, color = substrateDepth)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = substrateDepth, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = substrateDepth, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ exposition)
ggplot(sites, aes(x = factor(surveyYear), y = n, color = targetType)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ exposition) # Plot for figure
#4way
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = exposition, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(substrateDepth ~ targetType)
ggplot(data = sites,
aes(x = surveyYear_fac, y = n, color = targetType)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(exposition ~ sandRatio)
##### b Outliers, zero-inflation, transformations? ----------------------------
dotchart((sites$n), groups = factor(sites$exposition),
main = "Cleveland dotplot")
sites %>% group_by(exposition) %>% count(block)
boxplot(sites$n)
plot(table((sites$n)), type = "h",
xlab = "Observed values", ylab = "Frequency")
ggplot(sites, aes(x = n)) + geom_density()
ggplot(sites, aes(sqrt(n))) + geom_density()
iter = 10000
iter = 1000#10000
chains = 3#4
thin = 2
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE,
na = c("na", "NA", ""), col_types =
cols(
.default = "?",
id = "f",
plot = "f",
block = "f",
exposition = col_factor(levels = c("north", "south")),
sandRatio = "f",
substrateDepth = "f",
targetType = "f",
seedDensity = "f"
)) %>%
filter(
!str_detect(id, "C") & presabu == "presence" & surveyYear != "seeded"
) %>%
select(
id, plot, block, exposition, sandRatio, substrateDepth, targetType,
seedDensity, surveyYear, botanist_year, distance_hay
) %>%
mutate(
n = distance_hay,
surveyYear_fac = factor(surveyYear)
)
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE,
na = c("na", "NA", ""), col_types =
cols(
.default = "?",
id = "f",
plot = "f",
block = "f",
exposition = col_factor(levels = c("north", "south")),
sandRatio = "f",
substrateDepth = "f",
targetType = "f",
seedDensity = "f"
)) #%>%
View(sites)
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE,
na = c("na", "NA", ""), col_types =
cols(
.default = "?",
id = "f",
plot = "f",
block = "f",
exposition = col_factor(levels = c("north", "south")),
sandRatio = "f",
substrateDepth = "f",
targetType = "f",
seedDensity = "f"
)) %>%
filter(
!str_detect(id, "C") & presabu == "presence" & surveyYear != "seeded"
) %>%
select(
id, plot, block, exposition, sandRatio, substrateDepth, targetType,
seedDensity, surveyYear, distance_hay
) %>%
mutate(
n = distance_hay,
surveyYear_fac = factor(surveyYear),
botanist_year = str_c(botanist, surveyYear, sep = " "),
botanist_year = factor(botanist_year)
)
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE,
na = c("na", "NA", ""), col_types =
cols(
.default = "?",
id = "f",
plot = "f",
block = "f",
exposition = col_factor(levels = c("north", "south")),
sandRatio = "f",
substrateDepth = "f",
targetType = "f",
seedDensity = "f"
)) %>%
filter(
!str_detect(id, "C") & presabu == "presence" & surveyYear != "seeded"
) %>%
mutate(
n = distance_hay,
surveyYear_fac = factor(surveyYear),
botanist_year = str_c(botanist, surveyYear, sep = " "),
botanist_year = factor(botanist_year)
) %>%
select(
id, plot, block, botanist_year, exposition, sandRatio, substrateDepth, targetType,
seedDensity, surveyYear, n
)
### a Graphs -----------------------------------------------------------------
#simple effects:
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = exposition)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites, aes(x = surveyYear_fac, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ botanist_year)
ggplot(sites, aes(x = botanist_year, y = n)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites, aes(x = botanist_year, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ exposition)
m_simple <- brm(n ~ targetType + exposition + sandRatio + surveyYear_fac +
seedDensity + substrateDepth +
(1 | block/plot) + (1 | botanist_year) + (1 | exposition),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 3)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE,
na = c("na", "NA", ""), col_types =
cols(
.default = "?",
id = "f",
plot = "f",
block = "f",
exposition = col_factor(levels = c("north", "south")),
sandRatio = "f",
substrateDepth = "f",
targetType = "f",
seedDensity = "f"
)) %>%
filter(
!str_detect(id, "C") & presabu == "presence" & surveyYear != "seeded"
) %>%
mutate(
n = distance_hay,
surveyYear_fac = factor(surveyYear),
botanist_year = str_c(botanist, surveyYear, sep = " "),
botanist_year = factor(botanist_year)
) %>%
select(
id, plot, block, botanist_year, exposition, sandRatio, substrateDepth, targetType,
seedDensity, surveyYear_fac, n
)
m_simple <- brm(n ~ targetType + exposition + sandRatio + surveyYear_fac +
seedDensity + substrateDepth +
(1 | block/plot) + (1 | botanist_year) + (1 | exposition),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 3)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
iter = 500#10000
chains = 3#4
thin = 2
m_simple <- brm(n ~ targetType + exposition + sandRatio + surveyYear_fac +
seedDensity + substrateDepth +
(1 | block/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 2)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
