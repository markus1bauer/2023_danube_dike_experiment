scale_fill_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression("Persistence [%]")
) +
theme_mb())
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
geom_hline(
yintercept = c(25, 75),
linetype = "dashed",
linewidth = .3,
color = "black"
) +
geom_hline(
yintercept = c(50),
linetype = "solid",
linewidth = .3,
color = "black"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(0, 100), breaks = seq(-100, 400, 10)) +
scale_color_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
scale_fill_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression("Persistence [%]")
) +
theme_mb())
ggsave(here("outputs", "figures",
"figure_4_persistence_epred_800dpi_27x9cm.tiff"),
dpi = 800, width = 27, height = 9, units = "cm")
p1 + theme(legend.position = "bottom")
ggsave(here("outputs", "figures",
"figure_4_persistence_epred_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
### Packages ###
library(here)
library(tidyverse)
suppressPackageStartupMessages(library(brms))
suppressPackageStartupMessages(library(tidybayes))
library(ggbeeswarm)
### Start ###
rm(list = setdiff(ls(), c("graph_a", "graph_b", "graph_c", "graph_d")))
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE,
na = c("na", "NA", ""), col_types =
cols(
.default = "?",
id = "f",
plot = "f",
site = "f",
exposition = col_factor(levels = c("north", "south")),
sand_ratio = "f",
substrate_depth = col_factor(levels = c("30", "15")),
target_type = "f",
seed_density = "f"
)) %>%
filter(survey_year != "seeded") %>%
mutate(
n = fcs_target,
survey_year_fct = factor(survey_year),
botanist_year = str_c(survey_year_fct, botanist, sep = "_"),
botanist_year = str_replace_all(botanist_year, " ", "_")
) %>%
select(
id, plot, site, botanist_year, exposition, sand_ratio, substrate_depth, target_type,
seed_density, survey_year_fct, n
)
### * Model ####
load(file = "model_fcs_3.Rdata")
model <- sites %>%
add_epred_draws(m3, allow_new_levels = TRUE)
### * Functions ####
theme_mb <- function() {
theme(
panel.background = element_rect(fill = "white"),
text = element_text(size = 9, color = "black"),
strip.text = element_text(size = 10),
axis.text = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.title = element_text(angle = 0, hjust = 0.5, size = 9,
color = "black"),
axis.line = element_line(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
legend.margin = margin(0, 0, 0, 0, "cm"),
plot.margin = margin(0, 0, 0, 0, "cm")
)
}
## 1 Marginal effects #########################################################
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
stat_pointinterval(
aes(y = .prediction, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
scale_fill_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
stat_pointinterval(
aes(y = .prediction, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
scale_fill_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
stat_pointinterval(
aes(y = .pred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
scale_fill_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
scale_fill_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
ggsave(here("outputs", "figures",
"figure_3_fcs_epred_800dpi_27x9cm.tiff"),
dpi = 800, width = 27, height = 9, units = "cm")
p1 + theme(legend.position = "bottom")
ggsave(here("outputs", "figures",
"figure_3_fcs_epred_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
(p1 <- ggplot(data = sites) +
geom_quasirandom(
aes(y = n, x = sand_ratio, color = target_type),
alpha = 0.2,
dodge.width = 0.9,
cex = .5
) +
geom_hline(
yintercept = 0,
linetype = "dashed",
linewidth = .3,
color = "black"
) +
stat_pointinterval(
aes(y = .epred, x = sand_ratio, color = target_type),
data = model,
.width = c(0.66, 0.95),
point_size = 2,
position = "dodge"
) +
facet_grid(
exposition ~ survey_year_fct,
labeller = as_labeller(
c(south = "South", north = "North",
"2018" = "2018", "2019" = "2019", "2020" = "2020", "2021" = "2021")
)
) +
scale_y_continuous(limits = c(-2.8, 1.9), breaks = seq(-100, 400, 1)) +
scale_color_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
scale_fill_manual(labels = c("Hay meadow", "Dry grassland"),
values = c("#00BFC4", "#F8766D")) +
labs(
x = "Sand ratio [%]", fill = "", color = "",
y = expression(
Favourable ~ Conservation ~ Status ~ "(FCS)"
)
) +
theme_mb())
ggsave(here("outputs", "figures",
"figure_3_fcs_epred_800dpi_27x9cm.tiff"),
dpi = 800, width = 27, height = 9, units = "cm")
p1 + theme(legend.position = "bottom")
ggsave(here("outputs", "figures",
"figure_3_fcs_epred_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
m3 %>%
gather_draws(
b_sand_ratio25, b_sand_ratio50, b_substrate_depth30,
b_target_typehay_meadow, b_seed_density8,
b_expositionsouth, b_survey_year_fct2019,
b_survey_year_fct2020, b_survey_year_fct2021
) %>%
mutate(
.variable = as.factor(.variable),
.variable = fct_relevel(
.variable, "b_sand_ratio25", "b_sand_ratio50", "b_substrate_depth30",
"b_target_typehay_meadow", "b_seed_density8",
"b_expositionsouth", "b_survey_year_fct2019",
"b_survey_year_fct2020", "b_survey_year_fct2021"
),
.variable = fct_relevel(.variable, rev),
.variable = fct_recode(
.variable,
"Dry grassland vs. hay meadow" = "b_target_typehay_meadow",
"Sand ratio: 0 vs. 25 %" = "b_sand_ratio25",
"Sand ratio: 0 vs. 50 %" = "b_sand_ratio50",
"Substrate depth: 15 vs. 30 cm" = "b_substrate_depth30",
"Seed density: 4 vs. 8 g/mÂ²" = "b_seed_density8",
"North vs. south" = "b_expositionsouth",
"2018 vs. 2019" = "b_survey_year_fct2019",
"2018 vs. 2020" = "b_survey_year_fct2020",
"2018 vs. 2021" = "b_survey_year_fct2021"
)
) %>%
ggplot(aes(x = .value, y = .variable)) +
stat_halfeye() +
geom_vline(xintercept = 0, linetype = "dashed") +
labs(x = expression(Delta ~ Favourabale ~ Conservation ~ Status ~ "(FCS)"), y = "") +
theme_mb()
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_27x9cm.tiff"),
dpi = 800, width = 27, height = 9, units = "cm")
ggsave(here("outputs", "figures",
"figure_3_fcs_coef_800dpi_16.5x14cm.tiff"),
dpi = 800, width = 16.5, height = 14, units = "cm")
### Packages ###
library(here)
library(tidyverse)
renv::status()
### Packages ###
library(here)
library(tidyverse)
library(vegan)
### Packages ###
library(here)
library(tidyverse)
lirary(Matrix)
library(Matrix)
library(tidyverse)
devtools::install_github("RobinHankin/Brobdingnag")
devtools::install_github("RobinHankin/Brobdingnag", force = TRUE)
library(tidyverse)
renv::status()
renv::snapshot()
### Packages ###
library(here)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
remove.packages("rlang")
remove.packages("tidyselect")
remove.packages("tidyverse")
install.packages("rlang", dependencies = TRUE)
install.packages("tidyselect", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
install.packages("tidyselect", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
### Packages ###
library(here)
library(tidyverse)
### Packages ###
library(here)
library(tidyverse)
library(Matrix)
library(rlang)
library(dbplyr)
devtools::install_github("RobinHankin/Brobdingnag")
install.packages("devtools")
devtools::install_github("RobinHankin/Brobdingnag", force = TRUE)
library(tidyverse)
library(dbplyr)
library(dbplyr)
remove.packages("dbplyr")
install.packages("dbplyr")
library(dbplyr)
remove.packages("Matrix", lib="C:/Users/marku/AppData/Local/Temp/RtmpYXD3dh/renv-system-library")
library(dbplyr)
install.packages("dbplyr")
library(dbplyr)
library(dbplyr)
devtools::install_github("RobinHankin/Brobdingnag")
remove.packages("Brobdingnag")
devtools::install_github("RobinHankin/Brobdingnag")
library(dbplyr)
remove.packages("Matrix")
library(dbplyr)
remove.packages("index")
library(dbplyr)
install.packages("Matrix")
library(dbplyr)
devtools::install_github("RobinHankin/Brobdingnag")
devtools::install_github("RobinHankin/Brobdingnag", force = TRUE)
library(dblyr)
library(dbplyr)
library(dplyr)
library(tidyverse)
devtools::install_github("RobinHankin/Brobdingnag", force = TRUE)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
library(tidyverse)
install.packages(c("installr", "jsonify", "modelr", "plyr", "R.utils", "Rcpp", "rgdal", "rmarkdown", "roxygen2", "rredlist", "sf", "stars"))
install.packages("Matrix", lib="C:/Users/marku/AppData/Local/Temp/RtmpURFDK8/renv-system-library")
remove.package("Rcpp")
remove.packages("Rcpp")
install.packages("Rcpp", version='1.0.8.3')
### Packages ###
library(here)
library(tidyverse)
install.packages("tidyselect")
install.packages("tidyselect", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE)
renv::status()
devtools::install_github("RobinHankin/Brobdingnag")
devtools::install_github("RobinHankin/Brobdingnag", force = TRUE)
library(tidyverse)
### Packages ###
library(here)
library(tidyverse)
remove.packages("tidyverse")
remove.packages("tidyselect")
install.packages("tidyselect")
install.packages("tidyselect", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
installed.packages("devtools", dependencies = TRUE)
install.packages("devtools")
devtools::install_github("RobinHankin/Brobdingnag")
devtools::install_github("RobinHankin/Brobdingnag", force = TRUE)
install.packages("tidyverse")
library(tidyverse)
install.packages("Matrix", lib="C:/Users/marku/AppData/Local/Temp/Rtmpc16O21/renv-system-library")
install.packages("tidyselect")
install.packages("tidyverse")
devtools::install_github("RobinHankin/Brobdingnag")
install.packages("tidyverse")
install.packages("tidyselect")
library(tidyverse)
install.packages("Matrix", lib="C:/Users/marku/AppData/Local/Temp/RtmpekYWA5/renv-system-library")
### Packages ###
library(renv)
library(here)
### Packages ###
suppressPackageStartupMessages(library(renv))
library(here)
library(tidyverse)
remove.packages("rlang")
remove.packages("tidyselect")
remove.packages("tidyverse")
remove.packages("Brobdingnag")
remove.packages("rlang")
remove.packages("tidyselect")
remove.packages("tidyverse")
remove.packages("Brobdingnag")
devtools::install_github("RobinHankin/Brobdingnag")
install.packages("rlang", dependencies = TRUE)
install.packages("tidyselect", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
remove.packages("dbplyr")
install.packages("dbplyr", dependencies = TRUE)
library(tidyverse)
remove.packages("rlang")
remove.packages("tidyselect")
remove.packages("tidyverse")
remove.packages("Brobdingnag")
remove.packages("dbplyr")
devtools::install_github("RobinHankin/Brobdingnag")
install.packages("rlang", dependencies = TRUE)
install.packages("tidyselect", dependencies = TRUE)
install.packages("dbplyr", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
