)
mcmc_intervals(
m,
pars = c("targetTypedry_grassland", "expositionnorth"),
prob = 0.5,
prob_outer = 0.95,
point_est = "mean"
)
mcmc_intervals(
m,
pars = c("b_targetTypedry_grassland", "expositionnorth"),
prob = 0.5,
prob_outer = 0.95,
point_est = "mean"
)
mcmc_intervals(
m,
pars = c("b_targetTypedry_grassland", "b_expositionnorth"),
prob = 0.5,
prob_outer = 0.95,
point_est = "mean"
)
### MCMC diagnostics ###
mcmc_trace(
posterior,
facet_args = list(ncol = 2, labeller = label_parsed)
)
bayesplot::mcmc_pairs(
m,
pars = c("exposition", "targetType", "surveyYear_fac")
)
bayesplot::mcmc_pairs(
m,
pars = c("b_exposition_north", "b_targetTypedry_grassland")
)
bayesplot::mcmc_pairs(
m,
pars = c("b_exposition_north", "b_targetTypedry_grassland")
)
bayesplot::mcmc_pairs(
m,
pars = c("b_expositionnorth", "b_targetTypedry_grassland")
)
mcmc_parcoord(
m,
pars = c(
"b_expositionnorth",
"b_targetTypedry_grassland"
)
facet_args = list(ncol = 2, labeller = label_parsed)
)
mcmc_parcoord(
m,
pars = c(
"b_expositionnorth",
"b_targetTypedry_grassland"
),
facet_args = list(ncol = 2, labeller = label_parsed)
)
mcmc_parcoord(
m,
pars = c(
"b_expositionnorth",
"b_targetTypedry_grassland"
),
np = np_cp
)
np_ncp <- nuts_params(m)
np_cp <- nuts_params(m)
mcmc_parcoord(
m,
pars = c(
"b_expositionnorth",
"b_targetTypedry_grassland"
),
np = np_cp
)
color_scheme_set("darkgray")
mcmc_parcoord(
m,
pars = c(
"b_expositionnorth",
"b_targetTypedry_grassland"
),
np = np_cp
)
mcmc_parcoord(
posterior,
np = hmc_diagnostics
)
hmc_diagnostics <- nuts_params(m)
mcmc_parcoord(
posterior,
np = hmc_diagnostics
)
bayesplot::mcmc_pairs(
m,
pars = c(
"b_expositionnorth",
"b_targetTypedry_grassland"
)
)
posterior <- m %>%
posterior::as_draws() %>%
posterior::subset_draws(
variable = c(
"b_expositionnorth",
"b_sandRatio25",
"b_sandRatio50",
"b_targetTypedry_grassland",
"b_surveyYear_fac2019",
"b_surveyYear_fac2020",
"b_surveyYear_fac2021",
"sd_block__Intercept",
"sigma"
)
)
### Samling efficency/effectiveness (Rhat and EFF) ###
(draws <- m %>%
posterior::as_draws() %>%
posterior::summarize_draws() %>%
filter(str_starts(variable, "b_")))
View(draws)
bayesplot::mcmc_pairs(
posterior
)
### MCMC diagnostics ###
mcmc_trace(
posterior
)
### MCMC diagnostics ###
mcmc_trace(
posterior,
facet_args = list(ncol = 2, labeller = label_parsed)
)
### MCMC diagnostics ###
mcmc_trace(posterior)
mcmc_pairs(posterior)
mcmc_parcoord(posterior, np = hmc_diagnostics, off_diag_args = list(size = 0.75))
mcmc_pairs(posterior, off_diag_args = list(size = 0.75))
mcmc_pairs(posterior, off_diag_args = list(size = 1))
mcmc_pairs(posterior, off_diag_args = list(size = 1.2))
mcmc_scatter(m,
pars = c("theta[1]", "tau"),
np = hmc_diagnostics,
size = 1)
mcmc_scatter(m,
pars = c("sigma", "tau"),
np = hmc_diagnostics,
size = 1)
mcmc_scatter(m,
pars = c("sigma"),
np = hmc_diagnostics,
size = 1)
mcmc_scatter(m,
pars = c("exposition", "sigma"),
np = hmc_diagnostics,
size = 1)
mcmc_scatter(m,
pars = c("expositionnorth", "sigma"),
np = hmc_diagnostics,
size = 1)
mcmc_scatter(m,
pars = c("b_expositionnorth", "sigma"),
np = hmc_diagnostics,
size = 1)
mcmc_scatter(m,
pars = c("b_surveyYear_fac2020", "b_surveyYear_fac2020"),
np = hmc_diagnostics,
size = 1)
mcmc_scatter(m,
pars = c("b_surveyYear_fac2020", "b_surveyYear_fac2019"),
np = hmc_diagnostics,
size = 1)
mcmc_parcoord(posterior,
pars = c("b_surveyYear_fac2020", "b_surveyYear_fac2019"),
np = hmc_diagnostics)
### MCMC diagnostics ###
mcmc_trace(posterior)
mcmc_intervals(
posterior,
prob = 0.5,
prob_outer = 0.95,
point_est = "mean"
)
View(draws)
ggplot(data = sites,
aes(x = surveyYear_fac, y = n, color = targetType)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(substrateDepth ~ sandRatio)
ggplot(data = sites,
aes(x = surveyYear_fac, y = n, color = targetType)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(seedDensity ~ sandRatio)
ggplot(data = sites,
aes(x = surveyYear_fac, y = n, color = targetType)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(exposition ~ sandRatio)
ggplot(sites, aes(x = sandRatio, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ block)
ggplot(sites, aes(x = exposition, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ block)
ggplot(sites, aes(x = targetType, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ block)
ggplot(sites, aes(x = exposition, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ block)
ggplot(sites, aes(x = surveyYear_fac, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ block)
yrep <- posterior_predict(m, draws = 500)
### Posterior predictive check ###
ppc_dens_overlay(y, yrep[1:50, ])
ppc_stat(y, yrep, binwidth = 0.001)
ppc_stat_grouped(m)
ppc_stat_grouped(y, yrep, binwidth = 0.001)
### MCMC diagnostics ###
mcmc_trace(posterior, np = hmc_diagnostics)
mcmc_rhat(rhat(m))
mcmc_rhat(m
mcmc_rhat(m)
mcmc_rhat(m)
range(draws$rhat)
range(draws$ess_bulk)
range(draws$ess_tail)
### Autocorrelation ###
mcmc_acf(posterior, lags = 10)
### Posterior predictive check ###
ppc_dens_overlay(y, yrep[1:50, ])
bayes_factor(m12, m22, log = TRUE)
ppc_dens_overlay(posterior)
ppc_dens_overlay_grouped(y, yrep, group = sites$block)
ppc_dens_overlay_grouped(y, yrep[1:50, ], group = sites$block)
ppc_dens_overlay_grouped(y, yrep[1:50, ], group = sites$exposition)
ppc_dens_overlay_grouped(y, yrep[1:50, ], group = sites$surveyYear_fac)
ppc_dens_overlay_grouped(y, yrep[1:50, ], group = sites$targetType)
ppc_dens_overlay_grouped(y, yrep[1:50, ], group = sites$seedDensity)
ppc_dens_overlay_grouped(y, yrep[1:50, ], group = sites$sandRatio)
ppc_dens_overlay_grouped(y, yrep[1:50, ], group = sites$substrateDepth)
ppc_stat(y, yrep, binwidth = 0.001)
ppc_stat_grouped(y, yrep, group = sites$block, binwidth = 0.001)
ppc_stat_grouped(y, yrep, group = sites$exposition, binwidth = 0.001)
ppc_stat_grouped(y, yrep, group = sites$surveyYear_fac, binwidth = 0.001)
ppc_stat_grouped(y, yrep, group = sites$targetType, binwidth = 0.001)
ppc_stat_grouped(y, yrep, group = sites$seedDensity, binwidth = 0.001)
ppc_stat_grouped(y, yrep, group = sites$sandRatio, binwidth = 0.001)
ppc_stat_grouped(y, yrep, group = sites$substrateDepth, binwidth = 0.001)
ppc_loo_pit_qq(m)
ppc_loo_pit_overlay(y, yrep)
loo <- loo(m, save_psis = TRUE)
loo <- loo(m, save_psis = TRUE, moment_match = TRUE)
#### LOO-PIT plots
ppc_loo_pit_overlay(y, yrep, lw = weights(loo$psis_object))
psis <-m %>%
as.matrix(pars = "log_lik") %>%
psislw()
loglik <- m %>% as.matrix(pars = "log_lik")
loglik <- m %>% as.matrix(variable = "log_lik")
loglik <- m %>% as.matrix(variable = "log_lik")
psis <- psis(m)
psis <- loo::psis(m)
loglik <- m %>% as.matrix(pars = "log_lik")
psis <- psis(m)
psis <- loo::psis(m)
log_ratios <- -1 * example_loglik_array()
library(loo)
log_ratios <- -1 * example_loglik_array()
r_eff <- relative_eff(exp(-log_ratios))
psis_result <- psis(log_ratios, r_eff = r_eff)
log_ratios <- as.matrix(m)
r_eff <- relative_eff(exp(-log_ratios))
log_ratios <- as.matrix(log(m))
log_ratios <- log(as.matrix(m))
log_ratios <- log(as.matrix(m) + 1)
log_ratios <- as.matrix(m)
r_eff <- relative_eff(-log_ratios)
psis_result <- psis(log_ratios, r_eff = r_eff)
### Start ###
rm(list = ls())
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
library(brms)
library(DHARMa)
library(bayesplot)
library(loo)
library(tidybayes)
library(emmeans)
### Start ###
#rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv",
col_names = TRUE, na = c("na", "NA"), col_types =
cols(
.default = "?",
block = "f",
exposition = "f",
sandRatio = "f",
substrateDepth = "f",
seedDensity = "f",
targetType = "f"
)) %>%
filter(
!str_detect(id, "C") & presabu == "presence" & surveyYear != "seeded"
) %>%
mutate(
n = fcs_target,
surveyYear_fac = factor(surveyYear),
targetType = factor(targetType),
botanist_year = str_c(botanist, surveyYear, sep = " "),
botanist_year = factor(botanist_year),
surveyYear = as.double(surveyYear)
) %>%
select(
id, plot, block, exposition, sandRatio, substrateDepth, targetType,
seedDensity, surveyYear_fac, surveyYear, botanist_year, n
)
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Statistics ################################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## 1 Data exploration ########################################################
### a Graphs -----------------------------------------------------------------
#simple effects:
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = exposition)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2020), aes(y = n, x = exposition)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = targetType)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = seedDensity)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = substrateDepth)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = sandRatio)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites %>% filter(surveyYear == 2021), aes(y = n, x = block)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites, aes(y = n, x = botanist_year)) +
geom_boxplot() + geom_quasirandom()
ggplot(sites, aes(y = n, x = surveyYear_fac)) +
geom_boxplot() + geom_quasirandom()
#2way
ggplot(sites %>% filter(surveyYear == 2021), aes(x = exposition, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021), aes(x = sandRatio, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021), aes(x = substrateDepth, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021), aes(x = sandRatio, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ exposition)
ggplot(sites, aes(x = surveyYear_fac, y = n)) +
geom_boxplot() + geom_quasirandom() +
facet_wrap(~ block)
#3way
ggplot(sites, aes(x = exposition, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = exposition, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = exposition, y = n, color = substrateDepth)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = substrateDepth, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ targetType)
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = substrateDepth, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ exposition)
ggplot(sites, aes(x = factor(surveyYear), y = n, color = targetType)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_wrap(~ exposition) # Plot for figure
#4way
ggplot(sites %>% filter(surveyYear == 2021),
aes(x = exposition, y = n, color = sandRatio)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(substrateDepth ~ targetType)
ggplot(data = sites,
aes(x = surveyYear_fac, y = n, color = targetType)) +
geom_quasirandom(alpha = 0.5, dodge.width = 0.8) +
geom_boxplot(fill = "transparent") +
facet_grid(exposition ~ sandRatio)
##### b Outliers, zero-inflation, transformations? ----------------------------
dotchart((sites$n), groups = factor(sites$exposition),
main = "Cleveland dotplot")
sites %>% group_by(exposition) %>% count(block)
boxplot(sites$n)
plot(table((sites$n)), type = "h",
xlab = "Observed values", ylab = "Frequency")
ggplot(sites, aes(x = n)) + geom_density()
ggplot(sites, aes(sqrt(n))) + geom_density()
## 2 Model building ###########################################################
### a models -----------------------------------------------------------------
iter = 1000#10000
chains = 3#4
thin = 2
m_simple1 <- brm(n ~ targetType + exposition + sandRatio + surveyYear_fac +
seedDensity + substrateDepth +
(1 | block/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 3)", class = "b"),
set_prior("normal(0, 3)", class = "b", coef = "expositionnorth"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m_full1 <- brm(n ~ (targetType + exposition + sandRatio + surveyYear_fac +
seedDensity + substrateDepth)^3 +
targetType:sandRatio:exposition:surveyYear_fac +
substrateDepth:sandRatio:exposition:surveyYear_fac +
(1 | block/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 3)", class = "b"),
set_prior("normal(0, 3)", class = "b", coef = "expositionnorth"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m31 <- brm(n ~ (targetType + exposition + sandRatio + surveyYear_fac)^2 +
substrateDepth:sandRatio +
seedDensity:exposition +
targetType:exposition:surveyYear_fac +
sandRatio:exposition:surveyYear_fac +
seedDensity:exposition:surveyYear_fac +
(1 | block/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("normal(0, 3)", class = "b"),
set_prior("normal(0, 3)", class = "b", coef = "expositionnorth"),
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m_full1_flat <- brm(n ~ (targetType + exposition + sandRatio + surveyYear_fac +
seedDensity + substrateDepth)^3 +
targetType:sandRatio:exposition:surveyYear_fac +
substrateDepth:sandRatio:exposition:surveyYear_fac +
(1 | block/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
m31_flat <- brm(n ~ (targetType + exposition + sandRatio + surveyYear_fac)^2 +
substrateDepth:sandRatio +
seedDensity:exposition +
targetType:exposition:surveyYear_fac +
sandRatio:exposition:surveyYear_fac +
seedDensity:exposition:surveyYear_fac +
(1 | block/plot) + (1 | botanist_year),
data = sites,
family = gaussian("identity"),
prior = c(
set_prior("cauchy(0, 1)", class = "sigma")
),
chains = chains,
iter = iter,
thin = thin,
warmup = floor(iter / 2),
save_pars = save_pars(all = TRUE),
cores = parallel::detectCores(),
seed = 123)
